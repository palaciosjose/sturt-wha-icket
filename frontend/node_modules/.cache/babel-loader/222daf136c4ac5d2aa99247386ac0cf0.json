{"ast":null,"code":"import{useState}from\"react\";import toastError from\"../../errors/toastError\";import api from\"../../services/api\";const useFiles=()=>{const[loading,setLoading]=useState(false);const[hasMore,setHasMore]=useState(false);const[files,setFiles]=useState([]);const list=async _ref=>{let{companyId,userId,searchParam=\"\",pageNumber=\"1\"}=_ref;setLoading(true);try{const{data}=await api.get(\"/files/\",{params:{searchParam,pageNumber,companyId}});// Cargar detalles completos de cada lista de archivos\nconst filesWithDetails=await Promise.all(data.files.map(async fileList=>{try{const{data:fileDetails}=await api.get(`/files/${fileList.id}`);return fileDetails;// Esto incluye la propiedad 'options' con los archivos\n}catch(err){console.error(`Error cargando detalles de lista ${fileList.id}:`,err);return fileList;// Retornar lista bÃ¡sica si falla\n}}));setFiles(filesWithDetails);setHasMore(data.hasMore);setLoading(false);return filesWithDetails;}catch(err){setLoading(false);toastError(err);return[];}};const show=async fileId=>{try{const{data}=await api.get(`/files/${fileId}`);return data;}catch(err){toastError(err);return null;}};return{files,loading,hasMore,list,show};};export default useFiles;","map":null,"metadata":{},"sourceType":"module"}