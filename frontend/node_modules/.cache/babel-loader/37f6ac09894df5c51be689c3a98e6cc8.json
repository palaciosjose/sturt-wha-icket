{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\whaticket03\\\\waticketsaas\\\\frontend\\\\src\\\\components\\\\MessagesList\\\\index.js\";\nimport React, { useState, useEffect, useReducer, useRef, useContext } from \"react\";\nimport { isSameDay, parseISO, format } from \"date-fns\";\nimport clsx from \"clsx\";\nimport { green } from \"@material-ui/core/colors\";\nimport { Button, CircularProgress, IconButton, makeStyles, Badge } from \"@material-ui/core\";\nimport { AccessTime, Block, Done, DoneAll, ExpandMore, GetApp, Reply } from \"@material-ui/icons\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport ModalImageCors from \"../ModalImageCors\";\nimport MessageOptionsMenu from \"../MessageOptionsMenu\";\nimport whatsBackground from \"../../assets/wa-background.png\";\nimport LocationPreview from \"../LocationPreview\";\nimport whatsBackgroundDark from \"../../assets/wa-background-dark.png\"; //DARK MODE PLW DESIGN//\nimport VCardPreview from \"../VCardPreview\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { ForwardMessageContext } from \"../../context/ForwarMessage/ForwardMessageContext\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport SelectMessageCheckbox from \"./SelectMessageCheckbox\";\nimport { i18n } from \"../../translate/i18n\";\n\n// Función para formatear el tamaño del archivo\nconst formatFileSize = bytes => {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'kB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n};\nconst useStyles = makeStyles(theme => ({\n  messagesListWrapper: {\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    width: \"100%\",\n    minWidth: 300,\n    minHeight: 200\n  },\n  messagesList: {\n    backgroundImage: theme.mode === 'light' ? `url(${whatsBackground})` : `url(${whatsBackgroundDark})`,\n    //DARK MODE PLW DESIGN//\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    padding: \"20px 20px 20px 20px\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles\n  },\n  circleLoading: {\n    color: green[500],\n    position: \"absolute\",\n    opacity: \"70%\",\n    top: 0,\n    left: \"50%\",\n    marginTop: 12\n  },\n  messageLeft: {\n    marginRight: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#3b82f6\",\n    color: \"#ffffff\",\n    alignSelf: \"flex-start\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\"\n  },\n  quotedContainerLeft: {\n    margin: \"-3px -80px 6px -6px\",\n    overflow: \"hidden\",\n    backgroundColor: \"#f0f0f0\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\"\n  },\n  quotedMsg: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\"\n  },\n  quotedSideColorLeft: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#6bcbef\"\n  },\n  messageRight: {\n    marginLeft: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#10b981\",\n    color: \"#ffffff\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 0,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\"\n  },\n  quotedContainerRight: {\n    margin: \"-3px -80px 6px -6px\",\n    overflowY: \"hidden\",\n    backgroundColor: \"#cfe9ba\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\"\n  },\n  quotedMsgRight: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    whiteSpace: \"pre-wrap\"\n  },\n  quotedSideColorRight: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\"\n  },\n  messageActionsButton: {\n    display: \"none\",\n    position: \"relative\",\n    color: \"#999\",\n    zIndex: 1,\n    backgroundColor: \"inherit\",\n    opacity: \"90%\",\n    \"&:hover, &.Mui-focusVisible\": {\n      backgroundColor: \"inherit\"\n    }\n  },\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500\n  },\n  textContentItem: {\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\"\n  },\n  textContentItemEdited: {\n    overflowWrap: \"break-word\",\n    padding: \"3px 120px 6px 6px\"\n  },\n  textContentItemDeleted: {\n    fontStyle: \"italic\",\n    color: \"rgba(0, 0, 0, 0.36)\",\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\"\n  },\n  forwardMessage: {\n    fontSize: 12,\n    fontStyle: \"italic\",\n    position: \"absolute\",\n    top: 0,\n    left: 5,\n    color: \"#999\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  messageMedia: {\n    objectFit: \"cover\",\n    width: 250,\n    height: 200,\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8\n  },\n  timestamp: {\n    fontSize: 11,\n    position: \"absolute\",\n    bottom: 0,\n    right: 5,\n    color: \"#999\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  dailyTimestamp: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    width: \"110px\",\n    backgroundColor: \"#e1f3fb\",\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 1px 1px #b3b3b3\"\n  },\n  dailyTimestampText: {\n    color: \"#808888\",\n    padding: 8,\n    alignSelf: \"center\",\n    marginLeft: \"0px\"\n  },\n  ackIcons: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4\n  },\n  deletedIcon: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginRight: 4\n  },\n  ackDoneAllIcon: {\n    color: green[500],\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4\n  },\n  downloadMedia: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"inherit\",\n    padding: 10\n  }\n}));\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_MESSAGES\") {\n    const messages = action.payload;\n    const newMessages = [];\n    messages.forEach(message => {\n      const messageIndex = state.findIndex(m => m.id === message.id);\n      if (messageIndex !== -1) {\n        state[messageIndex] = message;\n      } else {\n        newMessages.push(message);\n      }\n    });\n    return [...newMessages, ...state];\n  }\n  if (action.type === \"ADD_MESSAGE\") {\n    const newMessage = action.payload;\n    const messageIndex = state.findIndex(m => m.id === newMessage.id);\n    if (messageIndex !== -1) {\n      state[messageIndex] = newMessage;\n    } else {\n      state.push(newMessage);\n    }\n    return [...state];\n  }\n  if (action.type === \"UPDATE_MESSAGE\") {\n    const messageToUpdate = action.payload;\n    const messageIndex = state.findIndex(m => m.id === messageToUpdate.id);\n    if (messageIndex !== -1) {\n      state[messageIndex] = messageToUpdate;\n    }\n    return [...state];\n  }\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\nconst MessagesList = ({\n  ticket,\n  ticketId,\n  isGroup\n}) => {\n  const classes = useStyles();\n  const [messagesList, dispatch] = useReducer(reducer, []);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const lastMessageRef = useRef();\n  const [selectedMessage, setSelectedMessage] = useState({});\n  const [anchorEl, setAnchorEl] = useState(null);\n  const messageOptionsMenuOpen = Boolean(anchorEl);\n  const currentTicketId = useRef(ticketId);\n  const socketManager = useContext(SocketContext);\n  const {\n    setReplyingMessage\n  } = useContext(ReplyMessageContext);\n  const {\n    showSelectMessageCheckbox\n  } = useContext(ForwardMessageContext);\n  useEffect(() => {\n    dispatch({\n      type: \"RESET\"\n    });\n    setPageNumber(1);\n    currentTicketId.current = ticketId;\n  }, [ticketId]);\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchMessages = async () => {\n        if (ticketId === undefined) return;\n        try {\n          const {\n            data\n          } = await api.get(\"/messages/\" + ticketId, {\n            params: {\n              pageNumber\n            }\n          });\n          if (currentTicketId.current === ticketId) {\n            dispatch({\n              type: \"LOAD_MESSAGES\",\n              payload: data.messages\n            });\n            setHasMore(data.hasMore);\n            setLoading(false);\n          }\n          if (pageNumber === 1 && data.messages.length > 1) {\n            scrollToBottom();\n          }\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchMessages();\n    }, 500);\n    return () => {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [pageNumber, ticketId]);\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketManager.getSocket(companyId);\n    socket.on(\"ready\", () => socket.emit(\"joinChatBox\", `${ticket.id}`));\n    socket.on(`company-${companyId}-appMessage`, data => {\n      if (data.action === \"create\" && data.message.ticketId === currentTicketId.current) {\n        dispatch({\n          type: \"ADD_MESSAGE\",\n          payload: data.message\n        });\n        scrollToBottom();\n      }\n      if (data.action === \"update\" && data.message.ticketId === currentTicketId.current) {\n        dispatch({\n          type: \"UPDATE_MESSAGE\",\n          payload: data.message\n        });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [ticketId, ticket, socketManager]);\n  const loadMore = () => {\n    setPageNumber(prevPageNumber => prevPageNumber + 1);\n  };\n  const scrollToBottom = () => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({});\n    }\n  };\n  const handleScroll = e => {\n    if (!hasMore) return;\n    const {\n      scrollTop\n    } = e.currentTarget;\n    if (scrollTop === 0) {\n      document.getElementById(\"messagesList\").scrollTop = 1;\n    }\n    if (loading) {\n      return;\n    }\n    if (scrollTop < 50) {\n      loadMore();\n    }\n  };\n  const hanldeReplyMessage = (e, message) => {\n    //if (ticket.status === \"open\" || ticket.status === \"group\") {\n    setAnchorEl(null);\n    setReplyingMessage(message);\n    //}\n  };\n  const handleOpenMessageOptionsMenu = (e, message) => {\n    setAnchorEl(e.currentTarget);\n    setSelectedMessage(message);\n  };\n  const handleCloseMessageOptionsMenu = e => {\n    setAnchorEl(null);\n  };\n  const checkMessageMedia = message => {\n    if (message.mediaType === \"locationMessage\" && message.body.split('|').length >= 2) {\n      let locationParts = message.body.split('|');\n      let imageLocation = locationParts[0];\n      let linkLocation = locationParts[1];\n      let descriptionLocation = null;\n      if (locationParts.length > 2) descriptionLocation = message.body.split('|')[2];\n      return /*#__PURE__*/React.createElement(LocationPreview, {\n        image: imageLocation,\n        link: linkLocation,\n        description: descriptionLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 14\n        }\n      });\n    } else if (message.mediaType === \"contactMessage\") {\n      let array = message.body.split(\"\\n\");\n      let obj = [];\n      let contact = \"\";\n      for (let index = 0; index < array.length; index++) {\n        const v = array[index];\n        let values = v.split(\":\");\n        for (let ind = 0; ind < values.length; ind++) {\n          if (values[ind].indexOf(\"+\") !== -1) {\n            obj.push({\n              number: values[ind]\n            });\n          }\n          if (values[ind].indexOf(\"FN\") !== -1) {\n            contact = values[ind + 1];\n          }\n        }\n      }\n      //console.log(array);\n      //console.log(contact);\n      //console.log(obj[0].number);\n      return /*#__PURE__*/React.createElement(VCardPreview, {\n        contact: contact,\n        numbers: obj[0].number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 14\n        }\n      });\n    }\n    /* else if (message.mediaType === \"vcard\") {\n      let array = message.body.split(\"\\n\");\n      let obj = [];\n      let contact = \"\";\n      for (let index = 0; index < array.length; index++) {\n        const v = array[index];\n        let values = v.split(\":\");\n        for (let ind = 0; ind < values.length; ind++) {\n          if (values[ind].indexOf(\"+\") !== -1) {\n            obj.push({ number: values[ind] });\n          }\n          if (values[ind].indexOf(\"FN\") !== -1) {\n            contact = values[ind + 1];\n          }\n        }\n      }\n      return <VcardPreview contact={contact} numbers={obj[0].number} />\n    } */\n    /*else if (message.mediaType === \"multi_vcard\") {\n      console.log(\"multi_vcard\")\n      console.log(message)\n      \n      if(message.body !== null && message.body !== \"\") {\n        let newBody = JSON.parse(message.body)\n        return (\n          <>\n            {\n            newBody.map(v => (\n              <VcardPreview contact={v.name} numbers={v.number} />\n            ))\n            }\n          </>\n        )\n      } else return (<></>)\n    }*/else if (message.mediaType === \"image\") {\n      return /*#__PURE__*/React.createElement(ModalImageCors, {\n        imageUrl: message.mediaUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 14\n        }\n      });\n    } else if (message.mediaType === \"audio\") {\n      //console.log(isIOS);\n\n      // Ahora todos los audios se envían como MP3 desde el backend\n      return /*#__PURE__*/React.createElement(\"audio\", {\n        controls: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"source\", {\n        src: message.mediaUrl,\n        type: \"audio/mp3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }\n      }));\n    } else if (message.mediaType === \"video\") {\n      return /*#__PURE__*/React.createElement(\"video\", {\n        className: classes.messageMedia,\n        src: message.mediaUrl,\n        controls: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.downloadMedia,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '12px',\n          backgroundColor: '#f8f9fa',\n          borderRadius: '8px',\n          border: '1px solid #e9ecef',\n          marginBottom: '8px',\n          maxWidth: '300px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }\n      }, (_fileName$split$pop => {\n        // ✅ USAR NOMBRE ORIGINAL DEL ARCHIVO PARA EL ICONO\n        let fileName = message.body || 'document';\n\n        // Si el body contiene el nombre del archivo, usarlo\n        if (message.body && message.body.includes('.')) {\n          fileName = message.body;\n        } else if (message.mediaUrl) {\n          // Extraer nombre desde la URL si no hay body\n          const urlFileName = message.mediaUrl.split('/').pop();\n          if (urlFileName && urlFileName.includes('.')) {\n            const parts = urlFileName.split('.');\n            if (parts.length > 2 && /^\\d+$/.test(parts[0])) {\n              // Si la primera parte es un número (timestamp), usar el resto\n              fileName = parts.slice(1).join('.');\n            } else {\n              fileName = urlFileName;\n            }\n          }\n        }\n        const extension = (_fileName$split$pop = fileName.split('.').pop()) === null || _fileName$split$pop === void 0 ? void 0 : _fileName$split$pop.toLowerCase();\n\n        // Colores e iconos según el tipo de archivo\n        let iconConfig;\n        if (['doc', 'docx'].includes(extension)) {\n          iconConfig = {\n            bg: '#2b579a',\n            text: 'W'\n          }; // Word - Azul\n        } else if (['xls', 'xlsx', 'csv'].includes(extension)) {\n          iconConfig = {\n            bg: '#217346',\n            text: '📊'\n          }; // Excel/CSV - Verde\n        } else if (['pdf'].includes(extension)) {\n          iconConfig = {\n            bg: '#dc3545',\n            text: 'PDF'\n          }; // PDF - Rojo\n        } else if (['ppt', 'pptx'].includes(extension)) {\n          iconConfig = {\n            bg: '#d24726',\n            text: 'P'\n          }; // PowerPoint - Naranja\n        } else if (['txt'].includes(extension)) {\n          iconConfig = {\n            bg: '#6c757d',\n            text: 'T'\n          }; // Texto - Gris\n        } else {\n          iconConfig = {\n            bg: '#6c757d',\n            text: '📄'\n          }; // Default - Gris\n        }\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            width: '40px',\n            height: '40px',\n            borderRadius: '6px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginRight: '12px',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            color: 'white',\n            backgroundColor: iconConfig.bg\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 19\n          }\n        }, iconConfig.text);\n      })(), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '14px',\n          fontWeight: '600',\n          color: '#212529',\n          marginBottom: '2px',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 17\n        }\n      }, (() => {\n        // ✅ USAR NOMBRE ORIGINAL DEL ARCHIVO\n        let fileName = message.body || 'Documento';\n\n        // Si el body contiene el nombre del archivo, usarlo\n        if (message.body && message.body.includes('.')) {\n          fileName = message.body;\n        } else if (message.mediaUrl) {\n          // Extraer nombre desde la URL si no hay body\n          const urlFileName = message.mediaUrl.split('/').pop();\n          if (urlFileName && urlFileName.includes('.')) {\n            const parts = urlFileName.split('.');\n            if (parts.length > 2 && /^\\d+$/.test(parts[0])) {\n              // Si la primera parte es un número (timestamp), usar el resto\n              fileName = parts.slice(1).join('.');\n            } else {\n              fileName = urlFileName;\n            }\n          }\n        }\n        return fileName;\n      })()), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '12px',\n          color: '#6c757d',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 17\n        }\n      }, (_fileName$split$pop2 => {\n        // ✅ USAR TAMAÑO REAL DEL ARCHIVO\n        let fileName = message.body || 'document';\n\n        // Si el body contiene el nombre del archivo, usarlo\n        if (message.body && message.body.includes('.')) {\n          fileName = message.body;\n        } else if (message.mediaUrl) {\n          // Extraer nombre desde la URL si no hay body\n          const urlFileName = message.mediaUrl.split('/').pop();\n          if (urlFileName && urlFileName.includes('.')) {\n            const parts = urlFileName.split('.');\n            if (parts.length > 2 && /^\\d+$/.test(parts[0])) {\n              // Si la primera parte es un número (timestamp), usar el resto\n              fileName = parts.slice(1).join('.');\n            } else {\n              fileName = urlFileName;\n            }\n          }\n        }\n        const extension = ((_fileName$split$pop2 = fileName.split('.').pop()) === null || _fileName$split$pop2 === void 0 ? void 0 : _fileName$split$pop2.toUpperCase()) || 'DOC';\n        const fileSize = message.mediaSize || 0;\n        return `${extension} • ${formatFileSize(fileSize)}`;\n      })())), /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        style: {\n          minWidth: '32px',\n          width: '32px',\n          height: '32px',\n          borderRadius: '50%',\n          backgroundColor: '#f8f9fa',\n          border: '1px solid #dee2e6',\n          color: '#6c757d',\n          padding: 0\n        },\n        target: \"_blank\",\n        href: message.mediaUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(GetApp, {\n        style: {\n          fontSize: '16px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 17\n        }\n      })))));\n    }\n  };\n\n  /*\n    const renderMessageAck = (message) => {\n      if (message.ack === 1) {\n        return <AccessTime fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 2) {\n        return <Done fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 3) {\n        return <DoneAll fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 4 || message.ack === 5) {\n        return <DoneAll fontSize=\"small\" className={classes.ackDoneAllIcon} />;\n      }\n    };\n    */\n\n  const renderMessageAck = message => {\n    if (message.ack === 0) {\n      return /*#__PURE__*/React.createElement(AccessTime, {\n        fontSize: \"small\",\n        className: classes.ackIcons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 16\n        }\n      });\n    }\n    if (message.ack === 1) {\n      return /*#__PURE__*/React.createElement(Done, {\n        fontSize: \"small\",\n        className: classes.ackIcons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 16\n        }\n      });\n    }\n    if (message.ack === 2) {\n      return /*#__PURE__*/React.createElement(Done, {\n        fontSize: \"small\",\n        className: classes.ackIcons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 16\n        }\n      });\n    }\n    if (message.ack === 3) {\n      return /*#__PURE__*/React.createElement(DoneAll, {\n        fontSize: \"small\",\n        className: classes.ackIcons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 16\n        }\n      });\n    }\n    if (message.ack === 4 || message.ack === 5) {\n      return /*#__PURE__*/React.createElement(DoneAll, {\n        fontSize: \"small\",\n        className: classes.ackDoneAllIcon,\n        style: {\n          color: '#0377FC'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 16\n        }\n      });\n    }\n  };\n  const renderDailyTimestamps = (message, index) => {\n    if (index === 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.dailyTimestamp,\n        key: `timestamp-${message.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.dailyTimestampText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }\n      }, format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")));\n    }\n    if (index < messagesList.length - 1) {\n      let messageDay = parseISO(messagesList[index].createdAt);\n      let previousMessageDay = parseISO(messagesList[index - 1].createdAt);\n      if (!isSameDay(messageDay, previousMessageDay)) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: classes.dailyTimestamp,\n          key: `timestamp-${message.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.dailyTimestampText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }\n        }, format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")));\n      }\n    }\n    if (index === messagesList.length - 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `ref-${message.createdAt}`,\n        ref: lastMessageRef,\n        style: {\n          float: \"left\",\n          clear: \"both\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n  const renderNumberTicket = (message, index) => {\n    if (index < messagesList.length && index > 0) {\n      let messageTicket = message.ticketId;\n      let previousMessageTicket = messagesList[index - 1].ticketId;\n      if (messageTicket !== previousMessageTicket) {\n        return /*#__PURE__*/React.createElement(\"center\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.ticketNunberClosed,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 13\n          }\n        }, \"Conversa encerrada: \", format(parseISO(messagesList[index - 1].createdAt), \"dd/MM/yyyy HH:mm:ss\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.ticketNunberOpen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }\n        }, \"Conversa iniciada: \", format(parseISO(message.createdAt), \"dd/MM/yyyy HH:mm:ss\")));\n      }\n    }\n  };\n  const renderMessageDivider = (message, index) => {\n    if (index < messagesList.length && index > 0) {\n      let messageUser = messagesList[index].fromMe;\n      let previousMessageUser = messagesList[index - 1].fromMe;\n      if (messageUser !== previousMessageUser) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            marginTop: 16\n          },\n          key: `divider-${message.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  };\n  const renderQuotedMessage = message => {\n    var _message$quotedMsg, _message$quotedMsg2, _message$quotedMsg3, _message$quotedMsg3$c, _message$quotedMsg4;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx(classes.quotedContainerLeft, {\n        [classes.quotedContainerRight]: message.fromMe\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: clsx(classes.quotedSideColorLeft, {\n        [classes.quotedSideColorRight]: (_message$quotedMsg = message.quotedMsg) === null || _message$quotedMsg === void 0 ? void 0 : _message$quotedMsg.fromMe\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.quotedMsg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 9\n      }\n    }, !((_message$quotedMsg2 = message.quotedMsg) === null || _message$quotedMsg2 === void 0 ? void 0 : _message$quotedMsg2.fromMe) && /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.messageContactName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 13\n      }\n    }, (_message$quotedMsg3 = message.quotedMsg) === null || _message$quotedMsg3 === void 0 ? void 0 : (_message$quotedMsg3$c = _message$quotedMsg3.contact) === null || _message$quotedMsg3$c === void 0 ? void 0 : _message$quotedMsg3$c.name), message.quotedMsg.mediaType === \"audio\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.downloadMedia,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: message.quotedMsg.mediaUrl,\n      type: \"audio/mp3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 19\n      }\n    }))), message.quotedMsg.mediaType === \"video\" && /*#__PURE__*/React.createElement(\"video\", {\n      className: classes.messageMedia,\n      src: message.quotedMsg.mediaUrl,\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 15\n      }\n    }), message.quotedMsg.mediaType === \"application\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.downloadMedia,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(GetApp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 30\n        }\n      }),\n      color: \"primary\",\n      variant: \"outlined\",\n      target: \"_blank\",\n      href: message.quotedMsg.mediaUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 17\n      }\n    }, \"Download\")), message.quotedMsg.mediaType === \"image\" ? /*#__PURE__*/React.createElement(ModalImageCors, {\n      imageUrl: message.quotedMsg.mediaUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 13\n      }\n    }) : (_message$quotedMsg4 = message.quotedMsg) === null || _message$quotedMsg4 === void 0 ? void 0 : _message$quotedMsg4.body));\n  };\n  const renderMessages = () => {\n    if (messagesList.length > 0) {\n      const viewMessagesList = messagesList.map((message, index) => {\n        if (message.mediaType === \"call_log\") {\n          var _message$contact;\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            key: message.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 13\n            }\n          }, renderDailyTimestamps(message, index), renderNumberTicket(message, index), renderMessageDivider(message, index), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.messageCenter,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 15\n            }\n          }, isGroup && /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.messageContactName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 19\n            }\n          }, (_message$contact = message.contact) === null || _message$contact === void 0 ? void 0 : _message$contact.name), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 20 17\",\n            width: \"20\",\n            height: \"17\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"path\", {\n            fill: \"#df3333\",\n            d: \"M18.2 12.1c-1.5-1.8-5-2.7-8.2-2.7s-6.7 1-8.2 2.7c-.7.8-.3 2.3.2 2.8.2.2.3.3.5.3 1.4 0 3.6-.7 3.6-.7.5-.2.8-.5.8-1v-1.3c.7-1.2 5.4-1.2 6.4-.1l.1.1v1.3c0 .2.1.4.2.6.1.2.3.3.5.4 0 0 2.2.7 3.6.7.2 0 1.4-2 .5-3.1zM5.4 3.2l4.7 4.6 5.8-5.7-.9-.8L10.1 6 6.4 2.3h2.5V1H4.1v4.8h1.3V3.2z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 21\n            }\n          })), \" \", /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 26\n            }\n          }, \"Chamada de voz/v\\xEDdeo perdida \\xE0s \", format(parseISO(message.createdAt), \"HH:mm\")))));\n        }\n        if (!message.fromMe) {\n          var _message$queue, _message$contact2, _message$contact$name, _message$contact3;\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            key: message.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 13\n            }\n          }, renderDailyTimestamps(message, index), renderNumberTicket(message, index), renderMessageDivider(message, index), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.messageLeft,\n            title: message.queueId && ((_message$queue = message.queue) === null || _message$queue === void 0 ? void 0 : _message$queue.name),\n            onDoubleClick: e => hanldeReplyMessage(e, message),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 15\n            }\n          }, showSelectMessageCheckbox && /*#__PURE__*/React.createElement(SelectMessageCheckbox\n          // showSelectMessageCheckbox={showSelectMessageCheckbox}\n          , {\n            message: message\n            // selectedMessagesList={selectedMessagesList}\n            // setSelectedMessagesList={setSelectedMessagesList}\n            ,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 19\n            }\n          }), message.isForwarded && /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.forwardMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Reply, {\n            style: {\n              color: \"grey\",\n              transform: 'scaleX(-1)'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 22\n            }\n          }), \" Encaminhada\"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 21\n            }\n          })), isGroup && /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.messageContactName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 19\n            }\n          }, (_message$contact2 = message.contact) === null || _message$contact2 === void 0 ? void 0 : _message$contact2.name), message.isDeleted && /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"message-deleted\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 21\n            }\n          }, \"Essa mensagem foi apagada pelo contato \\xA0\", /*#__PURE__*/React.createElement(Block, {\n            color: \"error\",\n            fontSize: \"small\",\n            className: classes.deletedIcon,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 23\n            }\n          }))), (message.mediaUrl || message.mediaType === \"locationMessage\" || message.mediaType === \"vcard\" || message.mediaType === \"contactMessage\"\n          //|| message.mediaType === \"multi_vcard\" \n          ) && checkMessageMedia(message), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.textContentItem,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 958,\n              columnNumber: 17\n            }\n          }, message.quotedMsg && renderQuotedMessage(message), message.mediaType !== \"reactionMessage\" && /*#__PURE__*/React.createElement(MarkdownWrapper, {\n            message: message,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 21\n            }\n          }, message.mediaType === \"locationMessage\" || message.mediaType === \"contactMessage\" ? null : message.body), message.quotedMsg && message.mediaType === \"reactionMessage\" && message.body && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              marginLeft: \"0px\",\n              display: 'flex',\n              alignItems: 'center'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(MarkdownWrapper, {\n            message: message,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 25\n            }\n          }, \"_*\" + (message.fromMe ? i18n.t(\"messagesList.reactions.you\") : (_message$contact$name = message === null || message === void 0 ? void 0 : (_message$contact3 = message.contact) === null || _message$contact3 === void 0 ? void 0 : _message$contact3.name) !== null && _message$contact$name !== void 0 ? _message$contact$name : i18n.t(\"messagesList.reactions.contact\")) + \"*_ \" + i18n.t(\"messagesList.reactions.reacted\") + \" \"), /*#__PURE__*/React.createElement(Badge, {\n            className: classes.badge,\n            overlap: \"circular\",\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'right'\n            },\n            badgeContent: /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: \"1.2em\",\n                marginTop: \"0\",\n                marginLeft: \"5px\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 29\n              }\n            }, message.body),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 25\n            }\n          }))), /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.timestamp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 19\n            }\n          }, format(parseISO(message.createdAt), \"HH:mm\"), /*#__PURE__*/React.createElement(IconButton, {\n            size: \"small\",\n            id: \"messageActionsButton\",\n            disabled: message.isDeleted,\n            onClick: e => handleOpenMessageOptionsMenu(e, message),\n            style: {\n              marginLeft: \"8px\",\n              padding: \"2px\",\n              color: \"#999\",\n              fontSize: \"12px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(ExpandMore, {\n            style: {\n              fontSize: \"16px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 23\n            }\n          }))))));\n        } else {\n          var _message$contact$name2, _message$contact4;\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            key: message.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 13\n            }\n          }, renderDailyTimestamps(message, index), renderNumberTicket(message, index), renderMessageDivider(message, index), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.messageRight,\n            onDoubleClick: e => hanldeReplyMessage(e, message),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 15\n            }\n          }, showSelectMessageCheckbox && /*#__PURE__*/React.createElement(SelectMessageCheckbox\n          // showSelectMessageCheckbox={showSelectMessageCheckbox}\n          , {\n            message: message\n            // selectedMessagesList={selectedMessagesList}\n            // setSelectedMessagesList={setSelectedMessagesList}\n            ,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 17\n            }\n          }), message.isForwarded && /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.forwardMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1031,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Reply, {\n            style: {\n              color: \"grey\",\n              transform: 'scaleX(-1)'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 22\n            }\n          }), \" Encaminhada\"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 21\n            }\n          })), (message.mediaUrl || message.mediaType === \"locationMessage\" || message.mediaType === \"vcard\" || message.mediaType === \"contactMessage\"\n          //|| message.mediaType === \"multi_vcard\" \n          ) && checkMessageMedia(message), /*#__PURE__*/React.createElement(\"div\", {\n            className: clsx(classes.textContentItem, {\n              [classes.textContentItemDeleted]: message.isDeleted\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 17\n            }\n          }, message.isDeleted && /*#__PURE__*/React.createElement(Block, {\n            color: \"disabled\",\n            fontSize: \"small\",\n            className: classes.deletedIcon,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 21\n            }\n          }), message.quotedMsg && renderQuotedMessage(message), message.mediaType !== \"reactionMessage\" && message.mediaType !== \"locationMessage\" && message.mediaType !== \"application\" && message.mediaType !== \"document\" && message.mediaType !== \"text\" && message.body && /*#__PURE__*/React.createElement(MarkdownWrapper, {\n            message: message,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 21\n            }\n          }, message.body), message.quotedMsg && message.mediaType === \"reactionMessage\" && message.body && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              marginLeft: \"0px\",\n              display: 'flex',\n              alignItems: 'center'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(MarkdownWrapper, {\n            message: message,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 25\n            }\n          }, \"_*\" + (message.fromMe ? i18n.t(\"messagesList.reactions.you\") : (_message$contact$name2 = message === null || message === void 0 ? void 0 : (_message$contact4 = message.contact) === null || _message$contact4 === void 0 ? void 0 : _message$contact4.name) !== null && _message$contact$name2 !== void 0 ? _message$contact$name2 : i18n.t(\"messagesList.reactions.contact\")) + \"*_ \" + i18n.t(\"messagesList.reactions.reacted\") + \" \"), /*#__PURE__*/React.createElement(Badge, {\n            className: classes.badge,\n            overlap: \"circular\",\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'right'\n            },\n            badgeContent: /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: \"1.2em\",\n                marginTop: \"0\",\n                marginLeft: \"5px\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1076,\n                columnNumber: 29\n              }\n            }, message.body),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 25\n            }\n          }))), /*#__PURE__*/React.createElement(\"span\", {\n            className: classes.timestamp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 19\n            }\n          }, format(parseISO(message.createdAt), \"HH:mm\"), renderMessageAck(message), /*#__PURE__*/React.createElement(IconButton, {\n            size: \"small\",\n            id: \"messageActionsButton\",\n            disabled: message.isDeleted,\n            onClick: e => handleOpenMessageOptionsMenu(e, message),\n            style: {\n              marginLeft: \"8px\",\n              padding: \"2px\",\n              color: \"#999\",\n              fontSize: \"12px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(ExpandMore, {\n            style: {\n              fontSize: \"16px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1102,\n              columnNumber: 23\n            }\n          }))))));\n        }\n      });\n      return viewMessagesList;\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 14\n        }\n      }, i18n.t(\"hardcodedElements.sayHelloToNewContact\"));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.messagesListWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MessageOptionsMenu, {\n    message: selectedMessage,\n    anchorEl: anchorEl,\n    menuOpen: messageOptionsMenuOpen,\n    handleClose: handleCloseMessageOptionsMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1119,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messagesList\",\n    className: classes.messagesList,\n    onScroll: handleScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1125,\n      columnNumber: 7\n    }\n  }, messagesList.length > 0 ? renderMessages() : []), loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.circleLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 11\n    }\n  })));\n};\nexport default MessagesList;","map":{"version":3,"names":["React","useState","useEffect","useReducer","useRef","useContext","isSameDay","parseISO","format","clsx","green","Button","CircularProgress","IconButton","makeStyles","Badge","AccessTime","Block","Done","DoneAll","ExpandMore","GetApp","Reply","MarkdownWrapper","ModalImageCors","MessageOptionsMenu","whatsBackground","LocationPreview","whatsBackgroundDark","VCardPreview","api","toastError","SocketContext","ForwardMessageContext","ReplyMessageContext","SelectMessageCheckbox","i18n","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","useStyles","theme","messagesListWrapper","overflow","position","display","flexDirection","flexGrow","width","minWidth","minHeight","messagesList","backgroundImage","mode","padding","overflowY","scrollbarStyles","circleLoading","color","opacity","top","left","marginTop","messageLeft","marginRight","maxWidth","height","whiteSpace","backgroundColor","alignSelf","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","boxShadow","quotedContainerLeft","margin","borderRadius","quotedMsg","quotedSideColorLeft","flex","messageRight","marginLeft","quotedContainerRight","quotedMsgRight","quotedSideColorRight","messageActionsButton","zIndex","messageContactName","fontWeight","textContentItem","overflowWrap","textContentItemEdited","textContentItemDeleted","fontStyle","forwardMessage","fontSize","alignItems","messageMedia","objectFit","timestamp","bottom","right","dailyTimestamp","textAlign","dailyTimestampText","ackIcons","verticalAlign","deletedIcon","ackDoneAllIcon","downloadMedia","justifyContent","reducer","state","action","type","messages","payload","newMessages","forEach","message","messageIndex","findIndex","m","id","push","newMessage","messageToUpdate","MessagesList","ticket","ticketId","isGroup","classes","dispatch","pageNumber","setPageNumber","hasMore","setHasMore","loading","setLoading","lastMessageRef","selectedMessage","setSelectedMessage","anchorEl","setAnchorEl","messageOptionsMenuOpen","Boolean","currentTicketId","socketManager","setReplyingMessage","showSelectMessageCheckbox","current","delayDebounceFn","setTimeout","fetchMessages","undefined","data","get","params","length","scrollToBottom","err","clearTimeout","companyId","localStorage","getItem","socket","getSocket","on","emit","disconnect","loadMore","prevPageNumber","scrollIntoView","handleScroll","e","scrollTop","currentTarget","document","getElementById","hanldeReplyMessage","handleOpenMessageOptionsMenu","handleCloseMessageOptionsMenu","checkMessageMedia","mediaType","body","split","locationParts","imageLocation","linkLocation","descriptionLocation","createElement","image","link","description","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","array","obj","contact","index","v","values","ind","indexOf","number","numbers","imageUrl","mediaUrl","controls","src","className","Fragment","style","border","marginBottom","_fileName$split$pop","includes","urlFileName","pop","parts","test","slice","join","extension","toLowerCase","iconConfig","bg","text","textOverflow","_fileName$split$pop2","toUpperCase","fileSize","mediaSize","size","target","href","renderMessageAck","ack","renderDailyTimestamps","key","createdAt","messageDay","previousMessageDay","ref","float","clear","renderNumberTicket","messageTicket","previousMessageTicket","ticketNunberClosed","ticketNunberOpen","renderMessageDivider","messageUser","fromMe","previousMessageUser","renderQuotedMessage","_message$quotedMsg","_message$quotedMsg2","_message$quotedMsg3","_message$quotedMsg3$c","_message$quotedMsg4","name","startIcon","variant","renderMessages","viewMessagesList","map","_message$contact","messageCenter","xmlns","viewBox","fill","d","_message$queue","_message$contact2","_message$contact$name","_message$contact3","title","queueId","queue","onDoubleClick","isForwarded","transform","isDeleted","t","badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","disabled","onClick","_message$contact$name2","_message$contact4","menuOpen","handleClose","onScroll"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/components/MessagesList/index.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useRef, useContext } from \"react\";\n\nimport { isSameDay, parseISO, format } from \"date-fns\";\nimport clsx from \"clsx\";\n\nimport { green } from \"@material-ui/core/colors\";\nimport {\n  Button,\n  CircularProgress,\n  IconButton,\n  makeStyles,\n  Badge,\n} from \"@material-ui/core\";\n\nimport {\n  AccessTime,\n  Block,\n  Done,\n  DoneAll,\n  ExpandMore,\n  GetApp,\n  Reply,\n} from \"@material-ui/icons\";\n\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport ModalImageCors from \"../ModalImageCors\";\nimport MessageOptionsMenu from \"../MessageOptionsMenu\";\nimport whatsBackground from \"../../assets/wa-background.png\";\nimport LocationPreview from \"../LocationPreview\";\nimport whatsBackgroundDark from \"../../assets/wa-background-dark.png\"; //DARK MODE PLW DESIGN//\nimport VCardPreview from \"../VCardPreview\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { ForwardMessageContext } from \"../../context/ForwarMessage/ForwardMessageContext\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport SelectMessageCheckbox from \"./SelectMessageCheckbox\";\nimport { i18n } from \"../../translate/i18n\";\n\n// Función para formatear el tamaño del archivo\nconst formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'kB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n};\n\nconst useStyles = makeStyles((theme) => ({\n  messagesListWrapper: {\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    width: \"100%\",\n    minWidth: 300,\n    minHeight: 200,\n  },\n\n  messagesList: {\n    backgroundImage: theme.mode === 'light' ? `url(${whatsBackground})` : `url(${whatsBackgroundDark})`, //DARK MODE PLW DESIGN//\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    padding: \"20px 20px 20px 20px\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n\n  circleLoading: {\n    color: green[500],\n    position: \"absolute\",\n    opacity: \"70%\",\n    top: 0,\n    left: \"50%\",\n    marginTop: 12,\n  },\n\n  messageLeft: {\n    marginRight: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#3b82f6\",\n    color: \"#ffffff\",\n    alignSelf: \"flex-start\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  quotedContainerLeft: {\n    margin: \"-3px -80px 6px -6px\",\n    overflow: \"hidden\",\n    backgroundColor: \"#f0f0f0\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  quotedMsg: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\",\n  },\n\n  quotedSideColorLeft: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#6bcbef\",\n  },\n\n  messageRight: {\n    marginLeft: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#10b981\",\n    color: \"#ffffff\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 0,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  quotedContainerRight: {\n    margin: \"-3px -80px 6px -6px\",\n    overflowY: \"hidden\",\n    backgroundColor: \"#cfe9ba\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  quotedMsgRight: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    whiteSpace: \"pre-wrap\",\n  },\n\n  quotedSideColorRight: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\",\n  },\n\n  messageActionsButton: {\n    display: \"none\",\n    position: \"relative\",\n    color: \"#999\",\n    zIndex: 1,\n    backgroundColor: \"inherit\",\n    opacity: \"90%\",\n    \"&:hover, &.Mui-focusVisible\": { backgroundColor: \"inherit\" },\n  },\n\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500,\n  },\n\n  textContentItem: {\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\",\n  },\n  \n  textContentItemEdited: {\n    overflowWrap: \"break-word\",\n    padding: \"3px 120px 6px 6px\",\n  },\n\n  textContentItemDeleted: {\n    fontStyle: \"italic\",\n    color: \"rgba(0, 0, 0, 0.36)\",\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\",\n  },\n  forwardMessage: {\n    fontSize: 12,\n    fontStyle: \"italic\",\n    position: \"absolute\",\n    top: 0,\n    left: 5,\n    color: \"#999\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  messageMedia: {\n    objectFit: \"cover\",\n    width: 250,\n    height: 200,\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n  },\n\n  timestamp: {\n    fontSize: 11,\n    position: \"absolute\",\n    bottom: 0,\n    right: 5,\n    color: \"#999\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  dailyTimestamp: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    width: \"110px\",\n    backgroundColor: \"#e1f3fb\",\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  dailyTimestampText: {\n    color: \"#808888\",\n    padding: 8,\n    alignSelf: \"center\",\n    marginLeft: \"0px\",\n  },\n\n  ackIcons: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4,\n  },\n\n  deletedIcon: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginRight: 4,\n  },\n\n  ackDoneAllIcon: {\n    color: green[500],\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4,\n  },\n\n  downloadMedia: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"inherit\",\n    padding: 10,\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_MESSAGES\") {\n    const messages = action.payload;\n    const newMessages = [];\n\n    messages.forEach((message) => {\n      const messageIndex = state.findIndex((m) => m.id === message.id);\n      if (messageIndex !== -1) {\n        state[messageIndex] = message;\n      } else {\n        newMessages.push(message);\n      }\n    });\n\n    return [...newMessages, ...state];\n  }\n\n  if (action.type === \"ADD_MESSAGE\") {\n    const newMessage = action.payload;\n    const messageIndex = state.findIndex((m) => m.id === newMessage.id);\n\n    if (messageIndex !== -1) {\n      state[messageIndex] = newMessage;\n    } else {\n      state.push(newMessage);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_MESSAGE\") {\n    const messageToUpdate = action.payload;\n    const messageIndex = state.findIndex((m) => m.id === messageToUpdate.id);\n\n    if (messageIndex !== -1) {\n      state[messageIndex] = messageToUpdate;\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst MessagesList = ({ ticket, ticketId, isGroup }) => {\n  const classes = useStyles();\n\n  const [messagesList, dispatch] = useReducer(reducer, []);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const lastMessageRef = useRef();\n\n  const [selectedMessage, setSelectedMessage] = useState({});\n  const [anchorEl, setAnchorEl] = useState(null);\n  const messageOptionsMenuOpen = Boolean(anchorEl);\n  const currentTicketId = useRef(ticketId);\n  const socketManager = useContext(SocketContext);\n  const { setReplyingMessage } = useContext(ReplyMessageContext);\n  const { showSelectMessageCheckbox } = useContext(ForwardMessageContext);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n\n    currentTicketId.current = ticketId;\n  }, [ticketId]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchMessages = async () => {\n        if (ticketId === undefined) return;\n        try {\n          const { data } = await api.get(\"/messages/\" + ticketId, {\n            params: { pageNumber },\n          });\n\n          if (currentTicketId.current === ticketId) {\n            dispatch({ type: \"LOAD_MESSAGES\", payload: data.messages });\n            setHasMore(data.hasMore);\n            setLoading(false);\n          }\n\n          if (pageNumber === 1 && data.messages.length > 1) {\n            scrollToBottom();\n          }\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchMessages();\n    }, 500);\n    return () => {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [pageNumber, ticketId]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketManager.getSocket(companyId);\n\n    socket.on(\"ready\", () => socket.emit(\"joinChatBox\", `${ticket.id}`));\n\n    socket.on(`company-${companyId}-appMessage`, (data) => {\n      if (data.action === \"create\" && data.message.ticketId === currentTicketId.current) {\n        dispatch({ type: \"ADD_MESSAGE\", payload: data.message });\n        scrollToBottom();\n      }\n\n      if (data.action === \"update\" && data.message.ticketId === currentTicketId.current) {\n        dispatch({ type: \"UPDATE_MESSAGE\", payload: data.message });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [ticketId, ticket, socketManager]);\n\n  const loadMore = () => {\n    setPageNumber((prevPageNumber) => prevPageNumber + 1);\n  };\n\n  const scrollToBottom = () => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({});\n    }\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore) return;\n    const { scrollTop } = e.currentTarget;\n\n    if (scrollTop === 0) {\n      document.getElementById(\"messagesList\").scrollTop = 1;\n    }\n\n    if (loading) {\n      return;\n    }\n\n    if (scrollTop < 50) {\n      loadMore();\n    }\n  };\n\n  const hanldeReplyMessage = (e, message) => {\n    //if (ticket.status === \"open\" || ticket.status === \"group\") {\n    setAnchorEl(null);\n    setReplyingMessage(message);\n    //}\n  };\n\n  const handleOpenMessageOptionsMenu = (e, message) => {\n    setAnchorEl(e.currentTarget);\n    setSelectedMessage(message);\n  };\n\n  const handleCloseMessageOptionsMenu = (e) => {\n    setAnchorEl(null);\n  };\n\n  const checkMessageMedia = (message) => {\n    if (message.mediaType === \"locationMessage\" && message.body.split('|').length >= 2) {\n      let locationParts = message.body.split('|')\n      let imageLocation = locationParts[0]\n      let linkLocation = locationParts[1]\n\n      let descriptionLocation = null\n\n      if (locationParts.length > 2)\n        descriptionLocation = message.body.split('|')[2]\n\n      return <LocationPreview image={imageLocation} link={linkLocation} description={descriptionLocation} />\n    }\n    else\n    if (message.mediaType === \"contactMessage\") {\n      let array = message.body.split(\"\\n\");\n      let obj = [];\n      let contact = \"\";\n      for (let index = 0; index < array.length; index++) {\n        const v = array[index];\n        let values = v.split(\":\");\n        for (let ind = 0; ind < values.length; ind++) {\n          if (values[ind].indexOf(\"+\") !== -1) {\n            obj.push({ number: values[ind] });\n          }\n          if (values[ind].indexOf(\"FN\") !== -1) {\n            contact = values[ind + 1];\n          }\n        }\n      }\n      //console.log(array);\n      //console.log(contact);\n      //console.log(obj[0].number);\n      return <VCardPreview contact={contact} numbers={obj[0].number} />\n    }\n    /* else if (message.mediaType === \"vcard\") {\n      let array = message.body.split(\"\\n\");\n      let obj = [];\n      let contact = \"\";\n      for (let index = 0; index < array.length; index++) {\n        const v = array[index];\n        let values = v.split(\":\");\n        for (let ind = 0; ind < values.length; ind++) {\n          if (values[ind].indexOf(\"+\") !== -1) {\n            obj.push({ number: values[ind] });\n          }\n          if (values[ind].indexOf(\"FN\") !== -1) {\n            contact = values[ind + 1];\n          }\n        }\n      }\n      return <VcardPreview contact={contact} numbers={obj[0].number} />\n    } */\n    /*else if (message.mediaType === \"multi_vcard\") {\n      console.log(\"multi_vcard\")\n      console.log(message)\n      \n      if(message.body !== null && message.body !== \"\") {\n        let newBody = JSON.parse(message.body)\n        return (\n          <>\n            {\n            newBody.map(v => (\n              <VcardPreview contact={v.name} numbers={v.number} />\n            ))\n            }\n          </>\n        )\n      } else return (<></>)\n    }*/\n    else if (message.mediaType === \"image\") {\n      return <ModalImageCors imageUrl={message.mediaUrl} />;\n    } else if (message.mediaType === \"audio\") {\n\n      //console.log(isIOS);\n\n      // Ahora todos los audios se envían como MP3 desde el backend\n      return (\n        <audio controls>\n          <source src={message.mediaUrl} type=\"audio/mp3\"></source>\n        </audio>\n      );\n    } else if (message.mediaType === \"video\") {\n      return (\n        <video\n          className={classes.messageMedia}\n          src={message.mediaUrl}\n          controls\n        />\n      );\n    } else {\n      return (\n        <>\n          <div className={classes.downloadMedia}>\n            <div style={{\n              display: 'flex',\n              alignItems: 'center',\n              padding: '12px',\n              backgroundColor: '#f8f9fa',\n              borderRadius: '8px',\n              border: '1px solid #e9ecef',\n              marginBottom: '8px',\n              maxWidth: '300px'\n            }}>\n              {/* Icono del archivo */}\n              {(() => {\n                // ✅ USAR NOMBRE ORIGINAL DEL ARCHIVO PARA EL ICONO\n                let fileName = message.body || 'document';\n                \n                // Si el body contiene el nombre del archivo, usarlo\n                if (message.body && message.body.includes('.')) {\n                  fileName = message.body;\n                } else if (message.mediaUrl) {\n                  // Extraer nombre desde la URL si no hay body\n                  const urlFileName = message.mediaUrl.split('/').pop();\n                  if (urlFileName && urlFileName.includes('.')) {\n                    const parts = urlFileName.split('.');\n                    if (parts.length > 2 && /^\\d+$/.test(parts[0])) {\n                      // Si la primera parte es un número (timestamp), usar el resto\n                      fileName = parts.slice(1).join('.');\n                    } else {\n                      fileName = urlFileName;\n                    }\n                  }\n                }\n                \n                const extension = fileName.split('.').pop()?.toLowerCase();\n                \n                // Colores e iconos según el tipo de archivo\n                let iconConfig;\n                if (['doc', 'docx'].includes(extension)) {\n                  iconConfig = { bg: '#2b579a', text: 'W' }; // Word - Azul\n                } else if (['xls', 'xlsx', 'csv'].includes(extension)) {\n                  iconConfig = { bg: '#217346', text: '📊' }; // Excel/CSV - Verde\n                } else if (['pdf'].includes(extension)) {\n                  iconConfig = { bg: '#dc3545', text: 'PDF' }; // PDF - Rojo\n                } else if (['ppt', 'pptx'].includes(extension)) {\n                  iconConfig = { bg: '#d24726', text: 'P' }; // PowerPoint - Naranja\n                } else if (['txt'].includes(extension)) {\n                  iconConfig = { bg: '#6c757d', text: 'T' }; // Texto - Gris\n                } else {\n                  iconConfig = { bg: '#6c757d', text: '📄' }; // Default - Gris\n                }\n                \n                return (\n                  <div style={{\n                    width: '40px',\n                    height: '40px',\n                    borderRadius: '6px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    marginRight: '12px',\n                    fontSize: '16px',\n                    fontWeight: 'bold',\n                    color: 'white',\n                    backgroundColor: iconConfig.bg\n                  }}>\n                    {iconConfig.text}\n                  </div>\n                );\n              })()}\n              \n              {/* Información del archivo */}\n              <div style={{ flex: 1, minWidth: 0 }}>\n                <div style={{\n                  fontSize: '14px',\n                  fontWeight: '600',\n                  color: '#212529',\n                  marginBottom: '2px',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap'\n                }}>\n                  {(() => {\n                    // ✅ USAR NOMBRE ORIGINAL DEL ARCHIVO\n                    let fileName = message.body || 'Documento';\n                    \n                    // Si el body contiene el nombre del archivo, usarlo\n                    if (message.body && message.body.includes('.')) {\n                      fileName = message.body;\n                    } else if (message.mediaUrl) {\n                      // Extraer nombre desde la URL si no hay body\n                      const urlFileName = message.mediaUrl.split('/').pop();\n                      if (urlFileName && urlFileName.includes('.')) {\n                        const parts = urlFileName.split('.');\n                        if (parts.length > 2 && /^\\d+$/.test(parts[0])) {\n                          // Si la primera parte es un número (timestamp), usar el resto\n                          fileName = parts.slice(1).join('.');\n                        } else {\n                          fileName = urlFileName;\n                        }\n                      }\n                    }\n                    \n                    return fileName;\n                  })()}\n                </div>\n                <div style={{\n                  fontSize: '12px',\n                  color: '#6c757d',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}>\n                  {(() => {\n                    // ✅ USAR TAMAÑO REAL DEL ARCHIVO\n                    let fileName = message.body || 'document';\n                    \n                    // Si el body contiene el nombre del archivo, usarlo\n                    if (message.body && message.body.includes('.')) {\n                      fileName = message.body;\n                    } else if (message.mediaUrl) {\n                      // Extraer nombre desde la URL si no hay body\n                      const urlFileName = message.mediaUrl.split('/').pop();\n                      if (urlFileName && urlFileName.includes('.')) {\n                        const parts = urlFileName.split('.');\n                        if (parts.length > 2 && /^\\d+$/.test(parts[0])) {\n                          // Si la primera parte es un número (timestamp), usar el resto\n                          fileName = parts.slice(1).join('.');\n                        } else {\n                          fileName = urlFileName;\n                        }\n                      }\n                    }\n                    \n                    const extension = fileName.split('.').pop()?.toUpperCase() || 'DOC';\n                    const fileSize = message.mediaSize || 0;\n                    \n                    return `${extension} • ${formatFileSize(fileSize)}`;\n                  })()}\n                </div>\n              </div>\n              \n              {/* Botón de descarga minimalista */}\n              <Button\n                size=\"small\"\n                style={{\n                  minWidth: '32px',\n                  width: '32px',\n                  height: '32px',\n                  borderRadius: '50%',\n                  backgroundColor: '#f8f9fa',\n                  border: '1px solid #dee2e6',\n                  color: '#6c757d',\n                  padding: 0\n                }}\n                target=\"_blank\"\n                href={message.mediaUrl}\n              >\n                <GetApp style={{ fontSize: '16px' }} />\n              </Button>\n            </div>\n          </div>\n        </>\n      );\n    }\n};\n\n  /*\n    const renderMessageAck = (message) => {\n      if (message.ack === 1) {\n        return <AccessTime fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 2) {\n        return <Done fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 3) {\n        return <DoneAll fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 4 || message.ack === 5) {\n        return <DoneAll fontSize=\"small\" className={classes.ackDoneAllIcon} />;\n      }\n    };\n    */\n\n    const renderMessageAck = (message) => {\n      if (message.ack === 0) {\n        return <AccessTime fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 1) {\n        return <Done fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 2) {\n        return <Done fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 3) {\n        return <DoneAll fontSize=\"small\" className={classes.ackIcons} />;\n      }\n      if (message.ack === 4 || message.ack === 5) {\n        return <DoneAll fontSize=\"small\" className={classes.ackDoneAllIcon} style={{color:'#0377FC'}} />;\n      }\n    };\n\n  const renderDailyTimestamps = (message, index) => {\n    if (index === 0) {\n      return (\n        <span\n          className={classes.dailyTimestamp}\n          key={`timestamp-${message.id}`}\n        >\n          <div className={classes.dailyTimestampText}>\n            {format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")}\n          </div>\n        </span>\n      );\n    }\n    if (index < messagesList.length - 1) {\n      let messageDay = parseISO(messagesList[index].createdAt);\n      let previousMessageDay = parseISO(messagesList[index - 1].createdAt);\n\n      if (!isSameDay(messageDay, previousMessageDay)) {\n        return (\n          <span\n            className={classes.dailyTimestamp}\n            key={`timestamp-${message.id}`}\n          >\n            <div className={classes.dailyTimestampText}>\n              {format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")}\n            </div>\n          </span>\n        );\n      }\n    }\n    if (index === messagesList.length - 1) {\n      return (\n        <div\n          key={`ref-${message.createdAt}`}\n          ref={lastMessageRef}\n          style={{ float: \"left\", clear: \"both\" }}\n        />\n      );\n    }\n  };\n\n  const renderNumberTicket = (message, index) => {\n    if (index < messagesList.length && index > 0) {\n\n      let messageTicket = message.ticketId;\n\n      let previousMessageTicket = messagesList[index - 1].ticketId;\n\n      if (messageTicket !== previousMessageTicket) {\n        return (\n          <center>\n            <div className={classes.ticketNunberClosed}>\n              Conversa encerrada: {format(parseISO(messagesList[index - 1].createdAt), \"dd/MM/yyyy HH:mm:ss\")}\n            </div>\n\n            <div className={classes.ticketNunberOpen}>\n              Conversa iniciada: {format(parseISO(message.createdAt), \"dd/MM/yyyy HH:mm:ss\")}\n            </div>\n          </center>\n        );\n      }\n    }\n  };\n\n  const renderMessageDivider = (message, index) => {\n    if (index < messagesList.length && index > 0) {\n      let messageUser = messagesList[index].fromMe;\n      let previousMessageUser = messagesList[index - 1].fromMe;\n\n      if (messageUser !== previousMessageUser) {\n        return (\n          <span style={{ marginTop: 16 }} key={`divider-${message.id}`}></span>\n        );\n      }\n    }\n  };\n\n  const renderQuotedMessage = (message) => {\n    return (\n      <div\n        className={clsx(classes.quotedContainerLeft, {\n          [classes.quotedContainerRight]: message.fromMe,\n        })}\n      >\n        <span\n          className={clsx(classes.quotedSideColorLeft, {\n            [classes.quotedSideColorRight]: message.quotedMsg?.fromMe,\n          })}\n        ></span>\n        <div className={classes.quotedMsg}>\n          {!message.quotedMsg?.fromMe && (\n            <span className={classes.messageContactName}>\n              {message.quotedMsg?.contact?.name}\n            </span>\n          )}\n\n          {message.quotedMsg.mediaType === \"audio\"\n            && (\n              <div className={classes.downloadMedia}>\n                <audio controls>\n                  <source src={message.quotedMsg.mediaUrl} type=\"audio/mp3\"></source>\n                </audio>\n              </div>\n            )\n          }\n          {message.quotedMsg.mediaType === \"video\"\n            && (\n              <video\n                className={classes.messageMedia}\n                src={message.quotedMsg.mediaUrl}\n                controls\n              />\n            )\n          }\n          {message.quotedMsg.mediaType === \"application\"\n            && (\n              <div className={classes.downloadMedia}>\n                <Button\n                  startIcon={<GetApp />}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  target=\"_blank\"\n                  href={message.quotedMsg.mediaUrl}\n                >\n                  Download\n                </Button>\n              </div>\n            )\n          }\n\n          {message.quotedMsg.mediaType === \"image\" ? (\n            <ModalImageCors imageUrl={message.quotedMsg.mediaUrl} />\n          ) : (\n            message.quotedMsg?.body\n          )}\n\n        </div>\n      </div>\n    );\n  };\n\n  const renderMessages = () => {\n    if (messagesList.length > 0) {\n      const viewMessagesList = messagesList.map((message, index) => {\n\n        if (message.mediaType === \"call_log\") {\n          return (\n            <React.Fragment key={message.id}>\n              {renderDailyTimestamps(message, index)}\n              {renderNumberTicket(message, index)}\n              {renderMessageDivider(message, index)}\n              <div className={classes.messageCenter}>\n                {isGroup && (\n                  <span className={classes.messageContactName}>\n                    {message.contact?.name}\n                  </span>\n                )}\n                <div>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 17\" width=\"20\" height=\"17\">\n                    <path fill=\"#df3333\" d=\"M18.2 12.1c-1.5-1.8-5-2.7-8.2-2.7s-6.7 1-8.2 2.7c-.7.8-.3 2.3.2 2.8.2.2.3.3.5.3 1.4 0 3.6-.7 3.6-.7.5-.2.8-.5.8-1v-1.3c.7-1.2 5.4-1.2 6.4-.1l.1.1v1.3c0 .2.1.4.2.6.1.2.3.3.5.4 0 0 2.2.7 3.6.7.2 0 1.4-2 .5-3.1zM5.4 3.2l4.7 4.6 5.8-5.7-.9-.8L10.1 6 6.4 2.3h2.5V1H4.1v4.8h1.3V3.2z\"></path>\n                  </svg> <span>Chamada de voz/vídeo perdida às {format(parseISO(message.createdAt), \"HH:mm\")}</span>\n                </div>\n              </div>\n            </React.Fragment>\n          );\n        }\n\n        if (!message.fromMe) {\n          return (\n            <React.Fragment key={message.id}>\n              {renderDailyTimestamps(message, index)}\n              {renderNumberTicket(message, index)}\n              {renderMessageDivider(message, index)}\n              <div\n                className={classes.messageLeft}\n                title={message.queueId && message.queue?.name}\n                onDoubleClick={(e) => hanldeReplyMessage(e, message)}\n              >\n                {showSelectMessageCheckbox && (\n                  <SelectMessageCheckbox\n                    // showSelectMessageCheckbox={showSelectMessageCheckbox}\n                    message={message}\n                  // selectedMessagesList={selectedMessagesList}\n                  // setSelectedMessagesList={setSelectedMessagesList}\n                  />\n                )}\n                {message.isForwarded && (\n                  <div>\n                    <span className={classes.forwardMessage}\n                    ><Reply style={{ color: \"grey\", transform: 'scaleX(-1)' }} /> Encaminhada\n                    </span>\n                    <br />\n                  </div>\n                )}\n                {isGroup && (\n                  <span className={classes.messageContactName}>\n                    {message.contact?.name}\n                  </span>\n                )}\n\n                {/* aviso de mensagem apagado pelo contato */}\n                {message.isDeleted && (\n                  <div>\n                    <span className={\"message-deleted\"}\n                    >Essa mensagem foi apagada pelo contato &nbsp;\n                      <Block\n                        color=\"error\"\n                        fontSize=\"small\"\n                        className={classes.deletedIcon}\n                      />\n                    </span>\n                  </div>\n                )}\n\n                {(message.mediaUrl || message.mediaType === \"locationMessage\" || message.mediaType === \"vcard\" || message.mediaType === \"contactMessage\"\n                  //|| message.mediaType === \"multi_vcard\" \n                ) && checkMessageMedia(message)}\n                <div className={classes.textContentItem}>\n                  {message.quotedMsg && renderQuotedMessage(message)}\n                  {message.mediaType !== \"reactionMessage\" && (\n                    <MarkdownWrapper message={message}>\n                      {message.mediaType === \"locationMessage\" || message.mediaType === \"contactMessage\" \n                        ? null\n                        : message.body}\n                    </MarkdownWrapper>\n                  )}\n                  {message.quotedMsg && message.mediaType === \"reactionMessage\" && message.body && (\n                    <>\n                      <span style={{ marginLeft: \"0px\", display: 'flex', alignItems: 'center' }}>\n                        <MarkdownWrapper message={message}>\n                          {\"_*\" + (message.fromMe ? i18n.t(\"messagesList.reactions.you\") : (message?.contact?.name ?? i18n.t(\"messagesList.reactions.contact\"))) + \"*_ \" + i18n.t(\"messagesList.reactions.reacted\") + \" \"}\n                        </MarkdownWrapper>\n                        <Badge \n                          className={classes.badge}\n                          overlap=\"circular\"\n                          anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                          }}\n                          badgeContent={\n                            <span style={{ fontSize: \"1.2em\", marginTop: \"0\", marginLeft: \"5px\" }}>\n                              {message.body}\n                            </span>\n                          }\n                        >\n                        </Badge>\n                      </span>\n                    </>\n                  )}\n                                  \n                  <span className={classes.timestamp}>\n                    {format(parseISO(message.createdAt), \"HH:mm\")}\n                    <IconButton\n                      size=\"small\"\n                      id=\"messageActionsButton\"\n                      disabled={message.isDeleted}\n                      onClick={(e) => handleOpenMessageOptionsMenu(e, message)}\n                      style={{\n                        marginLeft: \"8px\",\n                        padding: \"2px\",\n                        color: \"#999\",\n                        fontSize: \"12px\"\n                      }}\n                    >\n                      <ExpandMore style={{ fontSize: \"16px\" }} />\n                    </IconButton>\n                  </span>\n                </div>\n              </div>\n            </React.Fragment>\n          );\n        } else {\n          return (\n            <React.Fragment key={message.id}>\n              {renderDailyTimestamps(message, index)}\n              {renderNumberTicket(message, index)}\n              {renderMessageDivider(message, index)}\n              <div className={classes.messageRight}\n              onDoubleClick={(e) => hanldeReplyMessage(e, message)}\n            >\n              {showSelectMessageCheckbox && (\n                <SelectMessageCheckbox\n                  // showSelectMessageCheckbox={showSelectMessageCheckbox}\n                  message={message}\n                // selectedMessagesList={selectedMessagesList}\n                // setSelectedMessagesList={setSelectedMessagesList}\n                />\n              )}\n                {message.isForwarded && (\n                  <div>\n                    <span className={classes.forwardMessage}\n                    ><Reply style={{ color: \"grey\", transform: 'scaleX(-1)' }} /> Encaminhada\n                    </span>\n                    <br />\n                  </div>\n                )}\n                {(message.mediaUrl || message.mediaType === \"locationMessage\" || message.mediaType === \"vcard\" || message.mediaType === \"contactMessage\"\n                  //|| message.mediaType === \"multi_vcard\" \n                ) && checkMessageMedia(message)}\n                <div\n                  className={clsx(classes.textContentItem, {\n                    [classes.textContentItemDeleted]: message.isDeleted,\n                  })}\n                >\n                  {message.isDeleted && (\n                    <Block\n                      color=\"disabled\"\n                      fontSize=\"small\"\n                      className={classes.deletedIcon}\n                    />\n                  )}\n                  {message.quotedMsg && renderQuotedMessage(message)}\n                  {/* Solo mostrar el body si NO es un archivo (application, document, etc.) */}\n                  {message.mediaType !== \"reactionMessage\" && \n                   message.mediaType !== \"locationMessage\" && \n                   message.mediaType !== \"application\" && \n                   message.mediaType !== \"document\" && \n                   message.mediaType !== \"text\" && \n                   message.body && (\n                    <MarkdownWrapper message={message}>{message.body}</MarkdownWrapper>\n                  )}\n                  {message.quotedMsg && message.mediaType === \"reactionMessage\" && message.body && (\n                    <>\n                      <span style={{ marginLeft: \"0px\", display: 'flex', alignItems: 'center' }}>\n                        <MarkdownWrapper message={message}>\n                          {\"_*\" + (message.fromMe ? i18n.t(\"messagesList.reactions.you\") : (message?.contact?.name ?? i18n.t(\"messagesList.reactions.contact\"))) + \"*_ \" + i18n.t(\"messagesList.reactions.reacted\") + \" \"}\n                        </MarkdownWrapper>\n                        <Badge \n                          className={classes.badge}\n                          overlap=\"circular\"\n                          anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                          }}\n                          badgeContent={\n                            <span style={{ fontSize: \"1.2em\", marginTop: \"0\", marginLeft: \"5px\" }}>\n                              {message.body}\n                            </span>\n                          }\n                        >\n                        </Badge>\n                      </span>\n                    </>\n                  )}\n                  \n                \n                  <span className={classes.timestamp}>\n                    {format(parseISO(message.createdAt), \"HH:mm\")}\n                    {renderMessageAck(message)}\n                    <IconButton\n                      size=\"small\"\n                      id=\"messageActionsButton\"\n                      disabled={message.isDeleted}\n                      onClick={(e) => handleOpenMessageOptionsMenu(e, message)}\n                      style={{\n                        marginLeft: \"8px\",\n                        padding: \"2px\",\n                        color: \"#999\",\n                        fontSize: \"12px\"\n                      }}\n                    >\n                      <ExpandMore style={{ fontSize: \"16px\" }} />\n                    </IconButton>\n                  </span>\n                </div>\n              </div>\n            </React.Fragment>\n          );\n        }\n      });\n      return viewMessagesList;\n    } else {\n      return <div>{i18n.t(\"hardcodedElements.sayHelloToNewContact\")}</div>;\n    }\n  };\n\n  return (\n    <div className={classes.messagesListWrapper}>\n      <MessageOptionsMenu\n        message={selectedMessage}\n        anchorEl={anchorEl}\n        menuOpen={messageOptionsMenuOpen}\n        handleClose={handleCloseMessageOptionsMenu}\n      />\n      <div\n        id=\"messagesList\"\n        className={classes.messagesList}\n        onScroll={handleScroll}\n      >\n        {messagesList.length > 0 ? renderMessages() : []}\n      </div>\n      {loading && (\n        <div>\n          <CircularProgress className={classes.circleLoading} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MessagesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}