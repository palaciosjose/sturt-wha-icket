{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Stepper from\"@material-ui/core/Stepper\";import Step from\"@material-ui/core/Step\";import StepLabel from\"@material-ui/core/StepLabel\";import Typography from\"@material-ui/core/Typography\";import{Button,Grid,IconButton,StepContent,TextField,Dialog,DialogTitle,DialogContent,DialogActions,Select,MenuItem,FormControl,InputLabel}from\"@material-ui/core\";import AddIcon from\"@material-ui/icons/Add\";import DeleteOutlineIcon from\"@material-ui/icons/DeleteOutline\";import SaveIcon from\"@material-ui/icons/Save\";import EditIcon from\"@material-ui/icons/Edit\";import LinkIcon from\"@material-ui/icons/Link\";import api from\"../../services/api\";import toastError from\"../../errors/toastError\";import{AttachFile,DeleteOutline}from\"@material-ui/icons\";import{head}from\"lodash\";import{i18n}from\"../../translate/i18n\";const useStyles=makeStyles(theme=>({root:{width:\"100%\",//height: 400,\n[theme.breakpoints.down(\"sm\")]:{maxHeight:\"20vh\"}},button:{marginRight:theme.spacing(1)},input:{marginTop:theme.spacing(1),marginBottom:theme.spacing(1)},addButton:{marginTop:theme.spacing(2),marginBottom:theme.spacing(2)}}));export function QueueOptionStepper(_ref){let{queueId,options,updateOptions}=_ref;const classes=useStyles();const[activeOption,setActiveOption]=useState(-1);const[attachment,setAttachment]=useState(null);const attachmentFile=useRef(null);const[transferModalOpen,setTransferModalOpen]=useState(false);const[selectedOptionForTransfer,setSelectedOptionForTransfer]=useState(null);const[queues,setQueues]=useState([]);// ✅ CARGAR DEPARTAMENTOS PARA TRANSFERENCIA\nconst loadQueues=async()=>{try{const{data}=await api.get(\"/queue\");setQueues(data);}catch(e){toastError(e);}};// ✅ ABRIR MODAL DE TRANSFERENCIA\nconst openTransferModal=option=>{setSelectedOptionForTransfer(option);setTransferModalOpen(true);loadQueues();};// ✅ ELIMINAR TRANSFERENCIA\nconst handleRemoveTransfer=async option=>{try{const optionToUpdate={...option,transferQueueId:null};await api.request({url:`/queue-options/${optionToUpdate.id}`,method:\"PUT\",data:optionToUpdate});// ✅ ACTUALIZAR LA OPCIÓN EN EL ARRAY LOCAL\nconst optionIndex=options.findIndex(opt=>opt.id===optionToUpdate.id);if(optionIndex!==-1){options[optionIndex]=optionToUpdate;}updateOptions();toastError(\"Transferencia eliminada correctamente\");}catch(e){toastError(e);}};// ✅ GUARDAR TRANSFERENCIA EN ESTADO TEMPORAL\nconst handleSaveTransfer=async transferQueueId=>{try{let optionToUpdate={...selectedOptionForTransfer,transferQueueId};// ✅ NO GUARDAR EN DB, SOLO MANTENER EN MEMORIA\nconst optionIndex=options.findIndex(opt=>opt===selectedOptionForTransfer);if(optionIndex!==-1){options[optionIndex]=optionToUpdate;}setTransferModalOpen(false);setSelectedOptionForTransfer(null);updateOptions();// ✅ MOSTRAR MENSAJE TEMPORAL\ntoastError(\"Transferencia configurada temporalmente. Presiona 'AGREGAR' para guardar el departamento completo.\");}catch(e){toastError(e);}};const handleOption=index=>async()=>{setActiveOption(index);const option=options[index];if(option!==undefined&&option.id!==undefined){try{const{data}=await api.request({url:\"/queue-options\",method:\"GET\",params:{queueId,parentId:option.id}});const optionList=data.map(option=>{return{...option,children:[],edition:false};});option.children=optionList;updateOptions();}catch(e){toastError(e);}}};// ✅ GUARDAR OPCIÓN EN ESTADO TEMPORAL (NO EN DB)\nconst handleSave=async option=>{try{// ✅ NO GUARDAR EN DB, SOLO MANTENER EN MEMORIA\noption.edition=false;updateOptions();// ✅ MOSTRAR MENSAJE TEMPORAL\ntoastError(\"Opción guardada temporalmente. Presiona 'AGREGAR' para guardar el departamento completo.\");}catch(e){toastError(e);}};// ✅ GUARDAR TODAS LAS OPCIONES EN DB (LLAMADA DESDE AGREGAR)\nconst saveAllOptions=async()=>{try{// ✅ GUARDAR CADA OPCIÓN EN DB\nfor(const option of options){if(option.title&&option.title.trim()!==\"\"){if(option.id){// ✅ UPDATE OPCIÓN EXISTENTE\nawait api.request({url:`/queue-options/${option.id}`,method:\"PUT\",data:option});}else{// ✅ INSERT NUEVA OPCIÓN\nconst{data}=await api.request({url:`/queue-options`,method:\"POST\",data:option});option.id=data.id;}// ✅ GUARDAR ARCHIVOS ADJUNTOS\nif(option.mediaPath){const formData=new FormData();formData.append(\"file\",option.mediaPath);await api.post(`/queue-options/${option.id}/media-upload`,formData);}}}toastError(\"Todas las opciones guardadas correctamente.\");}catch(e){toastError(e);}};const handleEdition=index=>{options[index].edition=!options[index].edition;updateOptions();};const handleDeleteOption=async index=>{const option=options[index];if(option!==undefined&&option.id!==undefined){try{await api.request({url:`/queue-options/${option.id}`,method:\"DELETE\"});}catch(e){toastError(e);}}options.splice(index,1);options.forEach(async(option,order)=>{option.option=order+1;await handleSave(option);});updateOptions();};const handleAttachmentFile=e=>{const file=head(e.target.files);if(file){setAttachment(file);}};const handleOptionChangeTitle=(event,index)=>{options[index].title=event.target.value;updateOptions();};const handleOptionChangeMessage=(event,index)=>{options[index].message=event.target.value;updateOptions();};const renderTitle=index=>{const option=options[index];if(option.edition){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TextField,{value:option.title,onChange:event=>handleOptionChangeTitle(event,index),size:\"small\",className:classes.input,placeholder:i18n.t(\"queueOptions.placeholder.title\")}),/*#__PURE__*/React.createElement(\"div\",{style:{display:\"none\"}},/*#__PURE__*/React.createElement(\"input\",{type:\"file\",ref:attachmentFile,onChange:e=>handleAttachmentFile(e)})),option.edition&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IconButton,{color:\"primary\",variant:\"outlined\",size:\"small\",className:classes.button,onClick:()=>handleSave(option)},/*#__PURE__*/React.createElement(SaveIcon,null)),/*#__PURE__*/React.createElement(IconButton,{variant:\"outlined\",color:\"secondary\",size:\"small\",className:classes.button,onClick:()=>handleDeleteOption(index)},/*#__PURE__*/React.createElement(DeleteOutlineIcon,null)),!attachment&&!option.mediaPath&&/*#__PURE__*/React.createElement(IconButton,{variant:\"outlined\",color:\"primary\",size:\"small\",className:classes.button,onClick:()=>attachmentFile.current.click()},/*#__PURE__*/React.createElement(AttachFile,null)),(option.mediaPath||attachment)&&/*#__PURE__*/React.createElement(Grid,{xs:12,item:true},/*#__PURE__*/React.createElement(Button,{startIcon:/*#__PURE__*/React.createElement(AttachFile,null)},attachment!=null?attachment.name:option.mediaName),/*#__PURE__*/React.createElement(IconButton,{color:\"secondary\"},/*#__PURE__*/React.createElement(DeleteOutline,null))),/*#__PURE__*/React.createElement(IconButton,{variant:\"outlined\",size:\"small\",className:classes.button,onClick:()=>openTransferModal(option),style:{color:option.transferQueueId?'green':'gray',marginLeft:'5px'},title:\"Configurar transferencia de departamento\"},/*#__PURE__*/React.createElement(LinkIcon,null)),option.transferQueueId&&/*#__PURE__*/React.createElement(React.Fragment,null,(()=>{const transferQueue=queues.find(q=>q.id===option.transferQueueId);return transferQueue?/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",style:{display:'inline-flex',alignItems:'center',marginLeft:'8px',color:'green',cursor:'pointer',fontSize:'0.875rem'},onClick:()=>openTransferModal(option),title:\"Click para editar transferencia\"},\"\\u2192 \",transferQueue.name):null;})(),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",className:classes.button,onClick:()=>openTransferModal(option),style:{color:'blue',marginLeft:'4px'},title:\"Editar transferencia\"},/*#__PURE__*/React.createElement(EditIcon,null)),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",className:classes.button,onClick:()=>handleRemoveTransfer(option),style:{color:'red',marginLeft:'2px'},title:\"Eliminar transferencia\"},/*#__PURE__*/React.createElement(DeleteOutlineIcon,null)))));}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Typography,null,option.title!==\"\"?option.title:i18n.t(\"queueOptions.undefinedTitle\"),/*#__PURE__*/React.createElement(IconButton,{variant:\"outlined\",size:\"small\",className:classes.button,onClick:()=>handleEdition(index)},/*#__PURE__*/React.createElement(EditIcon,null))));};const renderMessage=index=>{const option=options[index];if(option.edition){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TextField,{style:{width:\"100%\"},multiline:true,value:option.message,onChange:event=>handleOptionChangeMessage(event,index),size:\"small\",className:classes.input,placeholder:i18n.t(\"queueOptions.placeholder.message\")}));}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Typography,{onClick:()=>handleEdition(index)},option.message));};const handleAddOption=index=>{const optionNumber=options[index].children.length+1;options[index].children.push({title:\"\",message:\"\",edition:false,option:optionNumber,queueId,parentId:options[index].id,children:[]});updateOptions();};const renderStep=(option,index)=>{return/*#__PURE__*/React.createElement(Step,{key:index},/*#__PURE__*/React.createElement(StepLabel,{style:{cursor:\"pointer\"},onClick:handleOption(index)},renderTitle(index)),/*#__PURE__*/React.createElement(StepContent,null,renderMessage(index),option.id!==undefined&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",size:\"small\",onClick:()=>handleAddOption(index),startIcon:/*#__PURE__*/React.createElement(AddIcon,null),variant:\"outlined\",className:classes.addButton},i18n.t(\"queueOptions.add\"))),/*#__PURE__*/React.createElement(QueueOptionStepper,{queueId:queueId,options:option.children,updateOptions:updateOptions})));};const renderStepper=()=>{return/*#__PURE__*/React.createElement(Stepper,{style:{marginBottom:0,paddingBottom:0},nonLinear:true,activeStep:activeOption,orientation:\"vertical\"},options.map((option,index)=>renderStep(option,index)));};return/*#__PURE__*/React.createElement(React.Fragment,null,renderStepper(),/*#__PURE__*/React.createElement(Dialog,{open:transferModalOpen,onClose:()=>setTransferModalOpen(false)},/*#__PURE__*/React.createElement(DialogTitle,null,\"\\uD83D\\uDD17 Configurar Transferencia - \",selectedOptionForTransfer===null||selectedOptionForTransfer===void 0?void 0:selectedOptionForTransfer.title),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",style:{marginBottom:'16px'}},\"Selecciona el departamento destino para esta opci\\xF3n:\"),/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Departamento Destino\"),/*#__PURE__*/React.createElement(Select,{value:(selectedOptionForTransfer===null||selectedOptionForTransfer===void 0?void 0:selectedOptionForTransfer.transferQueueId)||\"\",onChange:e=>{const updatedOption={...selectedOptionForTransfer,transferQueueId:e.target.value};setSelectedOptionForTransfer(updatedOption);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"\"},/*#__PURE__*/React.createElement(\"em\",null,\"-- Sin transferencia --\")),queues.map(queue=>/*#__PURE__*/React.createElement(MenuItem,{key:queue.id,value:queue.id},queue.name))))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:()=>setTransferModalOpen(false),color:\"secondary\"},\"Cancelar\"),/*#__PURE__*/React.createElement(Button,{onClick:()=>handleSaveTransfer(selectedOptionForTransfer===null||selectedOptionForTransfer===void 0?void 0:selectedOptionForTransfer.transferQueueId),color:\"primary\",variant:\"contained\"},\"Guardar Transferencia\"))));}export function QueueOptions(_ref2){let{queueId,onSaveAllOptions}=_ref2;const classes=useStyles();const[options,setOptions]=useState([]);useEffect(()=>{if(queueId){const fetchOptions=async()=>{try{const{data}=await api.request({url:\"/queue-options\",method:\"GET\",params:{queueId,parentId:-1}});const optionList=data.map(option=>{return{...option,children:[],edition:false};});setOptions(optionList);}catch(e){toastError(e);}};fetchOptions();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const renderStepper=()=>{if(options.length>0){return/*#__PURE__*/React.createElement(QueueOptionStepper,{queueId:queueId,updateOptions:updateOptions,options:options,saveAllOptions:saveAllOptions});}};const updateOptions=()=>{setOptions([...options]);};// ✅ GUARDAR TODAS LAS OPCIONES EN DB\nconst saveAllOptions=async()=>{try{// ✅ GUARDAR CADA OPCIÓN EN DB\nfor(const option of options){if(option.title&&option.title.trim()!==\"\"){if(option.id){// ✅ UPDATE OPCIÓN EXISTENTE\nawait api.request({url:`/queue-options/${option.id}`,method:\"PUT\",data:option});}else{// ✅ INSERT NUEVA OPCIÓN\nconst{data}=await api.request({url:`/queue-options`,method:\"POST\",data:option});option.id=data.id;}// ✅ GUARDAR ARCHIVOS ADJUNTOS\nif(option.mediaPath){const formData=new FormData();formData.append(\"file\",option.mediaPath);await api.post(`/queue-options/${option.id}/media-upload`,formData);}}}toastError(\"Todas las opciones guardadas correctamente.\");}catch(e){toastError(e);}};// ✅ EXPONER FUNCIÓN GLOBALMENTE\nuseEffect(()=>{window.saveAllQueueOptions=saveAllOptions;return()=>{delete window.saveAllQueueOptions;};},[options]);const addOption=()=>{const newOption={title:\"\",message:\"\",edition:false,option:options.length+1,queueId,parentId:null,children:[]};setOptions([...options,newOption]);};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Typography,null,i18n.t(\"queueOptions.title\"),/*#__PURE__*/React.createElement(Button,{color:\"primary\",size:\"small\",onClick:addOption,startIcon:/*#__PURE__*/React.createElement(AddIcon,null),style:{marginLeft:10},variant:\"outlined\"},i18n.t(\"queueOptions.add\"))),renderStepper());}","map":null,"metadata":{},"sourceType":"module"}