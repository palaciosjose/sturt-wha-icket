{"ast":null,"code":"import { useState } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nconst useFiles = () => {\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const [files, setFiles] = useState([]);\n  const list = async ({\n    companyId,\n    userId,\n    searchParam = \"\",\n    pageNumber = \"1\"\n  }) => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await api.get(\"/files/\", {\n        params: {\n          searchParam,\n          pageNumber,\n          companyId\n        }\n      });\n\n      // Cargar detalles completos de cada lista de archivos\n      const filesWithDetails = await Promise.all(data.files.map(async fileList => {\n        try {\n          const {\n            data: fileDetails\n          } = await api.get(`/files/${fileList.id}`);\n          return fileDetails; // Esto incluye la propiedad 'options' con los archivos\n        } catch (err) {\n          console.error(`Error cargando detalles de lista ${fileList.id}:`, err);\n          return fileList; // Retornar lista básica si falla\n        }\n      }));\n      setFiles(filesWithDetails);\n      setHasMore(data.hasMore);\n      setLoading(false);\n      return filesWithDetails;\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n      return [];\n    }\n  };\n  const show = async fileId => {\n    try {\n      const {\n        data\n      } = await api.get(`/files/${fileId}`);\n      return data;\n    } catch (err) {\n      toastError(err);\n      return null;\n    }\n  };\n  return {\n    files,\n    loading,\n    hasMore,\n    list,\n    show\n  };\n};\nexport default useFiles;","map":{"version":3,"names":["useState","toastError","api","useFiles","loading","setLoading","hasMore","setHasMore","files","setFiles","list","companyId","userId","searchParam","pageNumber","data","get","params","filesWithDetails","Promise","all","map","fileList","fileDetails","id","err","console","error","show","fileId"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/hooks/useFiles/index.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport toastError from \"../../errors/toastError\";\r\nimport api from \"../../services/api\";\r\n\r\nconst useFiles = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const list = async ({ companyId, userId, searchParam = \"\", pageNumber = \"1\" }) => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await api.get(\"/files/\", {\r\n        params: { \r\n          searchParam, \r\n          pageNumber,\r\n          companyId \r\n        },\r\n      });\r\n      \r\n      // Cargar detalles completos de cada lista de archivos\r\n      const filesWithDetails = await Promise.all(\r\n        data.files.map(async (fileList) => {\r\n          try {\r\n            const { data: fileDetails } = await api.get(`/files/${fileList.id}`);\r\n            return fileDetails; // Esto incluye la propiedad 'options' con los archivos\r\n          } catch (err) {\r\n            console.error(`Error cargando detalles de lista ${fileList.id}:`, err);\r\n            return fileList; // Retornar lista básica si falla\r\n          }\r\n        })\r\n      );\r\n      \r\n      setFiles(filesWithDetails);\r\n      setHasMore(data.hasMore);\r\n      setLoading(false);\r\n      return filesWithDetails;\r\n    } catch (err) {\r\n      setLoading(false);\r\n      toastError(err);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const show = async (fileId) => {\r\n    try {\r\n      const { data } = await api.get(`/files/${fileId}`);\r\n      return data;\r\n    } catch (err) {\r\n      toastError(err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return { \r\n    files, \r\n    loading, \r\n    hasMore, \r\n    list, \r\n    show \r\n  };\r\n};\r\n\r\nexport default useFiles; "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,GAAG,MAAM,oBAAoB;AAEpC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,IAAI,GAAG,MAAAA,CAAO;IAAEC,SAAS;IAAEC,MAAM;IAAEC,WAAW,GAAG,EAAE;IAAEC,UAAU,GAAG;EAAI,CAAC,KAAK;IAChFT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM;QAAEU;MAAK,CAAC,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,SAAS,EAAE;QACxCC,MAAM,EAAE;UACNJ,WAAW;UACXC,UAAU;UACVH;QACF;MACF,CAAC,CAAC;;MAEF;MACA,MAAMO,gBAAgB,GAAG,MAAMC,OAAO,CAACC,GAAG,CACxCL,IAAI,CAACP,KAAK,CAACa,GAAG,CAAC,MAAOC,QAAQ,IAAK;QACjC,IAAI;UACF,MAAM;YAAEP,IAAI,EAAEQ;UAAY,CAAC,GAAG,MAAMrB,GAAG,CAACc,GAAG,CAAC,UAAUM,QAAQ,CAACE,EAAE,EAAE,CAAC;UACpE,OAAOD,WAAW,CAAC,CAAC;QACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;UACZC,OAAO,CAACC,KAAK,CAAC,oCAAoCL,QAAQ,CAACE,EAAE,GAAG,EAAEC,GAAG,CAAC;UACtE,OAAOH,QAAQ,CAAC,CAAC;QACnB;MACF,CAAC,CACH,CAAC;MAEDb,QAAQ,CAACS,gBAAgB,CAAC;MAC1BX,UAAU,CAACQ,IAAI,CAACT,OAAO,CAAC;MACxBD,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOa,gBAAgB;IACzB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZpB,UAAU,CAAC,KAAK,CAAC;MACjBJ,UAAU,CAACwB,GAAG,CAAC;MACf,OAAO,EAAE;IACX;EACF,CAAC;EAED,MAAMG,IAAI,GAAG,MAAOC,MAAM,IAAK;IAC7B,IAAI;MACF,MAAM;QAAEd;MAAK,CAAC,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,UAAUa,MAAM,EAAE,CAAC;MAClD,OAAOd,IAAI;IACb,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZxB,UAAU,CAACwB,GAAG,CAAC;MACf,OAAO,IAAI;IACb;EACF,CAAC;EAED,OAAO;IACLjB,KAAK;IACLJ,OAAO;IACPE,OAAO;IACPI,IAAI;IACJkB;EACF,CAAC;AACH,CAAC;AAED,eAAezB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}