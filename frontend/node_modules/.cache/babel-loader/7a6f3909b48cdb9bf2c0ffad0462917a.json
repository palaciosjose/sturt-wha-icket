{"ast":null,"code":"import { useReducer, useEffect, useRef, useContext, useState } from \"react\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport logger from \"../../utils/logger\";\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_WHATSAPPS\") {\n    const whatsApps = action.payload;\n    return [...whatsApps];\n  }\n  if (action.type === \"UPDATE_WHATSAPPS\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex(s => s.id === whatsApp.id);\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex] = whatsApp;\n      return [...state];\n    } else {\n      return [whatsApp, ...state];\n    }\n  }\n  if (action.type === \"UPDATE_SESSION\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex(s => s.id === whatsApp.id);\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex].status = whatsApp.status;\n      state[whatsAppIndex].updatedAt = whatsApp.updatedAt;\n      state[whatsAppIndex].qrcode = whatsApp.qrcode;\n      state[whatsAppIndex].retries = whatsApp.retries;\n      return [...state];\n    } else {\n      return [...state];\n    }\n  }\n  if (action.type === \"DELETE_WHATSAPPS\") {\n    const whatsAppId = action.payload;\n    const whatsAppIndex = state.findIndex(s => s.id === whatsAppId);\n    if (whatsAppIndex !== -1) {\n      state.splice(whatsAppIndex, 1);\n    }\n    return [...state];\n  }\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\nconst useWhatsApps = () => {\n  const [whatsApps, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(true);\n  const isMounted = useRef(true);\n  const socketManager = useContext(SocketContext);\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  // ✅ FUNCIÓN PARA REFRESCAR DATOS\n  const refreshWhatsApps = async () => {\n    if (isMounted.current) {\n      try {\n        setLoading(true);\n        logger.whatsapp.debug(\"🔄 REFRESCANDO DATOS DE WHATSAPP...\");\n        const {\n          data\n        } = await api.get(\"/whatsapp/?session=0\");\n        if (isMounted.current) {\n          dispatch({\n            type: \"REFRESH_WHATSAPPS\",\n            payload: data\n          });\n          logger.whatsapp.debug(\"✅ DATOS REFRESCADOS:\", data.length, \"conexiones\");\n        }\n      } catch (err) {\n        if (isMounted.current) {\n          logger.whatsapp.error(\"❌ ERROR AL REFRESCAR:\", err);\n          toastError(err);\n        }\n      } finally {\n        if (isMounted.current) {\n          setLoading(false);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    if (isMounted.current) {\n      setLoading(true);\n      const fetchSession = async () => {\n        try {\n          logger.whatsapp.debug(\"🔄 CARGANDO CONEXIONES...\");\n          const {\n            data\n          } = await api.get(\"/whatsapp/?session=0\");\n          if (isMounted.current) {\n            dispatch({\n              type: \"LOAD_WHATSAPPS\",\n              payload: data\n            });\n            logger.whatsapp.debug(\"✅ CONEXIONES CARGADAS:\", data.length);\n            setLoading(false);\n          }\n        } catch (err) {\n          if (isMounted.current) {\n            logger.whatsapp.error(\"❌ ERROR AL CARGAR CONEXIONES:\", err);\n            setLoading(false);\n            toastError(err);\n          }\n        }\n      };\n      fetchSession();\n    }\n  }, []);\n  useEffect(() => {\n    if (isMounted.current) {\n      const companyId = localStorage.getItem(\"companyId\");\n      const socket = socketManager.getSocket(companyId);\n      socket.on(`company-${companyId}-whatsapp`, data => {\n        if (isMounted.current) {\n          logger.whatsapp.debug(\"📡 EVENTO WHATSAPP RECIBIDO:\", data.action);\n          if (data.action === \"update\") {\n            logger.whatsapp.debug(\"🔄 ACTUALIZANDO CONEXIÓN:\", data.whatsapp.id);\n            dispatch({\n              type: \"UPDATE_WHATSAPPS\",\n              payload: data.whatsapp\n            });\n          }\n          if (data.action === \"delete\") {\n            logger.whatsapp.debug(\"🗑️ ELIMINANDO CONEXIÓN:\", data.whatsappId);\n            dispatch({\n              type: \"DELETE_WHATSAPPS\",\n              payload: data.whatsappId\n            });\n          }\n\n          // ✅ MANEJAR EVENTO DE REFRESCO\n          if (data.action === \"refresh\") {\n            logger.whatsapp.debug(\"🔄 EVENTO DE REFRESCO RECIBIDO\");\n            refreshWhatsApps();\n          }\n        }\n      });\n      socket.on(`company-${companyId}-whatsappSession`, data => {\n        if (isMounted.current) {\n          if (data.action === \"update\") {\n            logger.whatsapp.debug(\"🔄 ACTUALIZANDO SESIÓN:\", data.session.id);\n            dispatch({\n              type: \"UPDATE_SESSION\",\n              payload: data.session\n            });\n          }\n        }\n      });\n      return () => {\n        if (isMounted.current) {\n          socket.disconnect();\n        }\n      };\n    }\n  }, [socketManager]);\n  return {\n    whatsApps,\n    loading,\n    refreshWhatsApps\n  };\n};\nexport default useWhatsApps;","map":{"version":3,"names":["useReducer","useEffect","useRef","useContext","useState","SocketContext","api","toastError","logger","reducer","state","action","type","whatsApps","payload","whatsApp","whatsAppIndex","findIndex","s","id","status","updatedAt","qrcode","retries","whatsAppId","splice","useWhatsApps","dispatch","loading","setLoading","isMounted","socketManager","current","refreshWhatsApps","whatsapp","debug","data","get","length","err","error","fetchSession","companyId","localStorage","getItem","socket","getSocket","on","whatsappId","session","disconnect"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/hooks/useWhatsApps/index.js"],"sourcesContent":["import { useReducer, useEffect, useRef, useContext, useState } from \"react\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport logger from \"../../utils/logger\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_WHATSAPPS\") {\n    const whatsApps = action.payload;\n\n    return [...whatsApps];\n  }\n\n  if (action.type === \"UPDATE_WHATSAPPS\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsApp.id);\n\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex] = whatsApp;\n      return [...state];\n    } else {\n      return [whatsApp, ...state];\n    }\n  }\n\n  if (action.type === \"UPDATE_SESSION\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsApp.id);\n\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex].status = whatsApp.status;\n      state[whatsAppIndex].updatedAt = whatsApp.updatedAt;\n      state[whatsAppIndex].qrcode = whatsApp.qrcode;\n      state[whatsAppIndex].retries = whatsApp.retries;\n      return [...state];\n    } else {\n      return [...state];\n    }\n  }\n\n  if (action.type === \"DELETE_WHATSAPPS\") {\n    const whatsAppId = action.payload;\n\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsAppId);\n    if (whatsAppIndex !== -1) {\n      state.splice(whatsAppIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useWhatsApps = () => {\n  const [whatsApps, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(true);\n  const isMounted = useRef(true);\n\n  const socketManager = useContext(SocketContext);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  // ✅ FUNCIÓN PARA REFRESCAR DATOS\n  const refreshWhatsApps = async () => {\n    if (isMounted.current) {\n      try {\n        setLoading(true);\n        logger.whatsapp.debug(\"🔄 REFRESCANDO DATOS DE WHATSAPP...\");\n        const { data } = await api.get(\"/whatsapp/?session=0\");\n        if (isMounted.current) {\n          dispatch({ type: \"REFRESH_WHATSAPPS\", payload: data });\n          logger.whatsapp.debug(\"✅ DATOS REFRESCADOS:\", data.length, \"conexiones\");\n        }\n      } catch (err) {\n        if (isMounted.current) {\n          logger.whatsapp.error(\"❌ ERROR AL REFRESCAR:\", err);\n          toastError(err);\n        }\n      } finally {\n        if (isMounted.current) {\n          setLoading(false);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (isMounted.current) {\n      setLoading(true);\n      const fetchSession = async () => {\n        try {\n          logger.whatsapp.debug(\"🔄 CARGANDO CONEXIONES...\");\n          const { data } = await api.get(\"/whatsapp/?session=0\");\n          if (isMounted.current) {\n            dispatch({ type: \"LOAD_WHATSAPPS\", payload: data });\n            logger.whatsapp.debug(\"✅ CONEXIONES CARGADAS:\", data.length);\n            setLoading(false);\n          }\n        } catch (err) {\n          if (isMounted.current) {\n            logger.whatsapp.error(\"❌ ERROR AL CARGAR CONEXIONES:\", err);\n            setLoading(false);\n            toastError(err);\n          }\n        }\n      };\n      fetchSession();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const companyId = localStorage.getItem(\"companyId\");\n      const socket = socketManager.getSocket(companyId);\n\n      socket.on(`company-${companyId}-whatsapp`, (data) => {\n        if (isMounted.current) {\n          logger.whatsapp.debug(\"📡 EVENTO WHATSAPP RECIBIDO:\", data.action);\n          \n          if (data.action === \"update\") {\n            logger.whatsapp.debug(\"🔄 ACTUALIZANDO CONEXIÓN:\", data.whatsapp.id);\n            dispatch({ type: \"UPDATE_WHATSAPPS\", payload: data.whatsapp });\n          }\n          \n          if (data.action === \"delete\") {\n            logger.whatsapp.debug(\"🗑️ ELIMINANDO CONEXIÓN:\", data.whatsappId);\n            dispatch({ type: \"DELETE_WHATSAPPS\", payload: data.whatsappId });\n          }\n          \n          // ✅ MANEJAR EVENTO DE REFRESCO\n          if (data.action === \"refresh\") {\n            logger.whatsapp.debug(\"🔄 EVENTO DE REFRESCO RECIBIDO\");\n            refreshWhatsApps();\n          }\n        }\n      });\n\n      socket.on(`company-${companyId}-whatsappSession`, (data) => {\n        if (isMounted.current) {\n          if (data.action === \"update\") {\n            logger.whatsapp.debug(\"🔄 ACTUALIZANDO SESIÓN:\", data.session.id);\n            dispatch({ type: \"UPDATE_SESSION\", payload: data.session });\n          }\n        }\n      });\n\n      return () => {\n        if (isMounted.current) {\n          socket.disconnect();\n        }\n      };\n    }\n  }, [socketManager]);\n\n  return { whatsApps, loading, refreshWhatsApps };\n};\n\nexport default useWhatsApps;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}