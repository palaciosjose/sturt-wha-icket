{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\whaticket03\\\\waticketsaas\\\\frontend\\\\src\\\\components\\\\QueueOptions\\\\index.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, Grid, IconButton, StepContent, TextField, Dialog, DialogTitle, DialogContent, DialogActions, Select, MenuItem, FormControl, InputLabel } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { AttachFile, DeleteOutline } from \"@material-ui/icons\";\nimport { head } from \"lodash\";\nimport { i18n } from \"../../translate/i18n\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    //height: 400,\n    [theme.breakpoints.down(\"sm\")]: {\n      maxHeight: \"20vh\"\n    }\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  input: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  addButton: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport function QueueOptionStepper({\n  queueId,\n  options,\n  updateOptions\n}) {\n  const classes = useStyles();\n  const [activeOption, setActiveOption] = useState(-1);\n  const [attachment, setAttachment] = useState(null);\n  const attachmentFile = useRef(null);\n  const [transferModalOpen, setTransferModalOpen] = useState(false);\n  const [selectedOptionForTransfer, setSelectedOptionForTransfer] = useState(null);\n  const [queues, setQueues] = useState([]);\n\n  // ✅ CARGAR DEPARTAMENTOS PARA TRANSFERENCIA\n  const loadQueues = async () => {\n    try {\n      const {\n        data\n      } = await api.get(\"/queue\");\n      setQueues(data);\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  // ✅ ABRIR MODAL DE TRANSFERENCIA\n  const openTransferModal = option => {\n    setSelectedOptionForTransfer(option);\n    setTransferModalOpen(true);\n    loadQueues();\n  };\n\n  // ✅ GUARDAR TRANSFERENCIA\n  const handleSaveTransfer = async transferQueueId => {\n    try {\n      let optionToUpdate = {\n        ...selectedOptionForTransfer,\n        transferQueueId\n      };\n\n      // ✅ SI LA OPCIÓN NO TIENE ID, PRIMERO LA GUARDAMOS\n      if (!selectedOptionForTransfer.id) {\n        const {\n          data\n        } = await api.request({\n          url: `/queue-options`,\n          method: \"POST\",\n          data: optionToUpdate\n        });\n        optionToUpdate.id = data.id;\n      }\n\n      // ✅ LUEGO ACTUALIZAMOS CON LA TRANSFERENCIA\n      await api.request({\n        url: `/queue-options/${optionToUpdate.id}`,\n        method: \"PUT\",\n        data: optionToUpdate\n      });\n      setTransferModalOpen(false);\n      setSelectedOptionForTransfer(null);\n      updateOptions();\n      toastError(\"Transferencia configurada correctamente\");\n    } catch (e) {\n      toastError(e);\n    }\n  };\n  const handleOption = index => async () => {\n    setActiveOption(index);\n    const option = options[index];\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        const {\n          data\n        } = await api.request({\n          url: \"/queue-options\",\n          method: \"GET\",\n          params: {\n            queueId,\n            parentId: option.id\n          }\n        });\n        const optionList = data.map(option => {\n          return {\n            ...option,\n            children: [],\n            edition: false\n          };\n        });\n        option.children = optionList;\n        updateOptions();\n      } catch (e) {\n        toastError(e);\n      }\n    }\n  };\n  const handleSave = async option => {\n    try {\n      if (option.id) {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"PUT\",\n          data: option\n        });\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/queue-options/${option.id}/media-upload`, formData);\n        }\n      } else {\n        const {\n          data\n        } = await api.request({\n          url: `/queue-options`,\n          method: \"POST\",\n          data: option\n        });\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/queue-options/${option.id}/media-upload`, formData);\n        }\n        option.id = data.id;\n      }\n      option.edition = false;\n      updateOptions();\n    } catch (e) {\n      toastError(e);\n    }\n  };\n  const handleEdition = index => {\n    options[index].edition = !options[index].edition;\n    updateOptions();\n  };\n  const handleDeleteOption = async index => {\n    const option = options[index];\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"DELETE\"\n        });\n      } catch (e) {\n        toastError(e);\n      }\n    }\n    options.splice(index, 1);\n    options.forEach(async (option, order) => {\n      option.option = order + 1;\n      await handleSave(option);\n    });\n    updateOptions();\n  };\n  const handleAttachmentFile = e => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n  const handleOptionChangeTitle = (event, index) => {\n    options[index].title = event.target.value;\n    updateOptions();\n  };\n  const handleOptionChangeMessage = (event, index) => {\n    options[index].message = event.target.value;\n    updateOptions();\n  };\n  const renderTitle = index => {\n    const option = options[index];\n    if (option.edition) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n        value: option.title,\n        onChange: event => handleOptionChangeTitle(event, index),\n        size: \"small\",\n        className: classes.input,\n        placeholder: i18n.t(\"queueOptions.placeholder.title\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        ref: attachmentFile,\n        onChange: e => handleAttachmentFile(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      })), option.edition && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        variant: \"outlined\",\n        size: \"small\",\n        className: classes.button,\n        onClick: () => handleSave(option),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(SaveIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        size: \"small\",\n        className: classes.button,\n        onClick: () => handleDeleteOption(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      })), !attachment && !option.mediaPath && /*#__PURE__*/React.createElement(IconButton, {\n        variant: \"outlined\",\n        color: \"primary\",\n        size: \"small\",\n        className: classes.button,\n        onClick: () => attachmentFile.current.click(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AttachFile, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 19\n        }\n      })), (option.mediaPath || attachment) && /*#__PURE__*/React.createElement(Grid, {\n        xs: 12,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(AttachFile, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 42\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 23\n        }\n      }, attachment != null ? attachment.name : option.mediaName), /*#__PURE__*/React.createElement(IconButton, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(IconButton, {\n        variant: \"outlined\",\n        size: \"small\",\n        className: classes.button,\n        onClick: () => openTransferModal(option),\n        style: {\n          color: option.transferQueueId ? 'green' : 'gray',\n          marginLeft: '5px'\n        },\n        title: \"Configurar transferencia de departamento\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(LinkIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }\n      }))));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }\n    }, option.title !== \"\" ? option.title : i18n.t(\"queueOptions.undefinedTitle\"), /*#__PURE__*/React.createElement(IconButton, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleEdition(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    }))));\n  };\n  const renderMessage = index => {\n    const option = options[index];\n    if (option.edition) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n        style: {\n          width: \"100%\"\n        },\n        multiline: true,\n        value: option.message,\n        onChange: event => handleOptionChangeMessage(event, index),\n        size: \"small\",\n        className: classes.input,\n        placeholder: i18n.t(\"queueOptions.placeholder.message\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }\n      }));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      onClick: () => handleEdition(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }\n    }, option.message));\n  };\n  const handleAddOption = index => {\n    const optionNumber = options[index].children.length + 1;\n    options[index].children.push({\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: optionNumber,\n      queueId,\n      parentId: options[index].id,\n      children: []\n    });\n    updateOptions();\n  };\n  const renderStep = (option, index) => {\n    return /*#__PURE__*/React.createElement(Step, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: handleOption(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }\n    }, renderTitle(index)), /*#__PURE__*/React.createElement(StepContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }\n    }, renderMessage(index), option.id !== undefined && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      size: \"small\",\n      onClick: () => handleAddOption(index),\n      startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 28\n        }\n      }),\n      variant: \"outlined\",\n      className: classes.addButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }\n    }, i18n.t(\"queueOptions.add\"))), /*#__PURE__*/React.createElement(QueueOptionStepper, {\n      queueId: queueId,\n      options: option.children,\n      updateOptions: updateOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }\n    })));\n  };\n  const renderStepper = () => {\n    return /*#__PURE__*/React.createElement(Stepper, {\n      style: {\n        marginBottom: 0,\n        paddingBottom: 0\n      },\n      nonLinear: true,\n      activeStep: activeOption,\n      orientation: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 7\n      }\n    }, options.map((option, index) => renderStep(option, index)));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderStepper(), /*#__PURE__*/React.createElement(Dialog, {\n    open: transferModalOpen,\n    onClose: () => setTransferModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDD17 Configurar Transferencia - \", selectedOptionForTransfer === null || selectedOptionForTransfer === void 0 ? void 0 : selectedOptionForTransfer.title), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      marginBottom: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }, \"Selecciona el departamento destino para esta opci\\xF3n:\"), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }\n  }, \"Departamento Destino\"), /*#__PURE__*/React.createElement(Select, {\n    value: (selectedOptionForTransfer === null || selectedOptionForTransfer === void 0 ? void 0 : selectedOptionForTransfer.transferQueueId) || \"\",\n    onChange: e => {\n      const updatedOption = {\n        ...selectedOptionForTransfer,\n        transferQueueId: e.target.value\n      };\n      setSelectedOptionForTransfer(updatedOption);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  }, \"-- Sin transferencia --\")), queues.map(queue => /*#__PURE__*/React.createElement(MenuItem, {\n    key: queue.id,\n    value: queue.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }\n  }, queue.name))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTransferModalOpen(false),\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleSaveTransfer(selectedOptionForTransfer === null || selectedOptionForTransfer === void 0 ? void 0 : selectedOptionForTransfer.transferQueueId),\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }\n  }, \"Guardar Transferencia\"))));\n}\nexport function QueueOptions({\n  queueId\n}) {\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (queueId) {\n      const fetchOptions = async () => {\n        try {\n          const {\n            data\n          } = await api.request({\n            url: \"/queue-options\",\n            method: \"GET\",\n            params: {\n              queueId,\n              parentId: -1\n            }\n          });\n          const optionList = data.map(option => {\n            return {\n              ...option,\n              children: [],\n              edition: false\n            };\n          });\n          setOptions(optionList);\n        } catch (e) {\n          toastError(e);\n        }\n      };\n      fetchOptions();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const renderStepper = () => {\n    if (options.length > 0) {\n      return /*#__PURE__*/React.createElement(QueueOptionStepper, {\n        queueId: queueId,\n        updateOptions: updateOptions,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n  const updateOptions = () => {\n    setOptions([...options]);\n  };\n  const addOption = () => {\n    const newOption = {\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: options.length + 1,\n      queueId,\n      parentId: null,\n      children: []\n    };\n    setOptions([...options, newOption]);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }\n  }, i18n.t(\"queueOptions.title\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    onClick: addOption,\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 22\n      }\n    }),\n    style: {\n      marginLeft: 10\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }\n  }, i18n.t(\"queueOptions.add\"))), renderStepper());\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","makeStyles","Stepper","Step","StepLabel","Typography","Button","Grid","IconButton","StepContent","TextField","Dialog","DialogTitle","DialogContent","DialogActions","Select","MenuItem","FormControl","InputLabel","AddIcon","DeleteOutlineIcon","SaveIcon","EditIcon","LinkIcon","api","toastError","AttachFile","DeleteOutline","head","i18n","useStyles","theme","root","width","breakpoints","down","maxHeight","button","marginRight","spacing","input","marginTop","marginBottom","addButton","QueueOptionStepper","queueId","options","updateOptions","classes","activeOption","setActiveOption","attachment","setAttachment","attachmentFile","transferModalOpen","setTransferModalOpen","selectedOptionForTransfer","setSelectedOptionForTransfer","queues","setQueues","loadQueues","data","get","e","openTransferModal","option","handleSaveTransfer","transferQueueId","optionToUpdate","id","request","url","method","handleOption","index","undefined","params","parentId","optionList","map","children","edition","handleSave","formData","FormData","append","post","handleEdition","handleDeleteOption","splice","forEach","order","handleAttachmentFile","file","target","files","handleOptionChangeTitle","event","title","value","handleOptionChangeMessage","message","renderTitle","createElement","Fragment","onChange","size","className","placeholder","t","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","display","type","ref","color","variant","onClick","mediaPath","current","click","xs","item","startIcon","name","mediaName","marginLeft","renderMessage","multiline","handleAddOption","optionNumber","length","push","renderStep","key","cursor","renderStepper","paddingBottom","nonLinear","activeStep","orientation","open","onClose","fullWidth","updatedOption","queue","QueueOptions","setOptions","fetchOptions","addOption","newOption"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/components/QueueOptions/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, Grid, IconButton, StepContent, TextField, Dialog, DialogTitle, DialogContent, DialogActions, Select, MenuItem, FormControl, InputLabel } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { AttachFile, DeleteOutline } from \"@material-ui/icons\";\nimport { head } from \"lodash\";\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    //height: 400,\n    [theme.breakpoints.down(\"sm\")]: {\n      maxHeight: \"20vh\",\n    },\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  addButton: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport function QueueOptionStepper({ queueId, options, updateOptions }) {\n  const classes = useStyles();\n  const [activeOption, setActiveOption] = useState(-1);\n  const [attachment, setAttachment] = useState(null);\n  const attachmentFile = useRef(null);\n  const [transferModalOpen, setTransferModalOpen] = useState(false);\n  const [selectedOptionForTransfer, setSelectedOptionForTransfer] = useState(null);\n  const [queues, setQueues] = useState([]);\n\n\n  // ✅ CARGAR DEPARTAMENTOS PARA TRANSFERENCIA\n  const loadQueues = async () => {\n    try {\n      const { data } = await api.get(\"/queue\");\n      setQueues(data);\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  // ✅ ABRIR MODAL DE TRANSFERENCIA\n  const openTransferModal = (option) => {\n    setSelectedOptionForTransfer(option);\n    setTransferModalOpen(true);\n    loadQueues();\n  };\n\n  // ✅ GUARDAR TRANSFERENCIA\n  const handleSaveTransfer = async (transferQueueId) => {\n    try {\n      let optionToUpdate = { ...selectedOptionForTransfer, transferQueueId };\n      \n      // ✅ SI LA OPCIÓN NO TIENE ID, PRIMERO LA GUARDAMOS\n      if (!selectedOptionForTransfer.id) {\n        const { data } = await api.request({\n          url: `/queue-options`,\n          method: \"POST\",\n          data: optionToUpdate,\n        });\n        optionToUpdate.id = data.id;\n      }\n      \n      // ✅ LUEGO ACTUALIZAMOS CON LA TRANSFERENCIA\n      await api.request({\n        url: `/queue-options/${optionToUpdate.id}`,\n        method: \"PUT\",\n        data: optionToUpdate,\n      });\n      \n      setTransferModalOpen(false);\n      setSelectedOptionForTransfer(null);\n      updateOptions();\n      toastError(\"Transferencia configurada correctamente\");\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  const handleOption = (index) => async () => {\n    setActiveOption(index);\n    const option = options[index];\n\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        const { data } = await api.request({\n          url: \"/queue-options\",\n          method: \"GET\",\n          params: { queueId, parentId: option.id },\n        });\n        const optionList = data.map((option) => {\n          return {\n            ...option,\n            children: [],\n            edition: false,\n          };\n        });\n        option.children = optionList;\n        updateOptions();\n      } catch (e) {\n        toastError(e);\n      }\n    }\n  };\n\n  const handleSave = async (option) => {\n    try {\n      if (option.id) {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"PUT\",\n          data: option,\n        });\n\t\tif (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/queue-options/${option.id}/media-upload`, formData);\n        }\n      } else {\n        const { data } = await api.request({\n          url: `/queue-options`,\n          method: \"POST\",\n          data: option,\n        });\n\t\tif (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/queue-options/${option.id}/media-upload`, formData);\n        }\n        option.id = data.id;\n      }\n      option.edition = false;\n      updateOptions();\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  const handleEdition = (index) => {\n    options[index].edition = !options[index].edition;\n    updateOptions();\n  };\n\n  const handleDeleteOption = async (index) => {\n    const option = options[index];\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"DELETE\",\n        });\n      } catch (e) {\n        toastError(e);\n      }\n    }\n    options.splice(index, 1);\n    options.forEach(async (option, order) => {\n      option.option = order + 1;\n      await handleSave(option);\n    });\n    updateOptions();\n  };\n\n  const handleAttachmentFile = (e) => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n\n  const handleOptionChangeTitle = (event, index) => {\n    options[index].title = event.target.value;\n    updateOptions();\n  };\n\n  const handleOptionChangeMessage = (event, index) => {\n    options[index].message = event.target.value;\n    updateOptions();\n  };\n\n  const renderTitle = (index) => {\n    const option = options[index];\n    if (option.edition) {\n      return (\n        <>\n          <TextField\n            value={option.title}\n            onChange={(event) => handleOptionChangeTitle(event, index)}\n            size=\"small\"\n            className={classes.input}\n            placeholder={i18n.t(\"queueOptions.placeholder.title\")}\n          />\n                    <div style={{ display: \"none\" }}>\n            <input\n              type=\"file\"\n              ref={attachmentFile}\n              onChange={(e) => handleAttachmentFile(e)}\n            />\n          </div>\n          {option.edition && (\n            <>\n              <IconButton\n                color=\"primary\"\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => handleSave(option)}\n              >\n                <SaveIcon />\n              </IconButton>\n              <IconButton\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => handleDeleteOption(index)}\n              >\n                <DeleteOutlineIcon />\n              </IconButton>\n              {!attachment && !option.mediaPath && (\n                <IconButton\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                  className={classes.button}\n                    onClick={() => attachmentFile.current.click()}\n                  >\n                  <AttachFile/>\n                </IconButton>\n              )}\n                             {(option.mediaPath || attachment) && (\n                    <Grid xs={12} item>\n                      <Button startIcon={<AttachFile />}>\n                        {attachment != null\n                          ? attachment.name\n                          : option.mediaName}\n                      </Button>\n                      \n                        <IconButton\n                          color=\"secondary\"\n                        >\n                          <DeleteOutline />\n                        </IconButton>\n                    </Grid>\n                  )}\n              \n              {/* ✅ ICONO DE TRANSFERENCIA DENTRO DEL MODO EDICIÓN */}\n              <IconButton\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => openTransferModal(option)}\n                style={{ \n                  color: option.transferQueueId ? 'green' : 'gray',\n                  marginLeft: '5px'\n                }}\n                title=\"Configurar transferencia de departamento\"\n              >\n                <LinkIcon />\n              </IconButton>\n            </>\n          )}\n        </>\n      );\n    }\n    return (\n      <>\n        <Typography>\n          {option.title !== \"\" ? option.title : i18n.t(\"queueOptions.undefinedTitle\")}\n          <IconButton\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => handleEdition(index)}\n          >\n            <EditIcon />\n          </IconButton>\n        </Typography>\n      </>\n    );\n  };\n\n  const renderMessage = (index) => {\n    const option = options[index];\n    if (option.edition) {\n      return (\n        <>\n          <TextField\n            style={{ width: \"100%\" }}\n            multiline\n            value={option.message}\n            onChange={(event) => handleOptionChangeMessage(event, index)}\n            size=\"small\"\n            className={classes.input}\n            placeholder={i18n.t(\"queueOptions.placeholder.message\")}\n          />\n        </>\n      );\n    }\n    return (\n      <>\n        <Typography onClick={() => handleEdition(index)}>\n          {option.message}\n        </Typography>\n      </>\n    );\n  };\n\n  const handleAddOption = (index) => {\n    const optionNumber = options[index].children.length + 1;\n    options[index].children.push({\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: optionNumber,\n      queueId,\n      parentId: options[index].id,\n      children: [],\n    });\n    updateOptions();\n  };\n\n  const renderStep = (option, index) => {\n    return (\n      <Step key={index}>\n        <StepLabel style={{ cursor: \"pointer\" }} onClick={handleOption(index)}>\n          {renderTitle(index)}\n        </StepLabel>\n        <StepContent>\n          {renderMessage(index)}\n\n          {option.id !== undefined && (\n            <>\n              <Button\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => handleAddOption(index)}\n                startIcon={<AddIcon />}\n                variant=\"outlined\"\n                className={classes.addButton}\n              >\n                {i18n.t(\"queueOptions.add\")}\n              </Button>\n            </>\n          )}\n          <QueueOptionStepper\n            queueId={queueId}\n            options={option.children}\n            updateOptions={updateOptions}\n          />\n        </StepContent>\n      </Step>\n    );\n  };\n\n  const renderStepper = () => {\n    return (\n      <Stepper\n        style={{ marginBottom: 0, paddingBottom: 0 }}\n        nonLinear\n        activeStep={activeOption}\n        orientation=\"vertical\"\n      >\n        {options.map((option, index) => renderStep(option, index))}\n      </Stepper>\n    );\n  };\n\n  return (\n    <>\n      {renderStepper()}\n      \n      {/* ✅ MODAL DE TRANSFERENCIA */}\n      <Dialog open={transferModalOpen} onClose={() => setTransferModalOpen(false)}>\n        <DialogTitle>\n          🔗 Configurar Transferencia - {selectedOptionForTransfer?.title}\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" style={{ marginBottom: '16px' }}>\n            Selecciona el departamento destino para esta opción:\n          </Typography>\n          \n          <FormControl fullWidth>\n            <InputLabel>Departamento Destino</InputLabel>\n            <Select\n              value={selectedOptionForTransfer?.transferQueueId || \"\"}\n              onChange={(e) => {\n                const updatedOption = { ...selectedOptionForTransfer, transferQueueId: e.target.value };\n                setSelectedOptionForTransfer(updatedOption);\n              }}\n            >\n              <MenuItem value=\"\">\n                <em>-- Sin transferencia --</em>\n              </MenuItem>\n              {queues.map((queue) => (\n                <MenuItem key={queue.id} value={queue.id}>\n                  {queue.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setTransferModalOpen(false)} color=\"secondary\">\n            Cancelar\n          </Button>\n          <Button \n            onClick={() => handleSaveTransfer(selectedOptionForTransfer?.transferQueueId)}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Guardar Transferencia\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport function QueueOptions({ queueId }) {\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (queueId) {\n      const fetchOptions = async () => {\n        try {\n          const { data } = await api.request({\n            url: \"/queue-options\",\n            method: \"GET\",\n            params: { queueId, parentId: -1 },\n          });\n          const optionList = data.map((option) => {\n            return {\n              ...option,\n              children: [],\n              edition: false,\n            };\n          });\n          setOptions(optionList);\n        } catch (e) {\n          toastError(e);\n        }\n      };\n      fetchOptions();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderStepper = () => {\n    if (options.length > 0) {\n      return (\n        <QueueOptionStepper\n          queueId={queueId}\n          updateOptions={updateOptions}\n          options={options}\n        />\n      );\n    }\n  };\n\n  const updateOptions = () => {\n    setOptions([...options]);\n  };\n\n  const addOption = () => {\n    const newOption = {\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: options.length + 1,\n      queueId,\n      parentId: null,\n      children: [],\n    };\n    setOptions([...options, newOption]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <br />\n      <Typography>\n        {i18n.t(\"queueOptions.title\")}\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          onClick={addOption}\n          startIcon={<AddIcon />}\n          style={{ marginLeft: 10 }}\n          variant=\"outlined\"\n        >\n          {i18n.t(\"queueOptions.add\")}\n        </Button>\n      </Typography>\n      {renderStepper()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}