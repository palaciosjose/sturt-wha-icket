{"ast":null,"code":"import React,{useContext,useEffect,useReducer,useState}from\"react\";import{Button,IconButton,Paper,Table,TableBody,TableCell,TableHead,TableRow}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import MainContainer from\"../../components/MainContainer\";import MainHeader from\"../../components/MainHeader\";import MainHeaderButtonsWrapper from\"../../components/MainHeaderButtonsWrapper\";import TableRowSkeleton from\"../../components/TableRowSkeleton\";import Title from\"../../components/Title\";import{i18n}from\"../../translate/i18n\";import toastError from\"../../errors/toastError\";import api from\"../../services/api\";import{DeleteOutline,Edit}from\"@material-ui/icons\";import PromptModal from\"../../components/PromptModal\";import{toast}from\"react-toastify\";import ConfirmationModal from\"../../components/ConfirmationModal\";import{AuthContext}from\"../../context/Auth/AuthContext\";import usePlans from\"../../hooks/usePlans\";import{useHistory}from\"react-router-dom/cjs/react-router-dom.min\";import{SocketContext}from\"../../context/Socket/SocketContext\";const useStyles=makeStyles(theme=>({mainPaper:{flex:1,padding:theme.spacing(1),overflowY:\"scroll\",...theme.scrollbarStyles},customTableCell:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},// Adicione um estilo para a box vermelha\nredBox:{backgroundColor:\"#ffcccc\",// Definindo a cor de fundo vermelha\npadding:theme.spacing(2),// Adicionando um espaçamento interno\nmarginBottom:theme.spacing(2)// Adicionando margem inferior para separar do conteúdo abaixo\n}}));const reducer=(state,action)=>{if(action.type===\"LOAD_PROMPTS\"){const prompts=action.payload;const newPrompts=[];prompts.forEach(prompt=>{const promptIndex=state.findIndex(p=>p.id===prompt.id);if(promptIndex!==-1){state[promptIndex]=prompt;}else{newPrompts.push(prompt);}});return[...state,...newPrompts];}if(action.type===\"UPDATE_PROMPTS\"){const prompt=action.payload;const promptIndex=state.findIndex(p=>p.id===prompt.id);if(promptIndex!==-1){state[promptIndex]=prompt;return[...state];}else{return[prompt,...state];}}if(action.type===\"DELETE_PROMPT\"){const promptId=action.payload;const promptIndex=state.findIndex(p=>p.id===promptId);if(promptIndex!==-1){state.splice(promptIndex,1);}return[...state];}if(action.type===\"RESET\"){return[];}};const Prompts=()=>{const classes=useStyles();const[prompts,dispatch]=useReducer(reducer,[]);const[loading,setLoading]=useState(false);const[promptModalOpen,setPromptModalOpen]=useState(false);const[selectedPrompt,setSelectedPrompt]=useState(null);const[confirmModalOpen,setConfirmModalOpen]=useState(false);const{user}=useContext(AuthContext);const{getPlanCompany}=usePlans();const history=useHistory();const companyId=user.companyId;const socketManager=useContext(SocketContext);// ✅ AGREGAR FUNCIÓN PARA REFRESCAR PROMPTS\nconst refreshPrompts=async()=>{setLoading(true);try{const{data}=await api.get(\"/prompt\");dispatch({type:\"LOAD_PROMPTS\",payload:data.prompts});setLoading(false);}catch(err){toastError(err);setLoading(false);}};useEffect(()=>{async function fetchData(){if(companyId){const planConfigs=await getPlanCompany(undefined,companyId);if(!planConfigs.plan.useOpenAi){toast.error(i18n.t(\"prompts.errors.noPermission\"));setTimeout(()=>{history.push(`/`);},1000);}}}fetchData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(()=>{(async()=>{setLoading(true);try{const{data}=await api.get(\"/prompt\");dispatch({type:\"LOAD_PROMPTS\",payload:data.prompts});setLoading(false);}catch(err){toastError(err);setLoading(false);}})();},[]);useEffect(()=>{const socket=socketManager.getSocket(companyId);socket.on(`company-${companyId}-prompt`,data=>{if(data.action===\"update\"||data.action===\"create\"){dispatch({type:\"UPDATE_PROMPTS\",payload:data.prompt});}if(data.action===\"delete\"){dispatch({type:\"DELETE_PROMPT\",payload:data.promptId});}});return()=>{socket.disconnect();};},[companyId,socketManager]);const handleOpenPromptModal=()=>{setPromptModalOpen(true);setSelectedPrompt(null);};const handleClosePromptModal=()=>{setPromptModalOpen(false);setSelectedPrompt(null);};const handleEditPrompt=prompt=>{setSelectedPrompt(prompt);setPromptModalOpen(true);};const handleCloseConfirmationModal=()=>{setConfirmModalOpen(false);setSelectedPrompt(null);};const handleDeletePrompt=async promptId=>{try{const{data}=await api.delete(`/prompt/${promptId}`);toast.info(i18n.t(data.message));// ✅ ACTUALIZAR LA LISTA INMEDIATAMENTE DESPUÉS DE ELIMINAR\ndispatch({type:\"DELETE_PROMPT\",payload:promptId});}catch(err){toastError(err);}setSelectedPrompt(null);setConfirmModalOpen(false);};return/*#__PURE__*/React.createElement(MainContainer,null,/*#__PURE__*/React.createElement(ConfirmationModal,{title:selectedPrompt&&`${i18n.t(\"prompts.confirmationModal.deleteTitle\")} ${selectedPrompt.name}?`,open:confirmModalOpen,onClose:handleCloseConfirmationModal,onConfirm:()=>handleDeletePrompt(selectedPrompt.id)},i18n.t(\"prompts.confirmationModal.deleteMessage\")),/*#__PURE__*/React.createElement(PromptModal,{open:promptModalOpen,onClose:handleClosePromptModal,promptId:selectedPrompt===null||selectedPrompt===void 0?void 0:selectedPrompt.id,onSave:()=>{refreshPrompts();handleClosePromptModal();}}),/*#__PURE__*/React.createElement(MainHeader,null,/*#__PURE__*/React.createElement(Title,null,i18n.t(\"prompts.title\")),/*#__PURE__*/React.createElement(MainHeaderButtonsWrapper,null,/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:handleOpenPromptModal},i18n.t(\"prompts.buttons.add\")))),/*#__PURE__*/React.createElement(Paper,{className:classes.mainPaper,variant:\"outlined\"},/*#__PURE__*/React.createElement(Table,{size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},i18n.t(\"prompts.table.name\")),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},i18n.t(\"prompts.table.queue\")),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},i18n.t(\"prompts.table.max_tokens\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"prompts.table.actions\")))),/*#__PURE__*/React.createElement(TableBody,null,/*#__PURE__*/React.createElement(React.Fragment,null,prompts.map(prompt=>/*#__PURE__*/React.createElement(TableRow,{key:prompt.id},/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},prompt.name),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},prompt.queue.name),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},prompt.maxTokens),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:()=>handleEditPrompt(prompt)},/*#__PURE__*/React.createElement(Edit,null)),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:()=>{setSelectedPrompt(prompt);setConfirmModalOpen(true);}},/*#__PURE__*/React.createElement(DeleteOutline,null))))),loading&&/*#__PURE__*/React.createElement(TableRowSkeleton,{columns:4}))))));};export default Prompts;","map":null,"metadata":{},"sourceType":"module"}