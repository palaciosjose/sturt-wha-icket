{"ast":null,"code":"import React,{useState,useEffect,useReducer,useContext}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import List from\"@material-ui/core/List\";import Paper from\"@material-ui/core/Paper\";import TicketListItem from\"../TicketListItemCustom\";import TicketsListSkeleton from\"../TicketsListSkeleton\";import useTickets from\"../../hooks/useTickets\";import{i18n}from\"../../translate/i18n\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{SocketContext}from\"../../context/Socket/SocketContext\";const useStyles=makeStyles(theme=>({ticketsListWrapper:{position:\"relative\",display:\"flex\",height:\"100%\",flexDirection:\"column\",overflow:\"hidden\",borderTopRightRadius:0,borderBottomRightRadius:0},ticketsList:{flex:1,maxHeight:\"100%\",overflowY:\"scroll\",...theme.scrollbarStyles,borderTop:\"2px solid rgba(0, 0, 0, 0.12)\"},ticketsListHeader:{color:\"rgb(67, 83, 105)\",zIndex:2,backgroundColor:\"white\",borderBottom:\"1px solid rgba(0, 0, 0, 0.12)\",display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\"},ticketsCount:{fontWeight:\"normal\",color:\"rgb(104, 121, 146)\",marginLeft:\"8px\",fontSize:\"14px\"},noTicketsText:{textAlign:\"center\",color:\"rgb(104, 121, 146)\",fontSize:\"14px\",lineHeight:\"1.4\"},noTicketsTitle:{textAlign:\"center\",fontSize:\"16px\",fontWeight:\"600\",margin:\"0px\"},noTicketsDiv:{display:\"flex\",height:\"100px\",margin:40,flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}));const reducer=(state,action)=>{if(action.type===\"LOAD_TICKETS\"){const newTickets=action.payload;newTickets.forEach(ticket=>{const ticketIndex=state.findIndex(t=>t.id===ticket.id);if(ticketIndex!==-1){state[ticketIndex]=ticket;if(ticket.unreadMessages>0){state.unshift(state.splice(ticketIndex,1)[0]);}}else{state.push(ticket);}});return[...state];}if(action.type===\"RESET_UNREAD\"){const ticketId=action.payload;const ticketIndex=state.findIndex(t=>t.id===ticketId);if(ticketIndex!==-1){state[ticketIndex].unreadMessages=0;}return[...state];}if(action.type===\"UPDATE_TICKET\"){const ticket=action.payload;const ticketIndex=state.findIndex(t=>t.id===ticket.id);if(ticketIndex!==-1){state[ticketIndex]=ticket;}else{state.unshift(ticket);}return[...state];}if(action.type===\"UPDATE_TICKET_UNREAD_MESSAGES\"){const ticket=action.payload;const ticketIndex=state.findIndex(t=>t.id===ticket.id);if(ticketIndex!==-1){state[ticketIndex]=ticket;state.unshift(state.splice(ticketIndex,1)[0]);}else{state.unshift(ticket);}return[...state];}if(action.type===\"UPDATE_TICKET_CONTACT\"){const contact=action.payload;const ticketIndex=state.findIndex(t=>t.contactId===contact.id);if(ticketIndex!==-1){state[ticketIndex].contact=contact;}return[...state];}if(action.type===\"UPDATE_TICKET_PRESENCE\"){const data=action.payload;const ticketIndex=state.findIndex(t=>t.id===data.ticketId);if(ticketIndex!==-1){state[ticketIndex].presence=data.presence;}return[...state];}if(action.type===\"DELETE_TICKET\"){const ticketId=action.payload;const ticketIndex=state.findIndex(t=>t.id===ticketId);if(ticketIndex!==-1){state.splice(ticketIndex,1);}return[...state];}if(action.type===\"RESET\"){return[];}};const TicketsListCustom=props=>{const{status,searchParam,tags,users,showAll,selectedQueueIds,updateCount,style}=props;const classes=useStyles();const[pageNumber,setPageNumber]=useState(1);const[ticketsList,dispatch]=useReducer(reducer,[]);const{user}=useContext(AuthContext);const{profile,queues}=user;const socketManager=useContext(SocketContext);useEffect(()=>{dispatch({type:\"RESET\"});setPageNumber(1);},[status,searchParam,dispatch,showAll,tags,users,selectedQueueIds]);const{tickets,hasMore,loading}=useTickets({pageNumber,searchParam,status,showAll,tags:JSON.stringify(tags),users:JSON.stringify(users),queueIds:JSON.stringify(selectedQueueIds)});useEffect(()=>{const queueIds=queues.map(q=>q.id);const filteredTickets=tickets.filter(t=>queueIds.indexOf(t.queueId)>-1);if(profile===\"user\"){dispatch({type:\"LOAD_TICKETS\",payload:filteredTickets});}else{dispatch({type:\"LOAD_TICKETS\",payload:tickets});}},[tickets,status,searchParam,queues,profile]);useEffect(()=>{const companyId=localStorage.getItem(\"companyId\");const socket=socketManager.getSocket(companyId);const shouldUpdateTicket=ticket=>(!ticket.userId||ticket.userId===(user===null||user===void 0?void 0:user.id)||showAll)&&(!ticket.queueId||selectedQueueIds.indexOf(ticket.queueId)>-1);const notBelongsToUserQueues=ticket=>ticket.queueId&&selectedQueueIds.indexOf(ticket.queueId)===-1;socket.on(\"ready\",()=>{if(status){socket.emit(\"joinTickets\",status);}else{socket.emit(\"joinNotification\");}});socket.on(`company-${companyId}-ticket`,data=>{if(data.action===\"updateUnread\"){dispatch({type:\"RESET_UNREAD\",payload:data.ticketId});}if(data.action===\"update\"&&shouldUpdateTicket(data.ticket)&&data.ticket.status===status){dispatch({type:\"UPDATE_TICKET\",payload:data.ticket});}if(data.action===\"update\"&&notBelongsToUserQueues(data.ticket)){dispatch({type:\"DELETE_TICKET\",payload:data.ticket.id});}if(data.action===\"delete\"){dispatch({type:\"DELETE_TICKET\",payload:data.ticketId});}});socket.on(`company-${companyId}-appMessage`,data=>{var _data$ticket,_data$ticket$queue;const queueIds=queues.map(q=>q.id);if(profile===\"user\"&&(queueIds.indexOf((_data$ticket=data.ticket)===null||_data$ticket===void 0?void 0:(_data$ticket$queue=_data$ticket.queue)===null||_data$ticket$queue===void 0?void 0:_data$ticket$queue.id)===-1||data.ticket.queue===null)){return;}if(data.action===\"create\"&&shouldUpdateTicket(data.ticket)&&(status===undefined||data.ticket.status===status)){dispatch({type:\"UPDATE_TICKET_UNREAD_MESSAGES\",payload:data.ticket});}});socket.on(`company-${companyId}-presence`,data=>{dispatch({type:\"UPDATE_TICKET_PRESENCE\",payload:data});});socket.on(`company-${companyId}-contact`,data=>{if(data.action===\"update\"){dispatch({type:\"UPDATE_TICKET_CONTACT\",payload:data.contact});}});return()=>{// Solo desconectar si el socket existe y no es un dummy socket\nif(socket&&typeof socket.disconnect==='function'){socket.disconnect();}};},[status,showAll,user,selectedQueueIds,tags,users,profile,queues,socketManager]);useEffect(()=>{if(typeof updateCount===\"function\"){updateCount(ticketsList.length);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[ticketsList]);const loadMore=()=>{setPageNumber(prevState=>prevState+1);};const handleScroll=e=>{if(!hasMore||loading)return;const{scrollTop,scrollHeight,clientHeight}=e.currentTarget;if(scrollHeight-(scrollTop+100)<clientHeight){loadMore();}};return/*#__PURE__*/React.createElement(Paper,{className:classes.ticketsListWrapper,style:style},/*#__PURE__*/React.createElement(Paper,{square:true,name:\"closed\",elevation:0,className:classes.ticketsList,onScroll:handleScroll},/*#__PURE__*/React.createElement(List,{style:{paddingTop:0}},ticketsList.length===0&&!loading?/*#__PURE__*/React.createElement(\"div\",{className:classes.noTicketsDiv},/*#__PURE__*/React.createElement(\"span\",{className:classes.noTicketsTitle},i18n.t(\"ticketsList.noTicketsTitle\")),/*#__PURE__*/React.createElement(\"p\",{className:classes.noTicketsText},i18n.t(\"ticketsList.noTicketsMessage\"))):/*#__PURE__*/React.createElement(React.Fragment,null,ticketsList.map(ticket=>/*#__PURE__*/React.createElement(TicketListItem,{ticket:ticket,key:ticket.id}))),loading&&/*#__PURE__*/React.createElement(TicketsListSkeleton,null))));};export default TicketsListCustom;","map":null,"metadata":{},"sourceType":"module"}