{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\whaticket03\\\\waticketsaas\\\\frontend\\\\src\\\\components\\\\MessageInputCustom\\\\index.js\";\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport MicRecorder from \"mic-recorder-to-mp3\";\nimport clsx from \"clsx\";\nimport { isNil } from \"lodash\";\nimport { Reply } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green, grey } from \"@material-ui/core/colors\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoodIcon from \"@material-ui/icons/Mood\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { FormControlLabel, Switch, Menu, MenuItem } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { isString, isEmpty, isObject, has } from \"lodash\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport axios from \"axios\";\nimport RecordingTimer from \"./RecordingTimer\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport { ForwardMessageContext } from \"../../context/ForwarMessage/ForwardMessageContext\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport toastError from \"../../errors/toastError\";\nimport Compressor from 'compressorjs';\nimport LinearWithValueLabel from \"./ProgressBarCustom\";\nimport useQuickMessages from \"../../hooks/useQuickMessages\";\nimport useFiles from \"../../hooks/useFiles\";\nimport logger from \"../../utils/logger\";\nconst Mp3Recorder = new MicRecorder({\n  bitRate: 128\n});\nconst useStyles = makeStyles(theme => ({\n  mainWrapper: {\n    backgroundColor: theme.palette.bordabox,\n    //DARK MODE PLW DESIGN//\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    borderTop: \"1px solid rgba(0, 0, 0, 0.12)\"\n  },\n  newMessageBox: {\n    backgroundColor: theme.palette.newmessagebox,\n    //DARK MODE PLW DESIGN//\n    width: \"100%\",\n    display: \"flex\",\n    padding: \"7px\",\n    alignItems: \"center\"\n  },\n  messageInputWrapper: {\n    padding: 6,\n    marginRight: 7,\n    backgroundColor: theme.palette.inputdigita,\n    //DARK MODE PLW DESIGN//\n    display: \"flex\",\n    borderRadius: 20,\n    flex: 1\n  },\n  messageInput: {\n    paddingLeft: 10,\n    flex: 1,\n    border: \"none\"\n  },\n  sendMessageIcons: {\n    color: \"grey\"\n  },\n  ForwardMessageIcons: {\n    color: grey[700],\n    transform: 'scaleX(-1)'\n  },\n  uploadInput: {\n    display: \"none\"\n  },\n  viewMediaInputWrapper: {\n    display: \"flex\",\n    padding: \"10px 13px\",\n    position: \"relative\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#eee\",\n    borderTop: \"1px solid rgba(0, 0, 0, 0.12)\"\n  },\n  emojiBox: {\n    position: \"absolute\",\n    bottom: 63,\n    width: 40,\n    borderTop: \"1px solid #e8e8e8\"\n  },\n  circleLoading: {\n    color: green[500],\n    opacity: \"70%\",\n    position: \"absolute\",\n    top: \"20%\",\n    left: \"50%\",\n    marginLeft: -12\n  },\n  audioLoading: {\n    color: green[500],\n    opacity: \"70%\"\n  },\n  recorderWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"middle\"\n  },\n  cancelAudioIcon: {\n    color: \"red\"\n  },\n  sendAudioIcon: {\n    color: \"green\"\n  },\n  replyginMsgWrapper: {\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 8,\n    paddingLeft: 73,\n    paddingRight: 7\n  },\n  replyginMsgContainer: {\n    flex: 1,\n    marginRight: 5,\n    overflowY: \"hidden\",\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\"\n  },\n  replyginMsgBody: {\n    padding: 10,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\"\n  },\n  replyginContactMsgSideColor: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\"\n  },\n  replyginSelfMsgSideColor: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#6bcbef\"\n  },\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500\n  }\n}));\nconst EmojiOptions = props => {\n  const {\n    disabled,\n    showEmoji,\n    setShowEmoji,\n    handleAddEmoji\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"emojiPicker\",\n    component: \"span\",\n    disabled: disabled,\n    onClick: e => setShowEmoji(prevState => !prevState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoodIcon, {\n    className: classes.sendMessageIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  })), showEmoji ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.emojiBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    perLine: 16,\n    showPreview: false,\n    showSkinTones: false,\n    onSelect: handleAddEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  })) : null);\n};\nconst SignSwitch = props => {\n  const {\n    width,\n    setSignMessage,\n    signMessage\n  } = props;\n  if (isWidthUp(\"md\", width)) {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      style: {\n        marginRight: 7,\n        color: \"gray\"\n      },\n      label: i18n.t(\"messagesInput.signMessage\"),\n      labelPlacement: \"start\",\n      control: /*#__PURE__*/React.createElement(Switch, {\n        size: \"small\",\n        checked: signMessage,\n        onChange: e => {\n          setSignMessage(e.target.checked);\n        },\n        name: \"showAllTickets\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    });\n  }\n  return null;\n};\nconst FileInput = props => {\n  const {\n    handleChangeMedias,\n    disableOption\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    multiple: true,\n    type: \"file\",\n    id: \"upload-button\",\n    disabled: disableOption(),\n    className: classes.uploadInput,\n    onChange: handleChangeMedias,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"upload\",\n    component: \"span\",\n    disabled: disableOption(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AttachFileIcon, {\n    className: classes.sendMessageIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }))));\n};\nconst ActionButtons = props => {\n  const {\n    inputMessage,\n    loading,\n    recording,\n    ticketStatus,\n    handleSendMessage,\n    handleCancelAudio,\n    handleUploadAudio,\n    handleStartRecording,\n    handleOpenModalForward,\n    showSelectMessageCheckbox\n  } = props;\n  const classes = useStyles();\n\n  // ✅ FUNCIÓN PARA CANCELAR SELECCIÓN DE MENSAJES\n  const handleCancelSelection = () => {\n    const {\n      setShowSelectMessageCheckbox,\n      setSelectedMessages\n    } = props;\n    setShowSelectMessageCheckbox(false);\n    setSelectedMessages([]);\n  };\n  if (showSelectMessageCheckbox) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"cancelSelection\",\n      component: \"span\",\n      onClick: handleCancelSelection,\n      disabled: loading,\n      style: {\n        color: '#f44336'\n      },\n      title: \"Cancelar selecci\\xF3n\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(HighlightOffIcon, {\n      className: classes.sendMessageIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"forwardMessage\",\n      component: \"span\",\n      onClick: handleOpenModalForward,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Reply, {\n      className: classes.ForwardMessageIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    })));\n  } else if (inputMessage) {\n    return /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"sendMessage\",\n      component: \"span\",\n      onClick: handleSendMessage,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SendIcon, {\n      className: classes.sendMessageIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }));\n  } else if (recording) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.recorderWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"cancelRecording\",\n      component: \"span\",\n      fontSize: \"large\",\n      disabled: loading,\n      onClick: handleCancelAudio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(HighlightOffIcon, {\n      className: classes.cancelAudioIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }\n    })), loading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      className: classes.audioLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(RecordingTimer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"sendRecordedAudio\",\n      component: \"span\",\n      onClick: handleUploadAudio,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircleOutlineIcon, {\n      className: classes.sendAudioIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"showRecorder\",\n      component: \"span\",\n      disabled: loading || ticketStatus !== \"open\",\n      onClick: handleStartRecording,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MicIcon, {\n      className: classes.sendMessageIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }\n    }));\n  }\n};\nconst CustomInput = props => {\n  const {\n    loading,\n    inputRef,\n    ticketStatus,\n    inputMessage,\n    setInputMessage,\n    handleSendMessage,\n    handleInputPaste,\n    disableOption,\n    handleQuickAnswersClick,\n    options,\n    popupOpen\n  } = props;\n  const classes = useStyles();\n  const onKeyPress = e => {\n    if (loading || e.shiftKey) return;else if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n  const onPaste = e => {\n    if (ticketStatus === \"open\") {\n      handleInputPaste(e);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (ticketStatus === \"open\") {\n      return i18n.t(\"messagesInput.placeholderOpen\") + \" (usa / para respuestas rápidas)\";\n    }\n    return i18n.t(\"messagesInput.placeholderClosed\");\n  };\n  const setInputRef = input => {\n    if (input) {\n      input.focus();\n      inputRef.current = input;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.messageInputWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    freeSolo: true,\n    open: popupOpen,\n    id: \"quick-messages-autocomplete\",\n    value: inputMessage,\n    options: options,\n    closeIcon: null,\n    getOptionLabel: option => {\n      if (isObject(option)) {\n        return option.label;\n      } else {\n        return option;\n      }\n    },\n    onChange: (event, opt) => {\n      if (isObject(opt) && has(opt, \"value\") && isNil(opt.mediaPath)) {\n        setInputMessage(opt.value);\n        setTimeout(() => {\n          inputRef.current.scrollTop = inputRef.current.scrollHeight;\n        }, 200);\n      } else if (isObject(opt) && has(opt, \"value\") && !isNil(opt.mediaPath)) {\n        handleQuickAnswersClick(opt);\n        setTimeout(() => {\n          inputRef.current.scrollTop = inputRef.current.scrollHeight;\n        }, 200);\n      }\n    },\n    onInputChange: (event, opt, reason) => {\n      if (reason === \"input\") {\n        setInputMessage(event.target.value);\n      }\n    },\n    onPaste: onPaste,\n    onKeyPress: onKeyPress,\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => {\n      const {\n        InputLabelProps,\n        InputProps,\n        ...rest\n      } = params;\n      return /*#__PURE__*/React.createElement(InputBase, Object.assign({}, params.InputProps, rest, {\n        disabled: disableOption(),\n        inputRef: setInputRef,\n        placeholder: renderPlaceholder(),\n        multiline: true,\n        className: classes.messageInput,\n        maxRows: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }\n  }));\n};\nconst MessageInputCustom = props => {\n  var _medias$;\n  const {\n    ticketStatus,\n    ticketId\n  } = props;\n  const classes = useStyles();\n  const [percentLoading, setPercentLoading] = useState(0);\n  const [medias, setMedias] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [showEmoji, setShowEmoji] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const [quickMessages, setQuickMessages] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [popupOpen, setPopupOpen] = useState(false);\n  const [fileLists, setFileLists] = useState([]);\n  const [fileListOptions, setFileListOptions] = useState([]);\n  const [fileListAnchorEl, setFileListAnchorEl] = useState(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const inputRef = useRef();\n  const {\n    setReplyingMessage,\n    replyingMessage\n  } = useContext(ReplyMessageContext);\n  const {\n    user\n  } = useContext(AuthContext);\n  const [signMessage, setSignMessage] = useLocalStorage(\"signOption\", true);\n  const {\n    selectedMessages,\n    setForwardMessageModalOpen,\n    showSelectMessageCheckbox,\n    setShowSelectMessageCheckbox,\n    setSelectedMessages\n  } = useContext(ForwardMessageContext);\n  const {\n    list: listQuickMessages\n  } = useQuickMessages();\n  const {\n    list: listFiles\n  } = useFiles();\n\n  // Cargar respuestas rápidas\n  useEffect(() => {\n    async function fetchData() {\n      const companyId = localStorage.getItem(\"companyId\");\n      const messages = await listQuickMessages({\n        companyId,\n        userId: user.id\n      });\n      const options = messages.map(m => {\n        let truncatedMessage = m.message;\n        if (isString(truncatedMessage) && truncatedMessage.length > 35) {\n          truncatedMessage = m.message.substring(0, 35) + \"...\";\n        }\n        return {\n          value: m.message,\n          label: `/${m.shortcode} - ${truncatedMessage}`,\n          shortcode: m.shortcode,\n          message: m.message,\n          mediaPath: m.mediaPath\n        };\n      });\n      setQuickMessages(options);\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Cargar listas de archivos\n  useEffect(() => {\n    async function fetchFileLists() {\n      const companyId = localStorage.getItem(\"companyId\");\n      const files = await listFiles({\n        companyId,\n        userId: user.id\n      });\n      const options = files.map(fileList => {\n        let truncatedName = fileList.name;\n        if (isString(truncatedName) && truncatedName.length > 35) {\n          truncatedName = fileList.name.substring(0, 35) + \"...\";\n        }\n        return {\n          value: fileList,\n          label: `📁 ${truncatedName}`,\n          name: fileList.name,\n          message: fileList.message,\n          options: fileList.options\n        };\n      });\n      setFileLists(options);\n    }\n    fetchFileLists();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Manejar autocompletado de respuestas rápidas\n  useEffect(() => {\n    if (isString(inputMessage) && !isEmpty(inputMessage) && inputMessage.startsWith(\"/\")) {\n      setPopupOpen(true);\n\n      // Si solo hay \"/\", mostrar todas las opciones\n      if (inputMessage === \"/\") {\n        setOptions(quickMessages);\n      } else {\n        // Filtrar por lo que se escriba después de \"/\"\n        const searchTerm = inputMessage.substring(1).toLowerCase();\n        const filteredOptions = quickMessages.filter(m => m.shortcode.toLowerCase().includes(searchTerm) || m.message.toLowerCase().includes(searchTerm));\n        setOptions(filteredOptions);\n      }\n    } else {\n      setPopupOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputMessage]);\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [replyingMessage]);\n  useEffect(() => {\n    inputRef.current.focus();\n    return () => {\n      setInputMessage(\"\");\n      setShowEmoji(false);\n      setMedias([]);\n      setReplyingMessage(null);\n    };\n  }, [ticketId, setReplyingMessage]);\n\n  // const handleChangeInput = e => {\n  // \tif (isObject(e) && has(e, 'value')) {\n  // \t\tsetInputMessage(e.value);\n  // \t} else {\n  // \t\tsetInputMessage(e.target.value)\n  // \t}\n  // };\n\n  const handleOpenModalForward = () => {\n    if (selectedMessages.length === 0) {\n      setForwardMessageModalOpen(false);\n      toastError(i18n.t(\"messagesList.header.notMessage\"));\n      return;\n    }\n    setForwardMessageModalOpen(true);\n  };\n  const handleAddEmoji = e => {\n    let emoji = e.native;\n    setInputMessage(prevState => prevState + emoji);\n  };\n  const handleChangeMedias = e => {\n    if (!e.target.files) {\n      return;\n    }\n    const selectedMedias = Array.from(e.target.files);\n    setMedias(selectedMedias);\n  };\n  const handleInputPaste = e => {\n    if (e.clipboardData.files[0]) {\n      setMedias([e.clipboardData.files[0]]);\n    }\n  };\n  const handleUploadQuickMessageMedia = async (blob, originalFileName) => {\n    try {\n      if (logger && logger.media) {\n        logger.media.debug(\"Procesando multimedia para envío, tipo:\", blob.type);\n        logger.media.debug(\"Nombre original del archivo:\", originalFileName);\n      }\n\n      // Mantener el nombre original del archivo\n      let filename = originalFileName;\n\n      // Si el nombre es muy extenso (más de 50 caracteres), truncarlo\n      if (filename && filename.length > 50) {\n        const extension = filename.split('.').pop();\n        const nameWithoutExt = filename.substring(0, filename.lastIndexOf('.'));\n        const truncatedName = nameWithoutExt.substring(0, 47) + '...';\n        filename = `${truncatedName}.${extension}`;\n        if (logger && logger.media) {\n          logger.media.debug(\"Nombre truncado:\", filename);\n        }\n      }\n\n      // Si no hay nombre original, generar uno con timestamp\n      if (!filename) {\n        const extension = blob.type.split(\"/\")[1] || 'bin';\n        filename = `${new Date().getTime()}.${extension}`;\n        if (logger && logger.media) {\n          logger.media.debug(\"Nombre generado:\", filename);\n        }\n      }\n      if (logger && logger.media) {\n        logger.media.debug(\"Nombre final del archivo:\", filename);\n      }\n      const formData = new FormData();\n      formData.append(\"medias\", blob, filename);\n      formData.append(\"body\", filename); // Usar el nombre del archivo como body\n      formData.append(\"fromMe\", true);\n      if (logger && logger.media) {\n        logger.media.debug(\"Enviando multimedia al servidor...\");\n      }\n      await api.post(`/messages/${ticketId}`, formData);\n      if (logger && logger.media) {\n        logger.media.info(\"Multimedia enviada exitosamente\");\n      }\n    } catch (err) {\n      if (logger && logger.media) {\n        logger.media.error(\"Error al enviar multimedia:\", err);\n      }\n      toastError(err);\n      throw err; // Re-lanzar el error para que lo maneje la función padre\n    }\n  };\n  const handleQuickAnswersClick = async value => {\n    if (value.mediaPath) {\n      setLoading(true);\n      try {\n        if (logger && logger.media) {\n          logger.media.debug(\"Descargando multimedia desde:\", value.mediaPath);\n          logger.media.debug(\"URL completa:\", value.mediaPath);\n        }\n\n        // ✅ Validar que la URL sea válida\n        if (!value.mediaPath || value.mediaPath === 'null' || value.mediaPath === 'undefined' || value.mediaPath.includes('undefined')) {\n          if (logger && logger.media) {\n            logger.media.warn(\"URL de multimedia inválida:\", value.mediaPath);\n          }\n          toastError(new Error(\"URL de multimedia inválida - Contacte al administrador\"));\n          setLoading(false);\n          setInputMessage(value.value);\n          return;\n        }\n        const {\n          data\n        } = await axios.get(value.mediaPath, {\n          responseType: \"blob\",\n          timeout: 10000 // 10 segundos de timeout\n        });\n        if (logger && logger.media) {\n          logger.media.debug(\"Multimedia descargada exitosamente, tamaño:\", data.size);\n        }\n\n        // ✅ EXTRAER NOMBRE REAL DEL ARCHIVO DESDE LA URL\n        let fileName = value.value; // Fallback al texto de respuesta rápida\n\n        if (value.mediaPath) {\n          // Extraer nombre desde la URL del archivo\n          const urlParts = value.mediaPath.split('/');\n          const lastPart = urlParts[urlParts.length - 1];\n          if (lastPart && lastPart.includes('.')) {\n            fileName = lastPart;\n            if (logger && logger.media) {\n              logger.media.debug(\"Nombre extraído desde URL:\", fileName);\n            }\n          }\n        }\n        await handleUploadQuickMessageMedia(data, fileName);\n        setInputMessage(\"\");\n        setLoading(false);\n        return;\n      } catch (err) {\n        console.error(\"Error al procesar multimedia de respuesta rápida:\", err);\n        console.error(\"URL que falló:\", value.mediaPath);\n\n        // Mostrar error más específico\n        let errorMessage = \"Error al procesar multimedia\";\n        if (err.response) {\n          if (err.response.status === 404) {\n            errorMessage = \"Archivo multimedia no encontrado\";\n          } else if (err.response.status === 403) {\n            errorMessage = \"Sin permisos para acceder al archivo\";\n          } else {\n            errorMessage = `Error del servidor: ${err.response.status}`;\n          }\n        } else if (err.code === 'ECONNABORTED') {\n          errorMessage = \"Tiempo de espera agotado\";\n        }\n        toastError(new Error(errorMessage));\n        setLoading(false);\n\n        // Si falla la multimedia, al menos enviar el texto\n        setInputMessage(value.value);\n        return;\n      }\n    }\n    setInputMessage(\"\");\n    setInputMessage(value.value);\n  };\n  const handleFileListClick = async value => {\n    if (logger && logger.media) {\n      logger.media.debug(\"Valor recibido en handleFileListClick:\", value);\n    }\n\n    // Verificar si value.value.options existe (estructura correcta)\n    if (!value.value || !value.value.options || value.value.options.length === 0) {\n      if (logger && logger.media) {\n        logger.media.warn(\"No hay archivos en la lista. value.value:\", value.value);\n      }\n      toastError(\"Esta lista de archivos no contiene archivos\");\n      return;\n    }\n    setLoading(true);\n    try {\n      if (logger && logger.media) {\n        logger.media.debug(\"Enviando lista de archivos:\", value.name);\n        logger.media.debug(\"Archivos en la lista:\", value.value.options.length);\n      }\n\n      // Enviar cada archivo de la lista\n      for (const fileOption of value.value.options) {\n        try {\n          if (logger && logger.media) {\n            logger.media.debug(\"Procesando archivo:\", fileOption.name);\n          }\n\n          // Construir URL del archivo\n          const publicFolder = \"public/fileList\";\n          const fileUrl = `${process.env.REACT_APP_BACKEND_URL || 'http://localhost:8080'}/${publicFolder}/${value.value.id}/${fileOption.path}`;\n          if (logger && logger.media) {\n            logger.media.debug(\"URL del archivo:\", fileUrl);\n          }\n\n          // Extraer nombre del archivo desde la ruta\n          const fileName = fileOption.path || fileOption.name || 'documento';\n          if (logger && logger.media) {\n            logger.media.debug(\"Nombre del archivo extraído:\", fileName);\n          }\n\n          // Descargar archivo\n          const {\n            data\n          } = await axios.get(fileUrl, {\n            responseType: \"blob\",\n            timeout: 10000\n          });\n          if (logger && logger.media) {\n            logger.media.debug(\"Archivo descargado:\", fileName, \"tamaño:\", data.size);\n          }\n\n          // Enviar archivo\n          await handleUploadQuickMessageMedia(data, fileName);\n\n          // Pequeña pausa entre archivos para no sobrecargar\n          await new Promise(resolve => setTimeout(resolve, 500));\n        } catch (err) {\n          if (logger && logger.media) {\n            logger.media.error(\"Error procesando archivo:\", fileOption.name, err);\n          }\n          toastError(`Error al procesar archivo: ${fileOption.name}`);\n        }\n      }\n      if (logger && logger.media) {\n        logger.media.info(\"Lista de archivos enviada exitosamente\");\n      }\n      setLoading(false);\n    } catch (err) {\n      if (logger && logger.media) {\n        logger.media.error(\"Error al enviar lista de archivos:\", err);\n      }\n      toastError(\"Error al enviar lista de archivos\");\n      setLoading(false);\n    }\n  };\n  const handleUploadMedia = async e => {\n    setLoading(true);\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"fromMe\", true);\n    medias.forEach(async (media, idx) => {\n      const file = media;\n      if (!file) {\n        return;\n      }\n      if ((media === null || media === void 0 ? void 0 : media.type.split('/')[0]) === 'image') {\n        new Compressor(file, {\n          quality: 0.7,\n          async success(media) {\n            //const formData = new FormData();\n            // The third parameter is required for server\n            //formData.append('file', result, result.name);\n\n            formData.append(\"medias\", media);\n            formData.append(\"body\", media.name);\n          },\n          error(err) {\n            alert('erro');\n            if (logger && logger.media) {\n              logger.media.error(\"Error en compresión:\", err.message);\n            }\n          }\n        });\n      } else {\n        formData.append(\"medias\", media);\n        formData.append(\"body\", media.name);\n      }\n    });\n    setTimeout(async () => {\n      try {\n        await api.post(`/messages/${ticketId}`, formData, {\n          onUploadProgress: event => {\n            let progress = Math.round(event.loaded * 100 / event.total);\n            setPercentLoading(progress);\n            if (logger && logger.media) {\n              logger.media.debug(`🖼️ Imagen ${progress}% cargada`);\n            }\n          }\n        }).then(response => {\n          setLoading(false);\n          setMedias([]);\n          setPercentLoading(0);\n          if (logger && logger.media) {\n            logger.media.info(`✅ Imagen enviada al servidor`);\n          }\n        }).catch(err => {\n          if (logger && logger.media) {\n            logger.media.error(`❌ Error al subir imagen: ${err.message}`);\n          }\n        });\n      } catch (err) {\n        toastError(err);\n      }\n    }, 2000);\n  };\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() === \"\") return;\n    setLoading(true);\n    const message = {\n      read: 1,\n      fromMe: true,\n      mediaUrl: \"\",\n      body: signMessage ? `*${user === null || user === void 0 ? void 0 : user.name}:*\\n${inputMessage.trim()}` : inputMessage.trim(),\n      quotedMsg: replyingMessage\n    };\n    try {\n      await api.post(`/messages/${ticketId}`, message);\n    } catch (err) {\n      toastError(err);\n    }\n    setInputMessage(\"\");\n    setShowEmoji(false);\n    setLoading(false);\n    setReplyingMessage(null);\n  };\n  const handleStartRecording = async () => {\n    setLoading(true);\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      await Mp3Recorder.start();\n      setRecording(true);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n  const handleUploadAudio = async () => {\n    setLoading(true);\n    try {\n      const [, blob] = await Mp3Recorder.stop().getMp3();\n      if (blob.size < 10000) {\n        setLoading(false);\n        setRecording(false);\n        return;\n      }\n      const formData = new FormData();\n      const filename = `audio-record-site-${new Date().getTime()}.mp3`;\n      formData.append(\"medias\", blob, filename);\n      formData.append(\"body\", filename);\n      formData.append(\"fromMe\", true);\n      await api.post(`/messages/${ticketId}`, formData);\n    } catch (err) {\n      toastError(err);\n    }\n    setRecording(false);\n    setLoading(false);\n  };\n  const handleCancelAudio = async () => {\n    try {\n      await Mp3Recorder.stop().getMp3();\n      setRecording(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const handleQuickReplyButtonClick = () => {\n    setInputMessage(\"/\");\n    // Forzar que se muestren las opciones inmediatamente\n    setTimeout(() => {\n      setPopupOpen(true);\n      setOptions(quickMessages);\n    }, 100);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const handleFileListButtonClick = event => {\n    setFileListAnchorEl(event.currentTarget);\n    setFileListOptions(fileLists);\n  };\n  const handleFileListMenuClose = () => {\n    setFileListAnchorEl(null);\n  };\n  const handleFileListSelect = fileList => {\n    handleFileListClick(fileList);\n    handleFileListMenuClose();\n  };\n  const disableOption = () => {\n    return loading || recording || ticketStatus !== \"open\";\n  };\n  const renderReplyingMessage = message => {\n    var _message$contact;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.replyginMsgWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.replyginMsgContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: clsx(classes.replyginContactMsgSideColor, {\n        [classes.replyginSelfMsgSideColor]: !message.fromMe\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.replyginMsgBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 11\n      }\n    }, !message.fromMe && /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.messageContactName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 15\n      }\n    }, (_message$contact = message.contact) === null || _message$contact === void 0 ? void 0 : _message$contact.name), message.body)), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"showRecorder\",\n      component: \"span\",\n      disabled: loading || ticketStatus !== \"open\",\n      onClick: () => setReplyingMessage(null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ClearIcon, {\n      className: classes.sendMessageIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 11\n      }\n    })));\n  };\n  if (medias.length > 0) return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    square: true,\n    className: classes.viewMediaInputWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"cancel-upload\",\n    component: \"span\",\n    onClick: e => setMedias([]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CancelIcon, {\n    className: classes.sendMessageIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 11\n    }\n  })), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LinearWithValueLabel, {\n    progress: percentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 11\n    }\n  }, (_medias$ = medias[0]) === null || _medias$ === void 0 ? void 0 : _medias$.name), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"send-upload\",\n    component: \"span\",\n    onClick: handleUploadMedia,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    className: classes.sendMessageIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1091,\n      columnNumber: 11\n    }\n  })));else {\n    return /*#__PURE__*/React.createElement(Paper, {\n      square: true,\n      elevation: 0,\n      className: classes.mainWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 7\n      }\n    }, replyingMessage && renderReplyingMessage(replyingMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.newMessageBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EmojiOptions, {\n      disabled: disableOption(),\n      handleAddEmoji: handleAddEmoji,\n      showEmoji: showEmoji,\n      setShowEmoji: setShowEmoji,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FileInput, {\n      disableOption: disableOption,\n      handleChangeMedias: handleChangeMedias,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"quickReplies\",\n      component: \"span\",\n      disabled: disableOption(),\n      onClick: handleQuickReplyButtonClick,\n      title: \"Respuestas R\\xE1pidas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FlashOnIcon, {\n      className: classes.sendMessageIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"fileLists\",\n      component: \"span\",\n      disabled: disableOption(),\n      onClick: handleFileListButtonClick,\n      title: \"Listas de Archivos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FolderIcon, {\n      className: classes.sendMessageIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: fileListAnchorEl,\n      open: Boolean(fileListAnchorEl),\n      onClose: handleFileListMenuClose,\n      PaperProps: {\n        style: {\n          maxHeight: 300,\n          width: 300\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 11\n      }\n    }, fileListOptions.map(fileList => /*#__PURE__*/React.createElement(MenuItem, {\n      key: fileList.value.id,\n      onClick: () => handleFileListSelect(fileList),\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '14px',\n        padding: '8px 16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 15\n      }\n    }, fileList.label)), fileListOptions.length === 0 && /*#__PURE__*/React.createElement(MenuItem, {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 15\n      }\n    }, \"No hay listas de archivos disponibles\")), /*#__PURE__*/React.createElement(SignSwitch, {\n      width: props.width,\n      setSignMessage: setSignMessage,\n      signMessage: signMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      loading: loading,\n      inputRef: inputRef,\n      ticketStatus: ticketStatus,\n      inputMessage: inputMessage,\n      setInputMessage: setInputMessage\n      // handleChangeInput={handleChangeInput}\n      ,\n      handleSendMessage: handleSendMessage,\n      handleInputPaste: handleInputPaste,\n      disableOption: disableOption,\n      replyingMessage: replyingMessage,\n      handleQuickAnswersClick: handleQuickAnswersClick,\n      options: options,\n      popupOpen: popupOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ActionButtons, {\n      inputMessage: inputMessage,\n      loading: loading,\n      recording: recording,\n      ticketStatus: ticketStatus,\n      handleSendMessage: handleSendMessage,\n      handleCancelAudio: handleCancelAudio,\n      handleUploadAudio: handleUploadAudio,\n      handleStartRecording: handleStartRecording,\n      handleOpenModalForward: handleOpenModalForward,\n      showSelectMessageCheckbox: showSelectMessageCheckbox,\n      setShowSelectMessageCheckbox: setShowSelectMessageCheckbox,\n      setSelectedMessages: setSelectedMessages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1186,\n        columnNumber: 11\n      }\n    })));\n  }\n};\nexport default withWidth()(MessageInputCustom);","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","withWidth","isWidthUp","Picker","MicRecorder","clsx","isNil","Reply","makeStyles","Paper","InputBase","CircularProgress","green","grey","AttachFileIcon","IconButton","MoodIcon","SendIcon","CancelIcon","ClearIcon","MicIcon","CheckCircleOutlineIcon","HighlightOffIcon","FlashOnIcon","FolderIcon","FormControlLabel","Switch","Menu","MenuItem","Autocomplete","isString","isEmpty","isObject","has","i18n","api","axios","RecordingTimer","ReplyMessageContext","ForwardMessageContext","AuthContext","useLocalStorage","toastError","Compressor","LinearWithValueLabel","useQuickMessages","useFiles","logger","Mp3Recorder","bitRate","useStyles","theme","mainWrapper","backgroundColor","palette","bordabox","display","flexDirection","alignItems","borderTop","newMessageBox","newmessagebox","width","padding","messageInputWrapper","marginRight","inputdigita","borderRadius","flex","messageInput","paddingLeft","border","sendMessageIcons","color","ForwardMessageIcons","transform","uploadInput","viewMediaInputWrapper","position","justifyContent","emojiBox","bottom","circleLoading","opacity","top","left","marginLeft","audioLoading","recorderWrapper","alignContent","cancelAudioIcon","sendAudioIcon","replyginMsgWrapper","paddingTop","paddingRight","replyginMsgContainer","overflowY","replyginMsgBody","height","whiteSpace","overflow","replyginContactMsgSideColor","replyginSelfMsgSideColor","messageContactName","fontWeight","EmojiOptions","props","disabled","showEmoji","setShowEmoji","handleAddEmoji","classes","createElement","Fragment","component","onClick","e","prevState","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","perLine","showPreview","showSkinTones","onSelect","SignSwitch","setSignMessage","signMessage","style","label","t","labelPlacement","control","size","checked","onChange","target","name","FileInput","handleChangeMedias","disableOption","multiple","type","id","htmlFor","ActionButtons","inputMessage","loading","recording","ticketStatus","handleSendMessage","handleCancelAudio","handleUploadAudio","handleStartRecording","handleOpenModalForward","showSelectMessageCheckbox","handleCancelSelection","setShowSelectMessageCheckbox","setSelectedMessages","gap","title","fontSize","CustomInput","inputRef","setInputMessage","handleInputPaste","handleQuickAnswersClick","options","popupOpen","onKeyPress","shiftKey","key","onPaste","renderPlaceholder","setInputRef","input","focus","current","freeSolo","open","value","closeIcon","getOptionLabel","option","event","opt","mediaPath","setTimeout","scrollTop","scrollHeight","onInputChange","reason","renderInput","params","InputLabelProps","InputProps","rest","Object","assign","placeholder","multiline","maxRows","MessageInputCustom","_medias$","ticketId","percentLoading","setPercentLoading","medias","setMedias","setLoading","setRecording","quickMessages","setQuickMessages","setOptions","setPopupOpen","fileLists","setFileLists","fileListOptions","setFileListOptions","fileListAnchorEl","setFileListAnchorEl","isDragOver","setIsDragOver","uploadProgress","setUploadProgress","setReplyingMessage","replyingMessage","user","selectedMessages","setForwardMessageModalOpen","list","listQuickMessages","listFiles","fetchData","companyId","localStorage","getItem","messages","userId","map","m","truncatedMessage","message","length","substring","shortcode","fetchFileLists","files","fileList","truncatedName","startsWith","searchTerm","toLowerCase","filteredOptions","filter","includes","emoji","native","selectedMedias","Array","from","clipboardData","handleUploadQuickMessageMedia","blob","originalFileName","media","debug","filename","extension","split","pop","nameWithoutExt","lastIndexOf","Date","getTime","formData","FormData","append","post","info","err","error","warn","Error","data","get","responseType","timeout","urlParts","lastPart","console","errorMessage","response","status","code","handleFileListClick","fileOption","publicFolder","fileUrl","process","env","REACT_APP_BACKEND_URL","path","Promise","resolve","handleUploadMedia","preventDefault","forEach","idx","file","quality","success","alert","onUploadProgress","progress","Math","round","loaded","total","then","catch","trim","read","fromMe","mediaUrl","body","quotedMsg","navigator","mediaDevices","getUserMedia","audio","start","stop","getMp3","handleQuickReplyButtonClick","handleFileListButtonClick","currentTarget","handleFileListMenuClose","handleFileListSelect","renderReplyingMessage","_message$contact","contact","elevation","square","anchorEl","Boolean","onClose","PaperProps","maxHeight"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/components/MessageInputCustom/index.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport MicRecorder from \"mic-recorder-to-mp3\";\nimport clsx from \"clsx\";\nimport { isNil } from \"lodash\";\nimport { Reply } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green, grey } from \"@material-ui/core/colors\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoodIcon from \"@material-ui/icons/Mood\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { FormControlLabel, Switch, Menu, MenuItem } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { isString, isEmpty, isObject, has } from \"lodash\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport axios from \"axios\";\n\nimport RecordingTimer from \"./RecordingTimer\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport { ForwardMessageContext } from \"../../context/ForwarMessage/ForwardMessageContext\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport toastError from \"../../errors/toastError\";\n\nimport Compressor from 'compressorjs';\nimport LinearWithValueLabel from \"./ProgressBarCustom\";\n\nimport useQuickMessages from \"../../hooks/useQuickMessages\";\nimport useFiles from \"../../hooks/useFiles\";\nimport logger from \"../../utils/logger\";\n\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\n\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    backgroundColor: theme.palette.bordabox, //DARK MODE PLW DESIGN//\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    borderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  newMessageBox: {\n    backgroundColor: theme.palette.newmessagebox, //DARK MODE PLW DESIGN//\n    width: \"100%\",\n    display: \"flex\",\n    padding: \"7px\",\n    alignItems: \"center\",\n  },\n\n  messageInputWrapper: {\n    padding: 6,\n    marginRight: 7,\n    backgroundColor: theme.palette.inputdigita, //DARK MODE PLW DESIGN//\n    display: \"flex\",\n    borderRadius: 20,\n    flex: 1,\n  },\n\n  messageInput: {\n    paddingLeft: 10,\n    flex: 1,\n    border: \"none\",\n  },\n\n  sendMessageIcons: {\n    color: \"grey\",\n  },\n\n  ForwardMessageIcons: {\n    color: grey[700],\n    transform: 'scaleX(-1)'\n  },\n\n  uploadInput: {\n    display: \"none\",\n  },\n\n  viewMediaInputWrapper: {\n    display: \"flex\",\n    padding: \"10px 13px\",\n    position: \"relative\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#eee\",\n    borderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  emojiBox: {\n    position: \"absolute\",\n    bottom: 63,\n    width: 40,\n    borderTop: \"1px solid #e8e8e8\",\n  },\n\n  circleLoading: {\n    color: green[500],\n    opacity: \"70%\",\n    position: \"absolute\",\n    top: \"20%\",\n    left: \"50%\",\n    marginLeft: -12,\n  },\n\n  audioLoading: {\n    color: green[500],\n    opacity: \"70%\",\n  },\n\n  recorderWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"middle\",\n  },\n\n  cancelAudioIcon: {\n    color: \"red\",\n  },\n\n  sendAudioIcon: {\n    color: \"green\",\n  },\n\n  replyginMsgWrapper: {\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 8,\n    paddingLeft: 73,\n    paddingRight: 7,\n  },\n\n  replyginMsgContainer: {\n    flex: 1,\n    marginRight: 5,\n    overflowY: \"hidden\",\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  replyginMsgBody: {\n    padding: 10,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\",\n  },\n\n  replyginContactMsgSideColor: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\",\n  },\n\n  replyginSelfMsgSideColor: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#6bcbef\",\n  },\n\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500,\n  },\n}));\n\nconst EmojiOptions = (props) => {\n  const { disabled, showEmoji, setShowEmoji, handleAddEmoji } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <IconButton\n        aria-label=\"emojiPicker\"\n        component=\"span\"\n        disabled={disabled}\n        onClick={(e) => setShowEmoji((prevState) => !prevState)}\n      >\n        <MoodIcon className={classes.sendMessageIcons} />\n      </IconButton>\n      {showEmoji ? (\n        <div className={classes.emojiBox}>\n          <Picker\n            perLine={16}\n            showPreview={false}\n            showSkinTones={false}\n            onSelect={handleAddEmoji}\n          />\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nconst SignSwitch = (props) => {\n  const { width, setSignMessage, signMessage } = props;\n  if (isWidthUp(\"md\", width)) {\n    return (\n      <FormControlLabel\n        style={{ marginRight: 7, color: \"gray\" }}\n        label={i18n.t(\"messagesInput.signMessage\")}\n        labelPlacement=\"start\"\n        control={\n          <Switch\n            size=\"small\"\n            checked={signMessage}\n            onChange={(e) => {\n              setSignMessage(e.target.checked);\n            }}\n            name=\"showAllTickets\"\n            color=\"primary\"\n          />\n        }\n      />\n    );\n  }\n  return null;\n};\n\nconst FileInput = (props) => {\n  const { handleChangeMedias, disableOption } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <input\n        multiple\n        type=\"file\"\n        id=\"upload-button\"\n        disabled={disableOption()}\n        className={classes.uploadInput}\n        onChange={handleChangeMedias}\n      />\n      <label htmlFor=\"upload-button\">\n        <IconButton\n          aria-label=\"upload\"\n          component=\"span\"\n          disabled={disableOption()}\n        >\n          <AttachFileIcon className={classes.sendMessageIcons} />\n        </IconButton>\n      </label>\n    </>\n  );\n};\n\nconst ActionButtons = (props) => {\n  const {\n    inputMessage,\n    loading,\n    recording,\n    ticketStatus,\n    handleSendMessage,\n    handleCancelAudio,\n    handleUploadAudio,\n    handleStartRecording,\n    handleOpenModalForward,\n    showSelectMessageCheckbox\n  } = props;\n  const classes = useStyles();\n  \n  // ✅ FUNCIÓN PARA CANCELAR SELECCIÓN DE MENSAJES\n  const handleCancelSelection = () => {\n    const { setShowSelectMessageCheckbox, setSelectedMessages } = props;\n    setShowSelectMessageCheckbox(false);\n    setSelectedMessages([]);\n  };\n  \n  if (showSelectMessageCheckbox) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n        {/* ✅ BOTÓN CANCELAR */}\n        <IconButton\n          aria-label=\"cancelSelection\"\n          component=\"span\"\n          onClick={handleCancelSelection}\n          disabled={loading}\n          style={{ color: '#f44336' }}\n          title=\"Cancelar selección\"\n        >\n          <HighlightOffIcon className={classes.sendMessageIcons} />\n        </IconButton>\n        <IconButton\n          aria-label=\"forwardMessage\"\n          component=\"span\"\n          onClick={handleOpenModalForward}\n          disabled={loading}\n        >\n          <Reply className={classes.ForwardMessageIcons} />\n        </IconButton>\n      </div>\n    );\n  } else if (inputMessage) {\n    return (\n      <IconButton\n        aria-label=\"sendMessage\"\n        component=\"span\"\n        onClick={handleSendMessage}\n        disabled={loading}\n      >\n        <SendIcon className={classes.sendMessageIcons} />\n      </IconButton>\n    );\n  } else if (recording) {\n    return (\n      <div className={classes.recorderWrapper}>\n        <IconButton\n          aria-label=\"cancelRecording\"\n          component=\"span\"\n          fontSize=\"large\"\n          disabled={loading}\n          onClick={handleCancelAudio}\n        >\n          <HighlightOffIcon className={classes.cancelAudioIcon} />\n        </IconButton>\n        {loading ? (\n          <div>\n            <CircularProgress className={classes.audioLoading} />\n          </div>\n        ) : (\n          <RecordingTimer />\n        )}\n\n        <IconButton\n          aria-label=\"sendRecordedAudio\"\n          component=\"span\"\n          onClick={handleUploadAudio}\n          disabled={loading}\n        >\n          <CheckCircleOutlineIcon className={classes.sendAudioIcon} />\n        </IconButton>\n      </div>\n    );\n  } else {\n    return (\n      <IconButton\n        aria-label=\"showRecorder\"\n        component=\"span\"\n        disabled={loading || ticketStatus !== \"open\"}\n        onClick={handleStartRecording}\n      >\n        <MicIcon className={classes.sendMessageIcons} />\n      </IconButton>\n    );\n  }\n};\n\nconst CustomInput = (props) => {\n  const {\n    loading,\n    inputRef,\n    ticketStatus,\n    inputMessage,\n    setInputMessage,\n    handleSendMessage,\n    handleInputPaste,\n    disableOption,\n    handleQuickAnswersClick,\n    options,\n    popupOpen\n  } = props;\n  const classes = useStyles();\n\n  const onKeyPress = (e) => {\n    if (loading || e.shiftKey) return;\n    else if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  const onPaste = (e) => {\n    if (ticketStatus === \"open\") {\n      handleInputPaste(e);\n    }\n  };\n\n  const renderPlaceholder = () => {\n    if (ticketStatus === \"open\") {\n      return i18n.t(\"messagesInput.placeholderOpen\") + \" (usa / para respuestas rápidas)\";\n    }\n    return i18n.t(\"messagesInput.placeholderClosed\");\n  };\n\n\n  const setInputRef = (input) => {\n    if (input) {\n      input.focus();\n      inputRef.current = input;\n    }\n  };\n\n  return (\n    <div className={classes.messageInputWrapper}>\n      <Autocomplete\n        freeSolo\n        open={popupOpen}\n        id=\"quick-messages-autocomplete\"\n        value={inputMessage}\n        options={options}\n        closeIcon={null}\n        getOptionLabel={(option) => {\n          if (isObject(option)) {\n            return option.label;\n          } else {\n            return option;\n          }\n        }}\n        onChange={(event, opt) => {\n         \n          if (isObject(opt) && has(opt, \"value\") && isNil(opt.mediaPath)) {\n            setInputMessage(opt.value);\n            setTimeout(() => {\n              inputRef.current.scrollTop = inputRef.current.scrollHeight;\n            }, 200);\n          } else if (isObject(opt) && has(opt, \"value\") && !isNil(opt.mediaPath)) {\n            handleQuickAnswersClick(opt);\n\n            setTimeout(() => {\n              inputRef.current.scrollTop = inputRef.current.scrollHeight;\n            }, 200);\n          }\n        }}\n        onInputChange={(event, opt, reason) => {\n          if (reason === \"input\") {\n            setInputMessage(event.target.value);\n          }\n        }}\n        onPaste={onPaste}\n        onKeyPress={onKeyPress}\n        style={{ width: \"100%\" }}\n        renderInput={(params) => {\n          const { InputLabelProps, InputProps, ...rest } = params;\n          return (\n            <InputBase\n              {...params.InputProps}\n              {...rest}\n              disabled={disableOption()}\n              inputRef={setInputRef}\n              placeholder={renderPlaceholder()}\n              multiline\n              className={classes.messageInput}\n              maxRows={5}\n            />\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nconst MessageInputCustom = (props) => {\n  const { ticketStatus, ticketId } = props;\n  const classes = useStyles();\n  const [percentLoading, setPercentLoading] = useState(0);\n  const [medias, setMedias] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [showEmoji, setShowEmoji] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const [quickMessages, setQuickMessages] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [popupOpen, setPopupOpen] = useState(false);\n  const [fileLists, setFileLists] = useState([]);\n  const [fileListOptions, setFileListOptions] = useState([]);\n  const [fileListAnchorEl, setFileListAnchorEl] = useState(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const inputRef = useRef();\n  const { setReplyingMessage, replyingMessage } =\n    useContext(ReplyMessageContext);\n  const { user } = useContext(AuthContext);\n\n  const [signMessage, setSignMessage] = useLocalStorage(\"signOption\", true);\n\n  const {\n    selectedMessages,\n    setForwardMessageModalOpen,\n    showSelectMessageCheckbox,\n    setShowSelectMessageCheckbox,\n    setSelectedMessages } = useContext(ForwardMessageContext);\n\n  const { list: listQuickMessages } = useQuickMessages();\n  const { list: listFiles } = useFiles();\n\n  // Cargar respuestas rápidas\n  useEffect(() => {\n    async function fetchData() {\n      const companyId = localStorage.getItem(\"companyId\");\n      const messages = await listQuickMessages({ companyId, userId: user.id });\n      const options = messages.map((m) => {\n        let truncatedMessage = m.message;\n        if (isString(truncatedMessage) && truncatedMessage.length > 35) {\n          truncatedMessage = m.message.substring(0, 35) + \"...\";\n        }\n        return {\n          value: m.message,\n          label: `/${m.shortcode} - ${truncatedMessage}`,\n          shortcode: m.shortcode,\n          message: m.message,\n          mediaPath: m.mediaPath,\n        };\n      });\n      setQuickMessages(options);\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Cargar listas de archivos\n  useEffect(() => {\n    async function fetchFileLists() {\n      const companyId = localStorage.getItem(\"companyId\");\n      const files = await listFiles({ companyId, userId: user.id });\n      const options = files.map((fileList) => {\n        let truncatedName = fileList.name;\n        if (isString(truncatedName) && truncatedName.length > 35) {\n          truncatedName = fileList.name.substring(0, 35) + \"...\";\n        }\n        return {\n          value: fileList,\n          label: `📁 ${truncatedName}`,\n          name: fileList.name,\n          message: fileList.message,\n          options: fileList.options,\n        };\n      });\n      setFileLists(options);\n    }\n    fetchFileLists();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Manejar autocompletado de respuestas rápidas\n  useEffect(() => {\n    if (\n      isString(inputMessage) &&\n      !isEmpty(inputMessage) &&\n      inputMessage.startsWith(\"/\")\n    ) {\n      setPopupOpen(true);\n\n      // Si solo hay \"/\", mostrar todas las opciones\n      if (inputMessage === \"/\") {\n        setOptions(quickMessages);\n      } else {\n        // Filtrar por lo que se escriba después de \"/\"\n        const searchTerm = inputMessage.substring(1).toLowerCase();\n        const filteredOptions = quickMessages.filter(\n          (m) => \n            m.shortcode.toLowerCase().includes(searchTerm) ||\n            m.message.toLowerCase().includes(searchTerm)\n        );\n        setOptions(filteredOptions);\n      }\n    } else {\n      setPopupOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputMessage]);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [replyingMessage]);\n\n  useEffect(() => {\n    inputRef.current.focus();\n    return () => {\n      setInputMessage(\"\");\n      setShowEmoji(false);\n      setMedias([]);\n      setReplyingMessage(null);\n    };\n  }, [ticketId, setReplyingMessage]);\n\n  // const handleChangeInput = e => {\n  // \tif (isObject(e) && has(e, 'value')) {\n  // \t\tsetInputMessage(e.value);\n  // \t} else {\n  // \t\tsetInputMessage(e.target.value)\n  // \t}\n  // };\n\n  const handleOpenModalForward = () => {\n    if (selectedMessages.length === 0) {\n      setForwardMessageModalOpen(false)\n      toastError(i18n.t(\"messagesList.header.notMessage\"));\n      return;\n    }\n    setForwardMessageModalOpen(true);\n  }\n\n  const handleAddEmoji = (e) => {\n    let emoji = e.native;\n    setInputMessage((prevState) => prevState + emoji);\n  };\n\n  const handleChangeMedias = (e) => {\n    if (!e.target.files) {\n      return;\n    }\n\n    const selectedMedias = Array.from(e.target.files);\n    setMedias(selectedMedias);\n  };\n\n  const handleInputPaste = (e) => {\n    if (e.clipboardData.files[0]) {\n      setMedias([e.clipboardData.files[0]]);\n    }\n  };\n\n  const handleUploadQuickMessageMedia = async (blob, originalFileName) => {\n    try {\n      if (logger && logger.media) {\n        logger.media.debug(\"Procesando multimedia para envío, tipo:\", blob.type);\n        logger.media.debug(\"Nombre original del archivo:\", originalFileName);\n      }\n      \n      // Mantener el nombre original del archivo\n      let filename = originalFileName;\n      \n      // Si el nombre es muy extenso (más de 50 caracteres), truncarlo\n              if (filename && filename.length > 50) {\n          const extension = filename.split('.').pop();\n          const nameWithoutExt = filename.substring(0, filename.lastIndexOf('.'));\n          const truncatedName = nameWithoutExt.substring(0, 47) + '...';\n          filename = `${truncatedName}.${extension}`;\n          if (logger && logger.media) {\n            logger.media.debug(\"Nombre truncado:\", filename);\n          }\n        }\n        \n        // Si no hay nombre original, generar uno con timestamp\n        if (!filename) {\n          const extension = blob.type.split(\"/\")[1] || 'bin';\n          filename = `${new Date().getTime()}.${extension}`;\n          if (logger && logger.media) {\n            logger.media.debug(\"Nombre generado:\", filename);\n          }\n        }\n        \n        if (logger && logger.media) {\n          logger.media.debug(\"Nombre final del archivo:\", filename);\n        }\n\n        const formData = new FormData();\n        formData.append(\"medias\", blob, filename);\n        formData.append(\"body\", filename); // Usar el nombre del archivo como body\n        formData.append(\"fromMe\", true);\n\n        if (logger && logger.media) {\n          logger.media.debug(\"Enviando multimedia al servidor...\");\n        }\n        \n        await api.post(`/messages/${ticketId}`, formData);\n        \n        if (logger && logger.media) {\n          logger.media.info(\"Multimedia enviada exitosamente\");\n        }\n      } catch (err) {\n        if (logger && logger.media) {\n          logger.media.error(\"Error al enviar multimedia:\", err);\n        }\n        toastError(err);\n        throw err; // Re-lanzar el error para que lo maneje la función padre\n      }\n  };\n  \n  const handleQuickAnswersClick = async (value) => {\n    if (value.mediaPath) {\n      setLoading(true);\n      try {\n        if (logger && logger.media) {\n          logger.media.debug(\"Descargando multimedia desde:\", value.mediaPath);\n          logger.media.debug(\"URL completa:\", value.mediaPath);\n        }\n        \n        // ✅ Validar que la URL sea válida\n        if (!value.mediaPath || value.mediaPath === 'null' || value.mediaPath === 'undefined' || value.mediaPath.includes('undefined')) {\n          if (logger && logger.media) {\n            logger.media.warn(\"URL de multimedia inválida:\", value.mediaPath);\n          }\n          toastError(new Error(\"URL de multimedia inválida - Contacte al administrador\"));\n          setLoading(false);\n          setInputMessage(value.value);\n          return;\n        }\n        \n        const { data } = await axios.get(value.mediaPath, {\n          responseType: \"blob\",\n          timeout: 10000, // 10 segundos de timeout\n        });\n\n        if (logger && logger.media) {\n          logger.media.debug(\"Multimedia descargada exitosamente, tamaño:\", data.size);\n        }\n        \n        // ✅ EXTRAER NOMBRE REAL DEL ARCHIVO DESDE LA URL\n        let fileName = value.value; // Fallback al texto de respuesta rápida\n        \n        if (value.mediaPath) {\n          // Extraer nombre desde la URL del archivo\n          const urlParts = value.mediaPath.split('/');\n          const lastPart = urlParts[urlParts.length - 1];\n          \n          if (lastPart && lastPart.includes('.')) {\n            fileName = lastPart;\n            if (logger && logger.media) {\n              logger.media.debug(\"Nombre extraído desde URL:\", fileName);\n            }\n          }\n        }\n        \n        await handleUploadQuickMessageMedia(data, fileName);\n        setInputMessage(\"\");\n        setLoading(false);\n        return;\n      } catch (err) {\n        console.error(\"Error al procesar multimedia de respuesta rápida:\", err);\n        console.error(\"URL que falló:\", value.mediaPath);\n        \n        // Mostrar error más específico\n        let errorMessage = \"Error al procesar multimedia\";\n        if (err.response) {\n          if (err.response.status === 404) {\n            errorMessage = \"Archivo multimedia no encontrado\";\n          } else if (err.response.status === 403) {\n            errorMessage = \"Sin permisos para acceder al archivo\";\n          } else {\n            errorMessage = `Error del servidor: ${err.response.status}`;\n          }\n        } else if (err.code === 'ECONNABORTED') {\n          errorMessage = \"Tiempo de espera agotado\";\n        }\n        \n        toastError(new Error(errorMessage));\n        setLoading(false);\n        \n        // Si falla la multimedia, al menos enviar el texto\n        setInputMessage(value.value);\n        return;\n      }\n    }\n\n    setInputMessage(\"\");\n    setInputMessage(value.value);\n  };\n\n  const handleFileListClick = async (value) => {\n    if (logger && logger.media) {\n      logger.media.debug(\"Valor recibido en handleFileListClick:\", value);\n    }\n    \n    // Verificar si value.value.options existe (estructura correcta)\n    if (!value.value || !value.value.options || value.value.options.length === 0) {\n      if (logger && logger.media) {\n        logger.media.warn(\"No hay archivos en la lista. value.value:\", value.value);\n      }\n      toastError(\"Esta lista de archivos no contiene archivos\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      if (logger && logger.media) {\n        logger.media.debug(\"Enviando lista de archivos:\", value.name);\n        logger.media.debug(\"Archivos en la lista:\", value.value.options.length);\n      }\n\n      // Enviar cada archivo de la lista\n      for (const fileOption of value.value.options) {\n        try {\n          if (logger && logger.media) {\n            logger.media.debug(\"Procesando archivo:\", fileOption.name);\n          }\n          \n          // Construir URL del archivo\n          const publicFolder = \"public/fileList\";\n          const fileUrl = `${process.env.REACT_APP_BACKEND_URL || 'http://localhost:8080'}/${publicFolder}/${value.value.id}/${fileOption.path}`;\n          \n          if (logger && logger.media) {\n            logger.media.debug(\"URL del archivo:\", fileUrl);\n          }\n          \n          // Extraer nombre del archivo desde la ruta\n          const fileName = fileOption.path || fileOption.name || 'documento';\n          if (logger && logger.media) {\n            logger.media.debug(\"Nombre del archivo extraído:\", fileName);\n          }\n          \n          // Descargar archivo\n          const { data } = await axios.get(fileUrl, {\n            responseType: \"blob\",\n            timeout: 10000,\n          });\n\n          if (logger && logger.media) {\n            logger.media.debug(\"Archivo descargado:\", fileName, \"tamaño:\", data.size);\n          }\n          \n          // Enviar archivo\n          await handleUploadQuickMessageMedia(data, fileName);\n          \n          // Pequeña pausa entre archivos para no sobrecargar\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n        } catch (err) {\n          if (logger && logger.media) {\n            logger.media.error(\"Error procesando archivo:\", fileOption.name, err);\n          }\n          toastError(`Error al procesar archivo: ${fileOption.name}`);\n        }\n      }\n      \n      if (logger && logger.media) {\n        logger.media.info(\"Lista de archivos enviada exitosamente\");\n      }\n      setLoading(false);\n      \n    } catch (err) {\n      if (logger && logger.media) {\n        logger.media.error(\"Error al enviar lista de archivos:\", err);\n      }\n      toastError(\"Error al enviar lista de archivos\");\n      setLoading(false);\n    }\n  };\n\n  const handleUploadMedia = async (e) => {\n    setLoading(true);\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"fromMe\", true);\n\n    medias.forEach(async (media, idx) => {\n\n      const file = media;\n\n      if (!file) { return; }\n\n      if (media?.type.split('/')[0] === 'image') {\n        new Compressor(file, {\n          quality: 0.7,\n\n          async success(media) {\n            //const formData = new FormData();\n            // The third parameter is required for server\n            //formData.append('file', result, result.name);\n\n            formData.append(\"medias\", media);\n            formData.append(\"body\", media.name);\n\n          },\n          error(err) {\n            alert('erro')\n            if (logger && logger.media) {\n              logger.media.error(\"Error en compresión:\", err.message);\n            }\n          },\n\n        });\n      } else {\n        formData.append(\"medias\", media);\n        formData.append(\"body\", media.name);\n\n      }\n\n\n    },);\n\n    setTimeout(async()=> {\n\n      try {\n        await api.post(`/messages/${ticketId}`, formData, {\n          onUploadProgress: (event) => {\n            let progress = Math.round(\n              (event.loaded * 100) / event.total\n            );\n            setPercentLoading(progress);\n            if (logger && logger.media) {\n              logger.media.debug(\n                `🖼️ Imagen ${progress}% cargada`\n              );\n            }\n          },\n        })\n          .then((response) => {\n            setLoading(false)\n            setMedias([])\n            setPercentLoading(0);\n            if (logger && logger.media) {\n              logger.media.info(\n                `✅ Imagen enviada al servidor`\n              );\n            }\n          })\n          .catch((err) => {\n            if (logger && logger.media) {\n              logger.media.error(\n                `❌ Error al subir imagen: ${err.message}`\n              );\n            }\n          });\n      } catch (err) {\n        toastError(err);\n      }\n\n\n    },2000)\n\n  }\n\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() === \"\") return;\n    setLoading(true);\n\n    const message = {\n      read: 1,\n      fromMe: true,\n      mediaUrl: \"\",\n      body: signMessage\n        ? `*${user?.name}:*\\n${inputMessage.trim()}`\n        : inputMessage.trim(),\n      quotedMsg: replyingMessage,\n    };\n    try {\n      await api.post(`/messages/${ticketId}`, message);\n    } catch (err) {\n      toastError(err);\n    }\n\n    setInputMessage(\"\");\n    setShowEmoji(false);\n    setLoading(false);\n    setReplyingMessage(null);\n  };\n\n  const handleStartRecording = async () => {\n    setLoading(true);\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true });\n      await Mp3Recorder.start();\n      setRecording(true);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const handleUploadAudio = async () => {\n    setLoading(true);\n    try {\n      const [, blob] = await Mp3Recorder.stop().getMp3();\n      if (blob.size < 10000) {\n        setLoading(false);\n        setRecording(false);\n        return;\n      }\n\n      const formData = new FormData();\n      const filename = `audio-record-site-${new Date().getTime()}.mp3`;\n      formData.append(\"medias\", blob, filename);\n      formData.append(\"body\", filename);\n      formData.append(\"fromMe\", true);\n\n      await api.post(`/messages/${ticketId}`, formData);\n    } catch (err) {\n      toastError(err);\n    }\n\n    setRecording(false);\n    setLoading(false);\n  };\n\n  const handleCancelAudio = async () => {\n    try {\n      await Mp3Recorder.stop().getMp3();\n      setRecording(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleQuickReplyButtonClick = () => {\n    setInputMessage(\"/\");\n    // Forzar que se muestren las opciones inmediatamente\n    setTimeout(() => {\n      setPopupOpen(true);\n      setOptions(quickMessages);\n    }, 100);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const handleFileListButtonClick = (event) => {\n    setFileListAnchorEl(event.currentTarget);\n    setFileListOptions(fileLists);\n  };\n\n  const handleFileListMenuClose = () => {\n    setFileListAnchorEl(null);\n  };\n\n  const handleFileListSelect = (fileList) => {\n    handleFileListClick(fileList);\n    handleFileListMenuClose();\n  };\n\n  const disableOption = () => {\n    return loading || recording || ticketStatus !== \"open\";\n  };\n\n  const renderReplyingMessage = (message) => {\n    return (\n      <div className={classes.replyginMsgWrapper}>\n        <div className={classes.replyginMsgContainer}>\n          <span\n            className={clsx(classes.replyginContactMsgSideColor, {\n              [classes.replyginSelfMsgSideColor]: !message.fromMe,\n            })}\n          ></span>\n          <div className={classes.replyginMsgBody}>\n            {!message.fromMe && (\n              <span className={classes.messageContactName}>\n                {message.contact?.name}\n              </span>\n            )}\n            {message.body}\n          </div>\n        </div>\n        <IconButton\n          aria-label=\"showRecorder\"\n          component=\"span\"\n          disabled={loading || ticketStatus !== \"open\"}\n          onClick={() => setReplyingMessage(null)}\n        >\n          <ClearIcon className={classes.sendMessageIcons} />\n        </IconButton>\n      </div>\n    );\n  };\n\n  if (medias.length > 0)\n    return (\n      <Paper elevation={0} square className={classes.viewMediaInputWrapper}>\n        <IconButton\n          aria-label=\"cancel-upload\"\n          component=\"span\"\n          onClick={(e) => setMedias([])}\n        >\n          <CancelIcon className={classes.sendMessageIcons} />\n        </IconButton>\n\n        {loading ? (\n          <div>\n            {/*<CircularProgress className={classes.circleLoading} />*/}\n            <LinearWithValueLabel progress={percentLoading} />\n          </div>\n        ) : (\n          <span>\n            {medias[0]?.name}\n            {/* <img src={media.preview} alt=\"\"></img> */}\n          </span>\n        )}\n        <IconButton\n          aria-label=\"send-upload\"\n          component=\"span\"\n          onClick={handleUploadMedia}\n          disabled={loading}\n        >\n          <SendIcon className={classes.sendMessageIcons} />\n        </IconButton>\n      </Paper>\n    );\n  else {\n    return (\n      <Paper square elevation={0} className={classes.mainWrapper}>\n        {replyingMessage && renderReplyingMessage(replyingMessage)}\n        <div className={classes.newMessageBox}>\n          <EmojiOptions\n            disabled={disableOption()}\n            handleAddEmoji={handleAddEmoji}\n            showEmoji={showEmoji}\n            setShowEmoji={setShowEmoji}\n          />\n\n          <FileInput\n            disableOption={disableOption}\n            handleChangeMedias={handleChangeMedias}\n          />\n\n          <IconButton\n            aria-label=\"quickReplies\"\n            component=\"span\"\n            disabled={disableOption()}\n            onClick={handleQuickReplyButtonClick}\n            title=\"Respuestas Rápidas\"\n          >\n            <FlashOnIcon className={classes.sendMessageIcons} />\n          </IconButton>\n\n          <IconButton\n            aria-label=\"fileLists\"\n            component=\"span\"\n            disabled={disableOption()}\n            onClick={handleFileListButtonClick}\n            title=\"Listas de Archivos\"\n          >\n            <FolderIcon className={classes.sendMessageIcons} />\n          </IconButton>\n\n          <Menu\n            anchorEl={fileListAnchorEl}\n            open={Boolean(fileListAnchorEl)}\n            onClose={handleFileListMenuClose}\n            PaperProps={{\n              style: {\n                maxHeight: 300,\n                width: 300,\n              },\n            }}\n          >\n            {fileListOptions.map((fileList) => (\n              <MenuItem\n                key={fileList.value.id}\n                onClick={() => handleFileListSelect(fileList)}\n                style={{ \n                  display: 'flex', \n                  alignItems: 'center',\n                  fontSize: '14px',\n                  padding: '8px 16px'\n                }}\n              >\n                {fileList.label}\n              </MenuItem>\n            ))}\n            {fileListOptions.length === 0 && (\n              <MenuItem disabled>\n                No hay listas de archivos disponibles\n              </MenuItem>\n            )}\n          </Menu>\n\n          <SignSwitch\n            width={props.width}\n            setSignMessage={setSignMessage}\n            signMessage={signMessage}\n          />\n\n          <CustomInput\n            loading={loading}\n            inputRef={inputRef}\n            ticketStatus={ticketStatus}\n            inputMessage={inputMessage}\n            setInputMessage={setInputMessage}\n            // handleChangeInput={handleChangeInput}\n            handleSendMessage={handleSendMessage}\n            handleInputPaste={handleInputPaste}\n            disableOption={disableOption}\n            replyingMessage={replyingMessage}\n            handleQuickAnswersClick={handleQuickAnswersClick}\n            options={options}\n            popupOpen={popupOpen}\n          />\n\n          <ActionButtons\n            inputMessage={inputMessage}\n            loading={loading}\n            recording={recording}\n            ticketStatus={ticketStatus}\n            handleSendMessage={handleSendMessage}\n            handleCancelAudio={handleCancelAudio}\n            handleUploadAudio={handleUploadAudio}\n            handleStartRecording={handleStartRecording}\n            handleOpenModalForward={handleOpenModalForward}\n            showSelectMessageCheckbox={showSelectMessageCheckbox}\n            setShowSelectMessageCheckbox={setShowSelectMessageCheckbox}\n            setSelectedMessages={setSelectedMessages}\n          />\n        </div>\n      </Paper>\n    );\n  }\n};\n\nexport default withWidth()(MessageInputCustom);\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}