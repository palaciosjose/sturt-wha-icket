{"ast":null,"code":"import React,{useContext,useEffect,useRef,useState}from\"react\";import clsx from\"clsx\";import{format,isSameDay,parseISO}from\"date-fns\";import{useHistory,useParams}from\"react-router-dom\";import Avatar from\"@material-ui/core/Avatar\";import Badge from\"@material-ui/core/Badge\";import Box from\"@material-ui/core/Box\";import Divider from\"@material-ui/core/Divider\";import ListItem from\"@material-ui/core/ListItem\";import ListItemAvatar from\"@material-ui/core/ListItemAvatar\";import ListItemSecondaryAction from\"@material-ui/core/ListItemSecondaryAction\";import ListItemText from\"@material-ui/core/ListItemText\";import Typography from\"@material-ui/core/Typography\";import{blue,green,orange}from\"@material-ui/core/colors\";import{makeStyles}from\"@material-ui/core/styles\";import{i18n}from\"../../translate/i18n\";import{Tooltip}from\"@material-ui/core\";import{v4 as uuidv4}from\"uuid\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{TicketsContext}from\"../../context/Tickets/TicketsContext\";import toastError from\"../../errors/toastError\";import api from\"../../services/api\";import ButtonWithSpinner from\"../ButtonWithSpinner\";import MarkdownWrapper from\"../MarkdownWrapper\";import AndroidIcon from\"@material-ui/icons/Android\";import EmojiEmotionsIcon from\"@material-ui/icons/EmojiEmotions\";import SettingsIcon from\"@material-ui/icons/Settings\";import VisibilityIcon from\"@material-ui/icons/Visibility\";import ContactTag from\"../ContactTag\";import TicketMessagesDialog from\"../TicketMessagesDialog\";import TransferTicketModalCustom from\"../TransferTicketModalCustom\";import{getInitials}from\"../../helpers/getInitials\";import{generateColor}from\"../../helpers/colorGenerator\";const useStyles=makeStyles(theme=>({ticket:{position:\"relative\"},pendingTicket:{cursor:\"unset\"},queueTag:{background:\"#FCFCFC\",color:\"#000\",marginRight:1,padding:1,fontWeight:'bold',paddingLeft:5,paddingRight:5,borderRadius:3,fontSize:\"0.8em\",whiteSpace:\"nowrap\"},noTicketsDiv:{display:\"flex\",height:\"100px\",margin:40,flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"},newMessagesCount:{position:\"absolute\",alignSelf:\"center\",marginRight:8,marginLeft:\"auto\",top:\"10px\",left:\"20px\",borderRadius:0},noTicketsText:{textAlign:\"center\",color:\"rgb(104, 121, 146)\",fontSize:\"14px\",lineHeight:\"1.4\"},connectionTag:{background:\"green\",color:\"#FFF\",marginRight:1,padding:1,fontWeight:'bold',paddingLeft:5,paddingRight:5,borderRadius:3,fontSize:\"0.8em\",whiteSpace:\"nowrap\"},noTicketsTitle:{textAlign:\"center\",fontSize:\"16px\",fontWeight:\"600\",margin:\"0px\"},contactNameWrapper:{display:\"flex\",justifyContent:\"space-between\",marginLeft:\"5px\"},lastMessageTime:{justifySelf:\"flex-end\",textAlign:\"right\",position:\"relative\",top:-5,background:'#333333',color:'#ffffff',border:'1px solid #3a3b6c',borderRadius:5,padding:1,paddingLeft:5,paddingRight:5,fontSize:'0.9em',zIndex:10,marginRight:120},closedBadge:{alignSelf:\"center\",justifySelf:\"flex-end\",marginRight:32,marginLeft:\"auto\"},contactLastMessage:{paddingRight:\"0%\",marginLeft:\"5px\"},badgeStyle:{color:\"white\",backgroundColor:green[500]},acceptButton:{position:\"absolute\",right:\"108px\"},ticketQueueColor:{flex:\"none\",width:\"8px\",height:\"100%\",position:\"absolute\",top:\"0%\",left:\"0%\"},ticketInfo:{position:\"relative\",top:-13},secondaryContentSecond:{display:'flex',// marginTop: 5,\n//marginLeft: \"5px\",\nalignItems:\"flex-start\",flexWrap:\"wrap\",flexDirection:\"row\",alignContent:\"flex-start\"},ticketInfo1:{position:\"relative\",top:13,right:0},Radiusdot:{\"& .MuiBadge-badge\":{borderRadius:2,position:\"inherit\",height:16,margin:2,padding:3},\"& .MuiBadge-anchorOriginTopRightRectangle\":{transform:\"scale(1) translate(0%, -40%)\"}},presence:{color:(theme===null||theme===void 0?void 0:theme.mode)==='light'?\"blue\":\"lightgreen\",fontWeight:\"bold\"}}));const TicketListItemCustom=_ref=>{var _ticket$queue3,_ticket$queue3$name,_ticket$queue4,_ticket$contact,_ticket$contact2,_ticket$contact3,_ticket$contact4,_ticket$contact5,_ticket$contact6,_ticket$whatsapp,_ticket$whatsapp2,_ticket$whatsapp2$nam,_ticket$queue5,_ticket$queue6,_ticket$queue7,_ticket$queue7$name;let{ticket}=_ref;const classes=useStyles();const history=useHistory();const[loading,setLoading]=useState(false);const[tag,setTag]=useState([]);const[ticketUser,setTicketUser]=useState(null);const[lastInteractionLabel,setLastInteractionLabel]=useState('');const[openTicketMessageDialog,setOpenTicketMessageDialog]=useState(false);const{ticketId}=useParams();const isMounted=useRef(true);const{setCurrentTicket}=useContext(TicketsContext);const{user}=useContext(AuthContext);const{profile}=user;const[transferTicketModalOpen,setTransferTicketModalOpen]=useState(false);const presenceMessage={composing:\"Digitando...\",recording:\"Gravando...\"};useEffect(()=>{if(ticket.userId&&ticket.user){var _ticket$user,_ticket$user$name;setTicketUser((_ticket$user=ticket.user)===null||_ticket$user===void 0?void 0:(_ticket$user$name=_ticket$user.name)===null||_ticket$user$name===void 0?void 0:_ticket$user$name.toUpperCase());}setTag(ticket===null||ticket===void 0?void 0:ticket.tags);return()=>{isMounted.current=false;};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const handleCloseTicket=async id=>{setTag(ticket===null||ticket===void 0?void 0:ticket.tags);setLoading(true);try{var _ticket$queue;await api.put(`/tickets/${id}`,{status:\"closed\",userId:user===null||user===void 0?void 0:user.id,queueId:ticket===null||ticket===void 0?void 0:(_ticket$queue=ticket.queue)===null||_ticket$queue===void 0?void 0:_ticket$queue.id,useIntegration:false,promptId:null,integrationId:null});}catch(err){setLoading(false);toastError(err);}if(isMounted.current){setLoading(false);}history.push(`/tickets/`);};useEffect(()=>{const renderLastInteractionLabel=()=>{let labelColor='';let labelText='';if(!ticket.lastMessage)return'';const lastInteractionDate=parseISO(ticket.updatedAt);const currentDate=new Date();const timeDifference=currentDate-lastInteractionDate;const hoursDifference=Math.floor(timeDifference/(1000*60*60));const minutesDifference=Math.floor(timeDifference/(1000*60));if(minutesDifference>=3&&minutesDifference<=10){labelText=`(${minutesDifference} m atrás)`;labelColor='green';}else if(minutesDifference>=30&&minutesDifference<60){labelText=`(${minutesDifference} m atrás)`;labelColor='Orange';}else if(minutesDifference>60&&hoursDifference<24){labelText=`(${hoursDifference} h atrás)`;labelColor='red';}else if(hoursDifference>=24){labelText=`(${Math.floor(hoursDifference/24)} dias atrás)`;labelColor='red';}return{labelText,labelColor};};// Função para atualizar o estado do componente\nconst updateLastInteractionLabel=()=>{if(!isMounted.current)return;// Verificar si el componente sigue montado\nconst{labelText,labelColor}=renderLastInteractionLabel();setLastInteractionLabel(/*#__PURE__*/React.createElement(Badge,{className:classes.lastInteractionLabel,style:{color:labelColor}},labelText));// Agendando a próxima atualização após 30 segundos\nconst timeoutId=setTimeout(updateLastInteractionLabel,30*1000);// Guardar el timeout ID para limpiarlo\nreturn()=>clearTimeout(timeoutId);};// Inicializando a primeira atualização\nconst cleanup=updateLastInteractionLabel();// Cleanup function\nreturn()=>{if(cleanup)cleanup();};},[ticket,isMounted,classes.lastInteractionLabel]);// Agregar dependencias necesarias\nconst handleReopenTicket=async id=>{setLoading(true);try{var _ticket$queue2;await api.put(`/tickets/${id}`,{status:\"open\",userId:user===null||user===void 0?void 0:user.id,queueId:ticket===null||ticket===void 0?void 0:(_ticket$queue2=ticket.queue)===null||_ticket$queue2===void 0?void 0:_ticket$queue2.id});}catch(err){setLoading(false);toastError(err);}if(isMounted.current){setLoading(false);}history.push(`/tickets/${ticket.uuid}`);};const handleAcepptTicket=async id=>{setLoading(true);try{await api.put(`/tickets/${id}`,{status:\"open\",userId:user===null||user===void 0?void 0:user.id});let settingIndex;try{const{data}=await api.get(\"/settings/\");settingIndex=data.filter(s=>s.key===\"sendGreetingAccepted\");}catch(err){toastError(err);}if(settingIndex[0].value===\"enabled\"&&!ticket.isGroup){handleSendMessage(ticket.id);}}catch(err){setLoading(false);toastError(err);}if(isMounted.current){setLoading(false);}// handleChangeTab(null, \"tickets\");\n// handleChangeTab(null, \"open\");\nhistory.push(`/tickets/${ticket.uuid}`);};const handleSendMessage=async id=>{const msg=`{{ms}} *{{name}}*, meu nome é *${user===null||user===void 0?void 0:user.name}* e agora vou prosseguir com seu atendimento!`;const message={read:1,fromMe:true,mediaUrl:\"\",body:`*Mensagem Automática:*\\n${msg.trim()}`};try{await api.post(`/messages/${id}`,message);}catch(err){toastError(err);}};const handleSelectTicket=ticket=>{const code=uuidv4();const{id,uuid}=ticket;setCurrentTicket({id,uuid,code});};const renderTicketInfo=()=>{return/*#__PURE__*/React.createElement(React.Fragment,null);};const handleOpenTransferModal=()=>{setTransferTicketModalOpen(true);};const handleCloseTransferTicketModal=()=>{if(isMounted.current){setTransferTicketModalOpen(false);}};return/*#__PURE__*/React.createElement(React.Fragment,{key:ticket.id},/*#__PURE__*/React.createElement(TransferTicketModalCustom,{modalOpen:transferTicketModalOpen,onClose:handleCloseTransferTicketModal,ticketid:ticket.id}),/*#__PURE__*/React.createElement(TicketMessagesDialog,{open:openTicketMessageDialog,handleClose:()=>setOpenTicketMessageDialog(false),ticketId:ticket.id}),/*#__PURE__*/React.createElement(ListItem,{dense:true,button:true,onClick:e=>{if(ticket.status===\"pending\")return;handleSelectTicket(ticket);},selected:ticketId&&+ticketId===ticket.id,className:clsx(classes.ticket,{[classes.pendingTicket]:ticket.status===\"pending\"})},/*#__PURE__*/React.createElement(Tooltip,{arrow:true,placement:\"right\",title:((_ticket$queue3=ticket.queue)===null||_ticket$queue3===void 0?void 0:(_ticket$queue3$name=_ticket$queue3.name)===null||_ticket$queue3$name===void 0?void 0:_ticket$queue3$name.toUpperCase())||\"\"},/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:((_ticket$queue4=ticket.queue)===null||_ticket$queue4===void 0?void 0:_ticket$queue4.color)||\"#7C7C7C\"},className:classes.ticketQueueColor})),/*#__PURE__*/React.createElement(ListItemAvatar,null,ticket.status!==\"pending\"?/*#__PURE__*/React.createElement(Avatar,{style:{marginTop:\"-20px\",marginLeft:\"-3px\",width:\"55px\",height:\"55px\",borderRadius:\"10%\",backgroundColor:generateColor(ticket===null||ticket===void 0?void 0:(_ticket$contact=ticket.contact)===null||_ticket$contact===void 0?void 0:_ticket$contact.number)},src:ticket===null||ticket===void 0?void 0:(_ticket$contact2=ticket.contact)===null||_ticket$contact2===void 0?void 0:_ticket$contact2.profilePicUrl},getInitials((ticket===null||ticket===void 0?void 0:(_ticket$contact3=ticket.contact)===null||_ticket$contact3===void 0?void 0:_ticket$contact3.name)||\"\")):/*#__PURE__*/React.createElement(Avatar,{style:{marginTop:\"-30px\",marginLeft:\"0px\",width:\"50px\",height:\"50px\",borderRadius:\"10%\",backgroundColor:generateColor(ticket===null||ticket===void 0?void 0:(_ticket$contact4=ticket.contact)===null||_ticket$contact4===void 0?void 0:_ticket$contact4.number)},src:ticket===null||ticket===void 0?void 0:(_ticket$contact5=ticket.contact)===null||_ticket$contact5===void 0?void 0:_ticket$contact5.profilePicUrl},getInitials((ticket===null||ticket===void 0?void 0:(_ticket$contact6=ticket.contact)===null||_ticket$contact6===void 0?void 0:_ticket$contact6.name)||\"\"))),/*#__PURE__*/React.createElement(ListItemText,{disableTypography:true,primary:/*#__PURE__*/React.createElement(\"span\",{className:classes.contactNameWrapper},/*#__PURE__*/React.createElement(Typography,{noWrap:true,component:\"span\",variant:\"body2\",color:\"textPrimary\"},/*#__PURE__*/React.createElement(\"strong\",null,ticket.contact.name,\" \",lastInteractionLabel),/*#__PURE__*/React.createElement(ListItemSecondaryAction,null,/*#__PURE__*/React.createElement(Box,{className:classes.ticketInfo1},renderTicketInfo())),profile===\"admin\"&&/*#__PURE__*/React.createElement(Tooltip,{title:\"Espiar Conversa\"},/*#__PURE__*/React.createElement(VisibilityIcon,{onClick:e=>{e.stopPropagation();setOpenTicketMessageDialog(true);},fontSize:\"small\",style:{color:blue[700],cursor:\"pointer\",marginLeft:10,verticalAlign:\"middle\"}})))),secondary:/*#__PURE__*/React.createElement(\"span\",{className:classes.contactNameWrapper},/*#__PURE__*/React.createElement(Typography,{className:classes.contactLastMessage,noWrap:true,component:\"span\",variant:\"body2\",color:\"textSecondary\"},[\"composing\",\"recording\"].includes(ticket===null||ticket===void 0?void 0:ticket.presence)?/*#__PURE__*/React.createElement(\"span\",{className:classes.presence},presenceMessage[ticket.presence]):/*#__PURE__*/React.createElement(React.Fragment,null,ticket.lastMessage.includes('data:image/png;base64')?/*#__PURE__*/React.createElement(MarkdownWrapper,null,\" Localiza\\xE7\\xE3o\"):/*#__PURE__*/React.createElement(MarkdownWrapper,null,ticket.lastMessage.length>30?`${ticket.lastMessage.substring(0,30)}...`:ticket.lastMessage)),/*#__PURE__*/React.createElement(\"span\",{style:{marginTop:4},className:classes.secondaryContentSecond},(ticket===null||ticket===void 0?void 0:(_ticket$whatsapp=ticket.whatsapp)===null||_ticket$whatsapp===void 0?void 0:_ticket$whatsapp.name)?/*#__PURE__*/React.createElement(Badge,{className:classes.connectionTag},ticket===null||ticket===void 0?void 0:(_ticket$whatsapp2=ticket.whatsapp)===null||_ticket$whatsapp2===void 0?void 0:(_ticket$whatsapp2$nam=_ticket$whatsapp2.name)===null||_ticket$whatsapp2$nam===void 0?void 0:_ticket$whatsapp2$nam.toUpperCase()):/*#__PURE__*/React.createElement(\"br\",null),ticketUser?/*#__PURE__*/React.createElement(Badge,{style:{backgroundColor:\"#000000\"},className:classes.connectionTag},ticketUser):/*#__PURE__*/React.createElement(\"br\",null),((_ticket$queue5=ticket.queue)===null||_ticket$queue5===void 0?void 0:_ticket$queue5.name)&&/*#__PURE__*/React.createElement(Badge,{style:{backgroundColor:((_ticket$queue6=ticket.queue)===null||_ticket$queue6===void 0?void 0:_ticket$queue6.color)||\"#7c7c7c\"},className:classes.connectionTag},(_ticket$queue7=ticket.queue)===null||_ticket$queue7===void 0?void 0:(_ticket$queue7$name=_ticket$queue7.name)===null||_ticket$queue7$name===void 0?void 0:_ticket$queue7$name.toUpperCase()),ticket.chatbot&&/*#__PURE__*/React.createElement(Tooltip,{title:\"\\uD83E\\uDD16 Agente IA - Chatbot activo\"},/*#__PURE__*/React.createElement(AndroidIcon,{fontSize:\"small\",style:{color:blue[600],fontSize:'16px',marginLeft:'5px',marginTop:'2px',cursor:'pointer'}})),ticket.promptId&&/*#__PURE__*/React.createElement(Tooltip,{title:\"\\uD83E\\uDDE0 IA Inteligente - Prompt configurado\"},/*#__PURE__*/React.createElement(EmojiEmotionsIcon,{fontSize:\"small\",style:{color:green[600],fontSize:'16px',marginLeft:'5px',marginTop:'2px',cursor:'pointer'}})),ticket.useIntegration&&/*#__PURE__*/React.createElement(Tooltip,{title:\"\\uD83D\\uDD17 Integraci\\xF3n Externa - N8N/Dialogflow\"},/*#__PURE__*/React.createElement(SettingsIcon,{fontSize:\"small\",style:{color:orange[600],fontSize:'16px',marginLeft:'5px',marginTop:'2px',cursor:'pointer'}}))),/*#__PURE__*/React.createElement(\"span\",{style:{paddingTop:\"2px\"},className:classes.secondaryContentSecond},tag===null||tag===void 0?void 0:tag.map(tag=>{return/*#__PURE__*/React.createElement(ContactTag,{tag:tag,key:`ticket-contact-tag-${ticket.id}-${tag.id}`});}))),/*#__PURE__*/React.createElement(Badge,{className:classes.newMessagesCount,badgeContent:ticket.unreadMessages,classes:{badge:classes.badgeStyle}}))}),/*#__PURE__*/React.createElement(ListItemSecondaryAction,null,ticket.lastMessage&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Typography,{className:classes.lastMessageTime,component:\"span\",variant:\"body2\",color:\"textSecondary\"},isSameDay(parseISO(ticket.updatedAt),new Date())?/*#__PURE__*/React.createElement(React.Fragment,null,format(parseISO(ticket.updatedAt),\"HH:mm\")):/*#__PURE__*/React.createElement(React.Fragment,null,format(parseISO(ticket.updatedAt),\"dd/MM/yyyy\"))),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"span\",{className:classes.secondaryContentSecond},ticket.status===\"pending\"&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ButtonWithSpinner,{style:{backgroundColor:'green',color:'white',padding:'4px 8px',bottom:'25px',borderRadius:'8px',right:'8px',fontSize:'0.6rem',width:'80px',minWidth:'80px',height:'24px'},variant:\"contained\",className:classes.acceptButton,size:\"small\",loading:loading,onClick:e=>handleAcepptTicket(ticket.id)},i18n.t(\"ticketsList.buttons.accept\")),/*#__PURE__*/React.createElement(ButtonWithSpinner,{style:{backgroundColor:'red',color:'white',padding:'4px 8px',bottom:'0px',borderRadius:'8px',right:'8px',fontSize:'0.6rem',width:'80px',minWidth:'80px',height:'24px'},variant:\"contained\",className:classes.acceptButton,size:\"small\",loading:loading,onClick:e=>handleCloseTicket(ticket.id)},i18n.t(\"ticketsList.buttons.closed\"))),ticket.status===\"attending\"&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ButtonWithSpinner,{style:{backgroundColor:'blue',color:'white',padding:'4px 8px',bottom:'25px',borderRadius:'8px',right:'8px',fontSize:'0.6rem',width:'80px',minWidth:'80px',height:'24px'},variant:\"contained\",className:classes.acceptButton,size:\"small\",loading:loading,onClick:e=>handleOpenTransferModal()},i18n.t(\"ticketsList.buttons.transfer\")),/*#__PURE__*/React.createElement(ButtonWithSpinner,{style:{backgroundColor:'red',color:'white',padding:'4px 8px',bottom:'0px',borderRadius:'8px',right:'8px',fontSize:'0.6rem',width:'80px',minWidth:'80px',height:'24px'},variant:\"contained\",className:classes.acceptButton,size:\"small\",loading:loading,onClick:e=>handleCloseTicket(ticket.id)},i18n.t(\"ticketsList.buttons.closed\"))),ticket.status!==\"closed\"&&ticket.status!==\"pending\"&&ticket.status!==\"attending\"&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ButtonWithSpinner,{style:{backgroundColor:'blue',color:'white',padding:'4px 8px',bottom:'25px',borderRadius:'8px',right:'8px',fontSize:'0.6rem',width:'80px',minWidth:'80px',height:'24px'},variant:\"contained\",className:classes.acceptButton,size:\"small\",loading:loading,onClick:e=>handleOpenTransferModal()},i18n.t(\"ticketsList.buttons.transfer\")),/*#__PURE__*/React.createElement(ButtonWithSpinner,{style:{backgroundColor:'red',color:'white',padding:'4px 8px',bottom:'0px',borderRadius:'8px',right:'8px',fontSize:'0.6rem',width:'80px',minWidth:'80px',height:'24px'},variant:\"contained\",className:classes.acceptButton,size:\"small\",loading:loading,onClick:e=>handleCloseTicket(ticket.id)},i18n.t(\"ticketsList.buttons.closed\"))),ticket.status===\"closed\"&&/*#__PURE__*/React.createElement(ButtonWithSpinner,{style:{backgroundColor:'red',color:'white',padding:'4px 8px',bottom:'0px',borderRadius:'8px',right:'8px',fontSize:'0.6rem',width:'80px',minWidth:'80px',height:'24px'},variant:\"contained\",className:classes.acceptButton,size:\"small\",loading:loading,onClick:e=>handleReopenTicket(ticket.id)},i18n.t(\"ticketsList.buttons.reopen\"))))),/*#__PURE__*/React.createElement(Divider,{variant:\"inset\",component:\"li\"}));};export default TicketListItemCustom;","map":null,"metadata":{},"sourceType":"module"}