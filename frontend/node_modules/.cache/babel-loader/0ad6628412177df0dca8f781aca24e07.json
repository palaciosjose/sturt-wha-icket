{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\whaticket03\\\\waticketsaas\\\\frontend\\\\src\\\\components\\\\FormFields\\\\DatePickerField.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useField } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nexport default function DatePickerField(props) {\n  const [field, meta, helper] = useField(props);\n  const {\n    touched,\n    error\n  } = meta;\n  const {\n    setValue\n  } = helper;\n  const isError = touched && error && true;\n  const {\n    value\n  } = field;\n  const [selectedDate, setSelectedDate] = useState(null);\n  useEffect(() => {\n    if (value) {\n      try {\n        const date = new Date(value);\n        if (!isNaN(date.getTime())) {\n          setSelectedDate(date);\n        } else {\n          setSelectedDate(null);\n        }\n      } catch (error) {\n        setSelectedDate(null);\n      }\n    } else {\n      setSelectedDate(null);\n    }\n  }, [value]);\n  function _onChange(date) {\n    if (date && !isNaN(date.getTime())) {\n      setSelectedDate(date);\n      try {\n        const ISODateString = date.toISOString();\n        setValue(ISODateString);\n      } catch (error) {\n        setValue(null);\n      }\n    } else {\n      setSelectedDate(null);\n      setValue(null);\n    }\n  }\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, Object.assign({}, field, props, {\n    value: selectedDate,\n    onChange: _onChange,\n    error: isError,\n    invalidDateMessage: isError && error,\n    helperText: isError && error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","useEffect","useField","Grid","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","DatePickerField","props","field","meta","helper","touched","error","setValue","isError","value","selectedDate","setSelectedDate","date","Date","isNaN","getTime","_onChange","ISODateString","toISOString","createElement","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","utils","Object","assign","onChange","invalidDateMessage","helperText"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/components/FormFields/DatePickerField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useField } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nexport default function DatePickerField(props) {\n  const [field, meta, helper] = useField(props);\n  const { touched, error } = meta;\n  const { setValue } = helper;\n  const isError = touched && error && true;\n  const { value } = field;\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    if (value) {\n      try {\n        const date = new Date(value);\n        if (!isNaN(date.getTime())) {\n          setSelectedDate(date);\n        } else {\n          setSelectedDate(null);\n        }\n      } catch (error) {\n        setSelectedDate(null);\n      }\n    } else {\n      setSelectedDate(null);\n    }\n  }, [value]);\n\n  function _onChange(date) {\n    if (date && !isNaN(date.getTime())) {\n      setSelectedDate(date);\n      try {\n        const ISODateString = date.toISOString();\n        setValue(ISODateString);\n      } catch (error) {\n        setValue(null);\n      }\n    } else {\n      setSelectedDate(null);\n      setValue(null);\n    }\n  }\n\n  return (\n    <Grid container>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          {...field}\n          {...props}\n          value={selectedDate}\n          onChange={_onChange}\n          error={isError}\n          invalidDateMessage={isError && error}\n          helperText={isError && error}\n        />\n      </MuiPickersUtilsProvider>\n    </Grid>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,QAAQ;AACjC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,SACEC,uBAAuB,EACvBC,kBAAkB,QACb,sBAAsB;AAC7B,OAAOC,YAAY,MAAM,mBAAmB;AAE5C,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAC7C,MAAM,CAACC,KAAK,EAAEC,IAAI,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAACM,KAAK,CAAC;EAC7C,MAAM;IAAEI,OAAO;IAAEC;EAAM,CAAC,GAAGH,IAAI;EAC/B,MAAM;IAAEI;EAAS,CAAC,GAAGH,MAAM;EAC3B,MAAMI,OAAO,GAAGH,OAAO,IAAIC,KAAK,IAAI,IAAI;EACxC,MAAM;IAAEG;EAAM,CAAC,GAAGP,KAAK;EACvB,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAACJ,KAAK,CAAC;QAC5B,IAAI,CAACK,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;UAC1BJ,eAAe,CAACC,IAAI,CAAC;QACvB,CAAC,MAAM;UACLD,eAAe,CAAC,IAAI,CAAC;QACvB;MACF,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdK,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC,MAAM;MACLA,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,SAASO,SAASA,CAACJ,IAAI,EAAE;IACvB,IAAIA,IAAI,IAAI,CAACE,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;MAClCJ,eAAe,CAACC,IAAI,CAAC;MACrB,IAAI;QACF,MAAMK,aAAa,GAAGL,IAAI,CAACM,WAAW,CAAC,CAAC;QACxCX,QAAQ,CAACU,aAAa,CAAC;MACzB,CAAC,CAAC,OAAOX,KAAK,EAAE;QACdC,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC,MAAM;MACLI,eAAe,CAAC,IAAI,CAAC;MACrBJ,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF;EAEA,oBACEf,KAAA,CAAA2B,aAAA,CAACvB,IAAI;IAACwB,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACblC,KAAA,CAAA2B,aAAA,CAACtB,uBAAuB;IAAC8B,KAAK,EAAE5B,YAAa;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3ClC,KAAA,CAAA2B,aAAA,CAACrB,kBAAkB,EAAA8B,MAAA,CAAAC,MAAA,KACb3B,KAAK,EACLD,KAAK;IACTQ,KAAK,EAAEC,YAAa;IACpBoB,QAAQ,EAAEd,SAAU;IACpBV,KAAK,EAAEE,OAAQ;IACfuB,kBAAkB,EAAEvB,OAAO,IAAIF,KAAM;IACrC0B,UAAU,EAAExB,OAAO,IAAIF,KAAM;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAC9B,CACsB,CACrB,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module"}