{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Grid from\"@material-ui/core/Grid\";import MenuItem from\"@material-ui/core/MenuItem\";import FormControl from\"@material-ui/core/FormControl\";import InputLabel from\"@material-ui/core/InputLabel\";import Select from\"@material-ui/core/Select\";import FormHelperText from\"@material-ui/core/FormHelperText\";import TextField from\"@material-ui/core/TextField\";import useSettings from\"../../hooks/useSettings\";import{toast}from'react-toastify';import{makeStyles}from\"@material-ui/core/styles\";import{grey,blue}from\"@material-ui/core/colors\";import{Tabs,Tab}from\"@material-ui/core\";import OnlyForSuperUser from'../../components/OnlyForSuperUser';import useAuth from'../../hooks/useAuth.js';import{i18n}from'../../translate/i18n.js';//import 'react-toastify/dist/ReactToastify.css';\nconst useStyles=makeStyles(theme=>({container:{paddingTop:theme.spacing(4),paddingBottom:theme.spacing(4)},fixedHeightPaper:{padding:theme.spacing(2),display:\"flex\",overflow:\"auto\",flexDirection:\"column\",height:240},tab:{backgroundColor:theme.palette.options,//DARK MODE PLW DESIGN//\nborderRadius:4,width:\"100%\",\"& .MuiTab-wrapper\":{color:theme.palette.fontecor},//DARK MODE PLW DESIGN//\n\"& .MuiTabs-flexContainer\":{justifyContent:\"center\"}},paper:{padding:theme.spacing(2),display:\"flex\",alignItems:\"center\",marginBottom:12,width:\"100%\"},cardAvatar:{fontSize:\"55px\",color:grey[500],backgroundColor:\"#ffffff\",width:theme.spacing(7),height:theme.spacing(7)},cardTitle:{fontSize:\"18px\",color:blue[700]},cardSubtitle:{color:grey[600],fontSize:\"14px\"},alignRight:{textAlign:\"right\"},fullWidth:{width:\"100%\"},selectContainer:{width:\"100%\",textAlign:\"left\"}}));export default function Options(props){const{settings,scheduleTypeChanged}=props;const classes=useStyles();const[currentUser,setCurrentUser]=useState({});const{getCurrentUserInfo}=useAuth();useEffect(()=>{async function findData(){try{const user=await getCurrentUserInfo();setCurrentUser(user);}catch(e){toast.error(e);}}findData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const[userRating,setUserRating]=useState(\"disabled\");const[scheduleType,setScheduleType]=useState(\"disabled\");const[callType,setCallType]=useState(\"enabled\");const[chatbotType,setChatbotType]=useState(\"\");const[CheckMsgIsGroup,setCheckMsgIsGroupType]=useState(\"enabled\");const[loadingUserRating,setLoadingUserRating]=useState(false);const[loadingScheduleType,setLoadingScheduleType]=useState(false);const[loadingCallType,setLoadingCallType]=useState(false);const[loadingChatbotType,setLoadingChatbotType]=useState(false);const[loadingCheckMsgIsGroup,setLoadingCheckMsgIsGroup]=useState(false);// Configuración de zona horaria\nconst[timezoneType,setTimezoneType]=useState(\"America/Lima\");const[loadingTimezoneType,setLoadingTimezoneType]=useState(false);// recursos a mais...\nconst[trial,settrial]=useState('3');const[loadingtrial,setLoadingtrial]=useState(false);const[viewregister,setviewregister]=useState('disabled');const[loadingviewregister,setLoadingviewregister]=useState(false);const[allowregister,setallowregister]=useState('disabled');const[loadingallowregister,setLoadingallowregister]=useState(false);const[SendGreetingAccepted,setSendGreetingAccepted]=useState(\"disabled\");const[loadingSendGreetingAccepted,setLoadingSendGreetingAccepted]=useState(false);const[SettingsTransfTicket,setSettingsTransfTicket]=useState(\"disabled\");const[loadingSettingsTransfTicket,setLoadingSettingsTransfTicket]=useState(false);const[sendGreetingMessageOneQueues,setSendGreetingMessageOneQueues]=useState(\"disabled\");const[loadingSendGreetingMessageOneQueues,setLoadingSendGreetingMessageOneQueues]=useState(false);// HUB NOTIFICAME TOKEN\nconst[hubNotificaMeToken,setHubNotificaMeToken]=useState(\"\");const[loadingHubNotificaMeToken,setLoadingHubNotificaMeToken]=useState(false);const{update}=useSettings();useEffect(()=>{if(Array.isArray(settings)&&settings.length){const userRating=settings.find(s=>s.key===\"userRating\");if(userRating){setUserRating(userRating.value);}const scheduleType=settings.find(s=>s.key===\"scheduleType\");if(scheduleType){setScheduleType(scheduleType.value);}const callType=settings.find(s=>s.key===\"call\");if(callType){setCallType(callType.value);}const CheckMsgIsGroup=settings.find(s=>s.key===\"CheckMsgIsGroup\");if(CheckMsgIsGroup){setCheckMsgIsGroupType(CheckMsgIsGroup.value);}const allowregister=settings.find(s=>s.key==='allowregister');if(allowregister){setallowregister(allowregister.value);}const SendGreetingAccepted=settings.find(s=>s.key===\"sendGreetingAccepted\");if(SendGreetingAccepted){setSendGreetingAccepted(SendGreetingAccepted.value);}const SettingsTransfTicket=settings.find(s=>s.key===\"sendMsgTransfTicket\");if(SettingsTransfTicket){setSettingsTransfTicket(SettingsTransfTicket.value);}const viewregister=settings.find(s=>s.key==='viewregister');if(viewregister){setviewregister(viewregister.value);}const sendGreetingMessageOneQueues=settings.find(s=>s.key===\"sendGreetingMessageOneQueues\");if(sendGreetingMessageOneQueues){setSendGreetingMessageOneQueues(sendGreetingMessageOneQueues.value);}// HUB NOTIFICAME: leer valor actual del token\nconst hubToken=settings.find(s=>s.key===\"hubToken\");if(hubToken){setHubNotificaMeToken(hubToken.value);}const chatbotType=settings.find(s=>s.key===\"chatBotType\");if(chatbotType){setChatbotType(chatbotType.value);}const trial=settings.find(s=>s.key==='trial');if(trial){settrial(trial.value);}const timezoneType=settings.find(s=>s.key===\"timezone\");if(timezoneType){setTimezoneType(timezoneType.value);// Guardar en localStorage para uso inmediato\nlocalStorage.setItem(\"timezone\",timezoneType.value);}else{// Valor por defecto si no existe la configuración\nsetTimezoneType(\"America/Lima\");localStorage.setItem(\"timezone\",\"America/Lima\");}}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[settings]);async function handleChangeUserRating(value){setUserRating(value);setLoadingUserRating(true);await update({key:\"userRating\",value});toast.success(i18n.t(\"settings.success\"));setLoadingUserRating(false);}async function handleallowregister(value){setallowregister(value);setLoadingallowregister(true);await update({key:'allowregister',value});toast.success(i18n.t(\"settings.success\"));setLoadingallowregister(false);}async function handleSendGreetingMessageOneQueues(value){setSendGreetingMessageOneQueues(value);setLoadingSendGreetingMessageOneQueues(true);await update({key:\"sendGreetingMessageOneQueues\",value});toast.success(i18n.t(\"settings.success\"));setLoadingSendGreetingMessageOneQueues(false);}async function handleviewregister(value){setviewregister(value);setLoadingviewregister(true);await update({key:'viewregister',value});toast.success(i18n.t(\"settings.success\"));setLoadingviewregister(false);}async function handletrial(value){settrial(value);setLoadingtrial(true);await update({key:'trial',value});toast.success(i18n.t(\"settings.success\"));setLoadingtrial(false);}async function handleScheduleType(value){setScheduleType(value);setLoadingScheduleType(true);await update({key:\"scheduleType\",value});toast.success(i18n.t(\"settings.success\"));setLoadingScheduleType(false);scheduleTypeChanged(value);}async function handleCallType(value){setCallType(value);setLoadingCallType(true);await update({key:\"call\",value});toast.success(i18n.t(\"settings.success\"));setLoadingCallType(false);}async function handleChatbotType(value){setChatbotType(value);setLoadingChatbotType(true);await update({key:\"chatBotType\",value});toast.success(i18n.t(\"settings.success\"));setLoadingChatbotType(false);}async function handleGroupType(value){setCheckMsgIsGroupType(value);setLoadingCheckMsgIsGroup(true);await update({key:\"CheckMsgIsGroup\",value});toast.success(i18n.t(\"settings.success\"));setLoadingCheckMsgIsGroup(false);}async function handleSendGreetingAccepted(value){setSendGreetingAccepted(value);setLoadingSendGreetingAccepted(true);await update({key:\"sendGreetingAccepted\",value});toast.success(i18n.t(\"settings.success\"));setLoadingSendGreetingAccepted(false);}async function handleSettingsTransfTicket(value){setSettingsTransfTicket(value);setLoadingSettingsTransfTicket(true);await update({key:\"sendMsgTransfTicket\",value});toast.success(i18n.t(\"settings.success\"));setLoadingSettingsTransfTicket(false);}async function handleChangeTimezone(value){setTimezoneType(value);setLoadingTimezoneType(true);await update({key:\"timezone\",value});// Guardar en localStorage para uso inmediato en el frontend\nlocalStorage.setItem(\"timezone\",value);toast.success(i18n.t(\"settings.success\"));setLoadingTimezoneType(false);}async function handleChangeHubNotificaMe(value){setHubNotificaMeToken(value);if(value.length===36){// ✅ Solo si tiene 36 caracteres exactos\nsetLoadingHubNotificaMeToken(true);await update({key:\"hubToken\",value});toast.success(i18n.t(\"settings.success\"));setLoadingHubNotificaMeToken(false);}else{// Opcional: puedes mostrar un aviso si quieres\n// toast.info(\"Debe tener exactamente 36 caracteres para guardar.\");\n}}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{spacing:3,container:true},/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"ratings-label\"},i18n.t(\"settings.options.userRating\")),/*#__PURE__*/React.createElement(Select,{labelId:\"ratings-label\",value:userRating,onChange:async e=>{handleChangeUserRating(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"disabled\"},i18n.t(\"settings.states.disabled\")),/*#__PURE__*/React.createElement(MenuItem,{value:\"enabled\"},i18n.t(\"settings.states.enabled\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingUserRating&&i18n.t(\"settings.states.updating\")))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"schedule-type-label\"},i18n.t(\"settings.options.scheduleType\")),/*#__PURE__*/React.createElement(Select,{labelId:\"schedule-type-label\",value:scheduleType,onChange:async e=>{handleScheduleType(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"disabled\"},i18n.t(\"settings.states.disabled\")),/*#__PURE__*/React.createElement(MenuItem,{value:\"queue\"},i18n.t(\"settings.states.queue\")),/*#__PURE__*/React.createElement(MenuItem,{value:\"company\"},i18n.t(\"settings.states.company\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingScheduleType&&i18n.t(\"settings.states.updating\")))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"group-type-label\"},i18n.t(\"settings.options.ignoreGroupMessages\")),/*#__PURE__*/React.createElement(Select,{labelId:\"group-type-label\",value:CheckMsgIsGroup,onChange:async e=>{handleGroupType(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"disabled\"},i18n.t(\"settings.states.deactivated\")),/*#__PURE__*/React.createElement(MenuItem,{value:\"enabled\"},i18n.t(\"settings.states.activated\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingCheckMsgIsGroup&&i18n.t(\"settings.states.updating\")))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"call-type-label\"},i18n.t(\"settings.options.acceptCall\")),/*#__PURE__*/React.createElement(Select,{labelId:\"call-type-label\",value:callType,onChange:async e=>{handleCallType(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"disabled\"},i18n.t(\"settings.states.notAccept\")),/*#__PURE__*/React.createElement(MenuItem,{value:\"enabled\"},i18n.t(\"settings.states.accept\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingCallType&&i18n.t(\"settings.states.updating\")))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"chatbot-type-label\"},i18n.t(\"settings.options.chatbotType\")),/*#__PURE__*/React.createElement(Select,{labelId:\"chatbot-type-label\",value:chatbotType,onChange:async e=>{handleChatbotType(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"text\"},i18n.t(\"settings.states.text\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingChatbotType&&i18n.t(\"settings.states.updating\")))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"sendGreetingAccepted-label\"},i18n.t(\"settings.options.sendGreetingAccepted\")),/*#__PURE__*/React.createElement(Select,{labelId:\"sendGreetingAccepted-label\",value:SendGreetingAccepted,onChange:async e=>{handleSendGreetingAccepted(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"disabled\"},i18n.t(\"settings.states.disabled\")),/*#__PURE__*/React.createElement(MenuItem,{value:\"enabled\"},i18n.t(\"settings.states.enabled\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingSendGreetingAccepted&&i18n.t(\"settings.states.updating\")))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"sendMsgTransfTicket-label\"},i18n.t(\"settings.options.sendTransferMessage\")),/*#__PURE__*/React.createElement(Select,{labelId:\"sendMsgTransfTicket-label\",value:SettingsTransfTicket,onChange:async e=>{handleSettingsTransfTicket(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"disabled\"},i18n.t(\"settings.states.disabled\")),/*#__PURE__*/React.createElement(MenuItem,{value:\"enabled\"},i18n.t(\"settings.states.enabled\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingSettingsTransfTicket&&i18n.t(\"settings.states.updating\")))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"sendGreetingMessageOneQueues-label\"},i18n.t(\"settings.options.sendGreetingOneQueue\")),/*#__PURE__*/React.createElement(Select,{labelId:\"sendGreetingMessageOneQueues-label\",value:sendGreetingMessageOneQueues,onChange:async e=>{handleSendGreetingMessageOneQueues(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"disabled\"},i18n.t(\"settings.states.disabled\")),/*#__PURE__*/React.createElement(MenuItem,{value:\"enabled\"},i18n.t(\"settings.states.enabled\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingSendGreetingMessageOneQueues&&i18n.t(\"settings.states.updating\"))))),/*#__PURE__*/React.createElement(OnlyForSuperUser,{user:currentUser,yes:()=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{spacing:3,container:true},/*#__PURE__*/React.createElement(Tabs,{value:0,indicatorColor:\"primary\",textColor:\"primary\",scrollButtons:\"on\",variant:\"scrollable\",className:classes.tab,style:{marginBottom:20,marginTop:20}},/*#__PURE__*/React.createElement(Tab,{label:i18n.t(\"settings.options.globalSettings\")}))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"allowregister-label\"},i18n.t(\"settings.options.registrationAllowed\")),/*#__PURE__*/React.createElement(Select,{labelId:\"allowregister-label\",value:allowregister,onChange:async e=>{handleallowregister(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:'disabled'},i18n.t(\"settings.states.no\")),/*#__PURE__*/React.createElement(MenuItem,{value:'enabled'},i18n.t(\"settings.states.yes\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingallowregister&&i18n.t(\"settings.states.updating\")))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"viewregister-label\"},i18n.t(\"settings.options.registrationVisible\")),/*#__PURE__*/React.createElement(Select,{labelId:\"viewregister-label\",value:viewregister,onChange:async e=>{handleviewregister(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:'disabled'},i18n.t(\"settings.states.no\")),/*#__PURE__*/React.createElement(MenuItem,{value:'enabled'},i18n.t(\"settings.states.yes\"))),/*#__PURE__*/React.createElement(FormHelperText,null,loadingviewregister&&i18n.t(\"settings.states.updating\")))),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"trial-label\"},i18n.t(\"settings.options.trialTime\")),/*#__PURE__*/React.createElement(Select,{labelId:\"trial-label\",value:trial,onChange:async e=>{handletrial(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:'1'},\"1\"),/*#__PURE__*/React.createElement(MenuItem,{value:'2'},\"2\"),/*#__PURE__*/React.createElement(MenuItem,{value:'3'},\"3\"),/*#__PURE__*/React.createElement(MenuItem,{value:'4'},\"4\"),/*#__PURE__*/React.createElement(MenuItem,{value:'5'},\"5\"),/*#__PURE__*/React.createElement(MenuItem,{value:'6'},\"6\"),/*#__PURE__*/React.createElement(MenuItem,{value:'7'},\"7\")),/*#__PURE__*/React.createElement(FormHelperText,null,loadingtrial&&'Atualizando...'))))}),/*#__PURE__*/React.createElement(Grid,{spacing:3,container:true,style:{marginBottom:10}},/*#__PURE__*/React.createElement(Tabs,{value:0,indicatorColor:\"primary\",textColor:\"primary\",scrollButtons:\"on\",variant:\"scrollable\",className:classes.tab},/*#__PURE__*/React.createElement(Tab,{label:\"ZONA HORARIA\"})),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(InputLabel,{id:\"timezone-label\"},\"Zona Horaria para Campa\\xF1as\"),/*#__PURE__*/React.createElement(Select,{labelId:\"timezone-label\",id:\"timezone\",name:\"timezone\",value:timezoneType,onChange:async e=>{handleChangeTimezone(e.target.value);},variant:\"outlined\"},/*#__PURE__*/React.createElement(MenuItem,{value:\"America/Lima\"},\"Per\\xFA (America/Lima)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"America/Sao_Paulo\"},\"Brasil (America/Sao_Paulo)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"America/Argentina/Buenos_Aires\"},\"Argentina (America/Argentina/Buenos_Aires)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"America/Santiago\"},\"Chile (America/Santiago)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"America/Bogota\"},\"Colombia (America/Bogota)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"America/Mexico_City\"},\"M\\xE9xico (America/Mexico_City)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"America/New_York\"},\"Estados Unidos - Este (America/New_York)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"America/Los_Angeles\"},\"Estados Unidos - Oeste (America/Los_Angeles)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"Europe/Madrid\"},\"Espa\\xF1a (Europe/Madrid)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"Europe/London\"},\"Reino Unido (Europe/London)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"Asia/Tokyo\"},\"Jap\\xF3n (Asia/Tokyo)\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"UTC\"},\"UTC (Tiempo Universal)\")),/*#__PURE__*/React.createElement(FormHelperText,null,loadingTimezoneType?\"Actualizando...\":\"Selecciona tu zona horaria para campañas masivas\")))),/*#__PURE__*/React.createElement(Grid,{spacing:3,container:true,style:{marginBottom:10}},/*#__PURE__*/React.createElement(Tabs,{value:0,indicatorColor:\"primary\",textColor:\"primary\",scrollButtons:\"on\",variant:\"scrollable\",className:classes.tab},/*#__PURE__*/React.createElement(Tab,{label:\"HUB NOTIFICAME\"})),/*#__PURE__*/React.createElement(Grid,{xs:12,sm:12,md:12,item:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.selectContainer},/*#__PURE__*/React.createElement(TextField,{id:\"HubNotificaMe\",name:\"HubNotificaMe\",margin:\"dense\",label:\"Token Account\",variant:\"outlined\",value:hubNotificaMeToken,onChange:async e=>{handleChangeHubNotificaMe(e.target.value);}}),/*#__PURE__*/React.createElement(FormHelperText,null,loadingHubNotificaMeToken&&\"Actualizando...\")))));}","map":null,"metadata":{},"sourceType":"module"}