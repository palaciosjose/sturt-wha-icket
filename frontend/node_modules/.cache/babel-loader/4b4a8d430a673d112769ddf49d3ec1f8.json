{"ast":null,"code":"import { useRef, useEffect, useCallback } from 'react';\n\n/**\r\n * Hook personalizado para manejar el foco en modales\r\n * Evita problemas de aria-hidden y asegura accesibilidad correcta\r\n */\nconst useModalFocus = open => {\n  const modalRef = useRef(null);\n  const previousActiveElement = useRef(null);\n\n  // Guardar el elemento activo antes de abrir el modal\n  useEffect(() => {\n    if (open) {\n      previousActiveElement.current = document.activeElement;\n    }\n  }, [open]);\n\n  // Función para liberar completamente el foco\n  const releaseFocus = useCallback(() => {\n    // 1. Liberar foco del modal si existe\n    if (modalRef.current) {\n      const activeElement = modalRef.current.querySelector(':focus');\n      if (activeElement) {\n        activeElement.blur();\n      }\n    }\n\n    // 2. Liberar cualquier foco activo en el documento\n    if (document.activeElement && document.activeElement.blur) {\n      document.activeElement.blur();\n    }\n\n    // 3. Forzar la liberación del foco del body\n    document.body.focus();\n    document.body.blur();\n  }, []);\n\n  // Restaurar el foco al cerrar el modal\n  const handleClose = useCallback(() => {\n    // Liberar el foco inmediatamente\n    releaseFocus();\n\n    // Pequeño delay para asegurar que el foco se libere completamente\n    setTimeout(() => {\n      // Restaurar el foco al elemento anterior si existe y es válido\n      if (previousActiveElement.current && previousActiveElement.current.focus && document.contains(previousActiveElement.current) && !previousActiveElement.current.hasAttribute('aria-hidden')) {\n        previousActiveElement.current.focus();\n      } else {\n        // Si no hay elemento anterior válido, liberar el foco completamente\n        releaseFocus();\n      }\n    }, 50);\n  }, [releaseFocus]);\n\n  // Manejar el evento onExited del Dialog\n  const handleExited = useCallback(() => {\n    // Asegurar que el foco se libere completamente al cerrar\n    releaseFocus();\n\n    // Limpiar la referencia del elemento anterior\n    previousActiveElement.current = null;\n  }, [releaseFocus]);\n\n  // Función para manejar el cierre con prevención de aria-hidden\n  const handleCloseWithFocusFix = useCallback(event => {\n    // Prevenir que el botón mantenga el foco\n    if (event && event.target) {\n      event.target.blur();\n    }\n\n    // Liberar foco inmediatamente\n    releaseFocus();\n\n    // Llamar al handleClose después de un pequeño delay\n    setTimeout(() => {\n      handleClose();\n    }, 0);\n  }, [handleClose, releaseFocus]);\n  return {\n    modalRef,\n    handleClose: handleCloseWithFocusFix,\n    handleExited\n  };\n};\nexport default useModalFocus;","map":{"version":3,"names":["useRef","useEffect","useCallback","useModalFocus","open","modalRef","previousActiveElement","current","document","activeElement","releaseFocus","querySelector","blur","body","focus","handleClose","setTimeout","contains","hasAttribute","handleExited","handleCloseWithFocusFix","event","target"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/hooks/useModalFocus.js"],"sourcesContent":["import { useRef, useEffect, useCallback } from 'react';\r\n\r\n/**\r\n * Hook personalizado para manejar el foco en modales\r\n * Evita problemas de aria-hidden y asegura accesibilidad correcta\r\n */\r\nconst useModalFocus = (open) => {\r\n  const modalRef = useRef(null);\r\n  const previousActiveElement = useRef(null);\r\n\r\n  // Guardar el elemento activo antes de abrir el modal\r\n  useEffect(() => {\r\n    if (open) {\r\n      previousActiveElement.current = document.activeElement;\r\n    }\r\n  }, [open]);\r\n\r\n  // Función para liberar completamente el foco\r\n  const releaseFocus = useCallback(() => {\r\n    // 1. Liberar foco del modal si existe\r\n    if (modalRef.current) {\r\n      const activeElement = modalRef.current.querySelector(':focus');\r\n      if (activeElement) {\r\n        activeElement.blur();\r\n      }\r\n    }\r\n\r\n    // 2. Liberar cualquier foco activo en el documento\r\n    if (document.activeElement && document.activeElement.blur) {\r\n      document.activeElement.blur();\r\n    }\r\n\r\n    // 3. Forzar la liberación del foco del body\r\n    document.body.focus();\r\n    document.body.blur();\r\n  }, []);\r\n\r\n  // Restaurar el foco al cerrar el modal\r\n  const handleClose = useCallback(() => {\r\n    // Liberar el foco inmediatamente\r\n    releaseFocus();\r\n\r\n    // Pequeño delay para asegurar que el foco se libere completamente\r\n    setTimeout(() => {\r\n      // Restaurar el foco al elemento anterior si existe y es válido\r\n      if (previousActiveElement.current && \r\n          previousActiveElement.current.focus && \r\n          document.contains(previousActiveElement.current) &&\r\n          !previousActiveElement.current.hasAttribute('aria-hidden')) {\r\n        previousActiveElement.current.focus();\r\n      } else {\r\n        // Si no hay elemento anterior válido, liberar el foco completamente\r\n        releaseFocus();\r\n      }\r\n    }, 50);\r\n  }, [releaseFocus]);\r\n\r\n  // Manejar el evento onExited del Dialog\r\n  const handleExited = useCallback(() => {\r\n    // Asegurar que el foco se libere completamente al cerrar\r\n    releaseFocus();\r\n    \r\n    // Limpiar la referencia del elemento anterior\r\n    previousActiveElement.current = null;\r\n  }, [releaseFocus]);\r\n\r\n  // Función para manejar el cierre con prevención de aria-hidden\r\n  const handleCloseWithFocusFix = useCallback((event) => {\r\n    // Prevenir que el botón mantenga el foco\r\n    if (event && event.target) {\r\n      event.target.blur();\r\n    }\r\n    \r\n    // Liberar foco inmediatamente\r\n    releaseFocus();\r\n    \r\n    // Llamar al handleClose después de un pequeño delay\r\n    setTimeout(() => {\r\n      handleClose();\r\n    }, 0);\r\n  }, [handleClose, releaseFocus]);\r\n\r\n  return {\r\n    modalRef,\r\n    handleClose: handleCloseWithFocusFix,\r\n    handleExited\r\n  };\r\n};\r\n\r\nexport default useModalFocus; "],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;;AAEtD;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC9B,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMM,qBAAqB,GAAGN,MAAM,CAAC,IAAI,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd,IAAIG,IAAI,EAAE;MACRE,qBAAqB,CAACC,OAAO,GAAGC,QAAQ,CAACC,aAAa;IACxD;EACF,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMM,YAAY,GAAGR,WAAW,CAAC,MAAM;IACrC;IACA,IAAIG,QAAQ,CAACE,OAAO,EAAE;MACpB,MAAME,aAAa,GAAGJ,QAAQ,CAACE,OAAO,CAACI,aAAa,CAAC,QAAQ,CAAC;MAC9D,IAAIF,aAAa,EAAE;QACjBA,aAAa,CAACG,IAAI,CAAC,CAAC;MACtB;IACF;;IAEA;IACA,IAAIJ,QAAQ,CAACC,aAAa,IAAID,QAAQ,CAACC,aAAa,CAACG,IAAI,EAAE;MACzDJ,QAAQ,CAACC,aAAa,CAACG,IAAI,CAAC,CAAC;IAC/B;;IAEA;IACAJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC,CAAC;IACrBN,QAAQ,CAACK,IAAI,CAACD,IAAI,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,WAAW,GAAGb,WAAW,CAAC,MAAM;IACpC;IACAQ,YAAY,CAAC,CAAC;;IAEd;IACAM,UAAU,CAAC,MAAM;MACf;MACA,IAAIV,qBAAqB,CAACC,OAAO,IAC7BD,qBAAqB,CAACC,OAAO,CAACO,KAAK,IACnCN,QAAQ,CAACS,QAAQ,CAACX,qBAAqB,CAACC,OAAO,CAAC,IAChD,CAACD,qBAAqB,CAACC,OAAO,CAACW,YAAY,CAAC,aAAa,CAAC,EAAE;QAC9DZ,qBAAqB,CAACC,OAAO,CAACO,KAAK,CAAC,CAAC;MACvC,CAAC,MAAM;QACL;QACAJ,YAAY,CAAC,CAAC;MAChB;IACF,CAAC,EAAE,EAAE,CAAC;EACR,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMS,YAAY,GAAGjB,WAAW,CAAC,MAAM;IACrC;IACAQ,YAAY,CAAC,CAAC;;IAEd;IACAJ,qBAAqB,CAACC,OAAO,GAAG,IAAI;EACtC,CAAC,EAAE,CAACG,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMU,uBAAuB,GAAGlB,WAAW,CAAEmB,KAAK,IAAK;IACrD;IACA,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,EAAE;MACzBD,KAAK,CAACC,MAAM,CAACV,IAAI,CAAC,CAAC;IACrB;;IAEA;IACAF,YAAY,CAAC,CAAC;;IAEd;IACAM,UAAU,CAAC,MAAM;MACfD,WAAW,CAAC,CAAC;IACf,CAAC,EAAE,CAAC,CAAC;EACP,CAAC,EAAE,CAACA,WAAW,EAAEL,YAAY,CAAC,CAAC;EAE/B,OAAO;IACLL,QAAQ;IACRU,WAAW,EAAEK,uBAAuB;IACpCD;EACF,CAAC;AACH,CAAC;AAED,eAAehB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}