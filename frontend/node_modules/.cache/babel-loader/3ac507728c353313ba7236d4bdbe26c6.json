{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\whaticket03\\\\waticketsaas\\\\frontend\\\\src\\\\pages\\\\Contacts\\\\index.js\";\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactModal from \"../../components/ContactModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal/\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { i18n } from \"../../translate/i18n\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../../components/Can\";\nimport NewTicketModal from \"../../components/NewTicketModal\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { generateColor } from \"../../helpers/colorGenerator\";\nimport { getInitials } from \"../../helpers/getInitials\";\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CONTACTS\") {\n    const contacts = action.payload;\n    const newContacts = [];\n    contacts.forEach(contact => {\n      const contactIndex = state.findIndex(c => c.id === contact.id);\n      if (contactIndex !== -1) {\n        state[contactIndex] = contact;\n      } else {\n        newContacts.push(contact);\n      }\n    });\n    return [...state, ...newContacts];\n  }\n  if (action.type === \"UPDATE_CONTACTS\") {\n    const contact = action.payload;\n    const contactIndex = state.findIndex(c => c.id === contact.id);\n    if (contactIndex !== -1) {\n      state[contactIndex] = contact;\n      return [...state];\n    } else {\n      return [contact, ...state];\n    }\n  }\n  if (action.type === \"DELETE_CONTACT\") {\n    const contactId = action.payload;\n    const contactIndex = state.findIndex(c => c.id === contactId);\n    if (contactIndex !== -1) {\n      state.splice(contactIndex, 1);\n    }\n    return [...state];\n  }\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles\n  }\n}));\nconst Contacts = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [contacts, dispatch] = useReducer(reducer, []);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n  const [newTicketModalOpen, setNewTicketModalOpen] = useState(false);\n  const [contactTicket, setContactTicket] = useState({});\n  const [deletingContact, setDeletingContact] = useState(null);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const fileUploadRef = useRef(null);\n\n  // Estados para selección múltiple\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [actionType, setActionType] = useState(\"\"); // \"delete\", \"export\" o \"import\"\n  const [contactCount, setContactCount] = useState(0);\n  const socketManager = useContext(SocketContext);\n  useEffect(() => {\n    dispatch({\n      type: \"RESET\"\n    });\n    setPageNumber(1);\n  }, [searchParam]);\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const {\n            data\n          } = await api.get(\"/contacts/\", {\n            params: {\n              searchParam,\n              pageNumber\n            }\n          });\n          dispatch({\n            type: \"LOAD_CONTACTS\",\n            payload: data.contacts\n          });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber]);\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketManager.getSocket(companyId);\n    socket.on(`company-${companyId}-contact`, data => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({\n          type: \"UPDATE_CONTACTS\",\n          payload: data.contact\n        });\n      }\n      if (data.action === \"delete\") {\n        dispatch({\n          type: \"DELETE_CONTACT\",\n          payload: +data.contactId\n        });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socketManager]);\n  const handleSearch = event => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n  const handleOpenContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(true);\n  };\n  const handleCloseContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(false);\n  };\n\n  // const handleSaveTicket = async contactId => {\n  // \tif (!contactId) return;\n  // \tsetLoading(true);\n  // \ttry {\n  // \t\tconst { data: ticket } = await api.post(\"/tickets\", {\n  // \t\t\tcontactId: contactId,\n  // \t\t\tuserId: user?.id,\n  // \t\t\tstatus: \"open\",\n  // \t\t});\n  // \t\thistory.push(`/tickets/${ticket.id}`);\n  // \t} catch (err) {\n  // \t\ttoastError(err);\n  // \t}\n  // \tsetLoading(false);\n  // };\n\n  const handleCloseOrOpenTicket = ticket => {\n    setNewTicketModalOpen(false);\n    if (ticket !== undefined && ticket.uuid !== undefined) {\n      history.push(`/tickets/${ticket.uuid}`);\n    }\n  };\n  const hadleEditContact = contactId => {\n    setSelectedContactId(contactId);\n    setContactModalOpen(true);\n  };\n  const handleDeleteContact = async contactId => {\n    setLoading(true);\n    try {\n      await api.delete(`/contacts/${contactId}`);\n      toast.success(i18n.t(\"contacts.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setLoading(false);\n    setConfirmOpen(false);\n    setDeletingContact(null);\n  };\n\n  // Funciones para selección múltiple\n  const handleSelectContact = contactId => {\n    setSelectedContacts(prev => {\n      if (prev.includes(contactId)) {\n        return prev.filter(id => id !== contactId);\n      } else {\n        return [...prev, contactId];\n      }\n    });\n  };\n  const handleSelectAll = () => {\n    if (selectAll) {\n      setSelectedContacts([]);\n      setSelectAll(false);\n    } else {\n      setSelectedContacts(contacts.map(contact => contact.id));\n      setSelectAll(true);\n    }\n  };\n  const handleDeleteSelectedContacts = async () => {\n    if (selectedContacts.length === 0) return;\n    setLoading(true);\n    try {\n      await api.delete(\"/contacts/\", {\n        data: {\n          contactIds: selectedContacts\n        }\n      });\n      toast.success(i18n.t(\"contacts.toasts.deletedAll\"));\n      setSelectedContacts([]);\n      setSelectAll(false);\n    } catch (err) {\n      toastError(err);\n    }\n    setLoading(false);\n    setConfirmOpen(false);\n  };\n  const handleExportSelectedContacts = () => {\n    if (selectedContacts.length === 0) return;\n\n    // Filtrar solo los contactos seleccionados\n    const contactsToExport = contacts.filter(contact => selectedContacts.includes(contact.id));\n\n    // Mostrar mensaje de procesamiento para grandes cantidades\n    if (selectedContacts.length > 50) {\n      toast.info(i18n.t(\"contacts.messages.processingExport\").replace('{count}', selectedContacts.length));\n    }\n\n    // Usar setTimeout para no bloquear la UI\n    setTimeout(() => {\n      try {\n        // Crear el CSV con los datos filtrados\n        const csvData = contactsToExport.map(contact => ({\n          name: contact.name || '',\n          number: contact.number || '',\n          email: contact.email || ''\n        }));\n\n        // Crear el contenido CSV con encoding UTF-8 BOM para Excel\n        const csvHeader = 'name;number;email\\n';\n        const csvContent = csvData.map(row => `\"${row.name.replace(/\"/g, '\"\"')}\";\"${row.number}\";\"${row.email}\"`).join('\\n');\n        const csvString = '\\ufeff' + csvHeader + csvContent; // BOM para UTF-8\n\n        // Crear y descargar el archivo\n        const blob = new Blob([csvString], {\n          type: 'text/csv;charset=utf-8;'\n        });\n        const link = document.createElement('a');\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', `whaticket_${selectedContacts.length}_contacts_${new Date().toISOString().split('T')[0]}.csv`);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n\n        // Limpiar la URL del blob\n        URL.revokeObjectURL(url);\n        toast.success(i18n.t(\"contacts.messages.exportSuccess\"));\n      } catch (error) {\n        console.error('Error al exportar:', error);\n        toast.error(i18n.t(\"contacts.messages.exportError\"));\n      }\n      setConfirmOpen(false);\n    }, 100);\n  };\n  const handleCheckAgenda = async () => {\n    try {\n      toast.info(i18n.t(\"contacts.messages.checkingAgenda\"));\n      const {\n        data: countData\n      } = await api.get(\"/contacts/count\");\n      const count = countData.count;\n      if (count === 0) {\n        toast.warning(i18n.t(\"contacts.messages.agendaEmpty\"));\n        return;\n      }\n      setContactCount(count);\n      setActionType(\"import\");\n      setConfirmOpen(true);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const handleimportContact = async () => {\n    try {\n      if (!!fileUploadRef.current.files[0]) {\n        const formData = new FormData();\n        formData.append(\"file\", fileUploadRef.current.files[0]);\n        await api.request({\n          url: `/contacts/upload`,\n          method: \"POST\",\n          data: formData\n        });\n      } else {\n        // Mostrar mensaje de progreso para grandes cantidades\n        if (contactCount > 50) {\n          toast.info(i18n.t(\"contacts.messages.importingContacts\").replace('{count}', contactCount));\n        }\n\n        // Importar los contactos\n        await api.post(\"/contacts/import\");\n        toast.success(i18n.t(\"contacts.messages.importSuccess\"));\n      }\n      history.go(0);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const handleDownloadTemplate = () => {\n    try {\n      // Crear un enlace temporal para descargar el archivo\n      const link = document.createElement('a');\n      link.href = '/files/plantilla-watoolx-contact.xlsx';\n      link.download = 'plantilla-watoolx-contact.xlsx';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      toast.success(\"Plantilla descargada correctamente\");\n    } catch (error) {\n      console.error('Error al descargar plantilla:', error);\n      toast.error(\"Error al descargar la plantilla\");\n    }\n  };\n  function getDateLastMessage(contact) {\n    if (!contact) return null;\n    if (!contact.tickets) return null;\n    if (contact.tickets.length > 0) {\n      const date = new Date(contact.tickets[contact.tickets.length - 1].updatedAt);\n      const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n      const month = date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\n      const year = date.getFullYear().toString().slice(-2);\n      const hours = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\n      const minutes = date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`;\n      return `${day}/${month}/${year} ${hours}:${minutes}`;\n    }\n    return null;\n  }\n  const loadMore = () => {\n    setPageNumber(prevState => prevState + 1);\n  };\n  const handleScroll = e => {\n    if (!hasMore || loading) return;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n  return /*#__PURE__*/React.createElement(MainContainer, {\n    className: classes.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewTicketModal, {\n    modalOpen: newTicketModalOpen,\n    initialContact: contactTicket,\n    onClose: ticket => {\n      handleCloseOrOpenTicket(ticket);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ContactModal, {\n    open: contactModalOpen,\n    onClose: handleCloseContactModal,\n    \"aria-labelledby\": \"form-dialog-title\",\n    contactId: selectedContactId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmationModal, {\n    title: deletingContact ? `${i18n.t(\"contacts.confirmationModal.deleteTitle\")} ${deletingContact.name}?` : actionType === \"export\" && selectedContacts.length > 0 ? selectedContacts.length === contacts.length ? \"Exportar todos los contactos\" : `Exportar ${selectedContacts.length} contacto${selectedContacts.length > 1 ? 's' : ''}` : actionType === \"import\" && contactCount > 0 ? `${i18n.t(\"contacts.confirmationModal.importTitle\")}` : selectedContacts.length > 0 ? selectedContacts.length === contacts.length ? `${i18n.t(\"contacts.confirmationModal.deleteAllTitle\")}` : `Eliminar ${selectedContacts.length} contacto${selectedContacts.length > 1 ? 's' : ''}` : `${i18n.t(\"contacts.confirmationModal.importTitle\")}`,\n    open: confirmOpen,\n    onClose: () => {\n      setConfirmOpen(false);\n      setActionType(\"\");\n      setContactCount(0);\n    },\n    onConfirm: e => {\n      if (deletingContact) {\n        handleDeleteContact(deletingContact.id);\n      } else if (actionType === \"export\" && selectedContacts.length > 0) {\n        handleExportSelectedContacts();\n      } else if (actionType === \"import\" && contactCount > 0) {\n        handleimportContact();\n      } else if (selectedContacts.length > 0) {\n        handleDeleteSelectedContacts();\n      } else {\n        handleimportContact();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }\n  }, deletingContact ? `${i18n.t(\"contacts.confirmationModal.deleteMessage\")}` : actionType === \"export\" && selectedContacts.length > 0 ? selectedContacts.length === contacts.length ? \"¿Está seguro que desea exportar todos los contactos?\" : `¿Está seguro que desea exportar ${selectedContacts.length} contacto${selectedContacts.length > 1 ? 's' : ''}?` : actionType === \"import\" && contactCount > 0 ? i18n.t(\"contacts.confirmationModal.importAgendaMessage\").replace('{count}', contactCount) : selectedContacts.length > 0 ? selectedContacts.length === contacts.length ? `${i18n.t(\"contacts.confirmationModal.deleteAllMessage\")}` : `¿Seguro que desea eliminar ${selectedContacts.length} contacto${selectedContacts.length > 1 ? 's' : ''}? Se perderán todos los tickets relacionados.` : `${i18n.t(\"contacts.confirmationModal.importMessage\")}`), /*#__PURE__*/React.createElement(MainHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }\n  }, i18n.t(\"contacts.title\")), /*#__PURE__*/React.createElement(MainHeaderButtonsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    placeholder: i18n.t(\"contacts.searchPlaceholder\"),\n    type: \"search\",\n    value: searchParam,\n    onChange: handleSearch,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        style: {\n          color: \"gray\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 19\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: true,\n    onClick: handleCheckAgenda,\n    title: \"Funci\\xF3n temporalmente deshabilitada - En desarrollo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 11\n    }\n  }, i18n.t(\"contacts.buttons.import\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      fileUploadRef.current.value = null;\n      fileUploadRef.current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 21\n    }\n  }, i18n.t(\"contacts.buttons.importSheet\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpenContactModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 11\n    }\n  }, i18n.t(\"contacts.buttons.add\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    disabled: selectedContacts.length === 0,\n    onClick: () => {\n      setActionType(\"delete\");\n      setConfirmOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 11\n    }\n  }, i18n.t(\"contacts.buttons.delete\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      if (selectedContacts.length === 0) {\n        toast.error(i18n.t(\"contacts.messages.selectToExport\"));\n        return;\n      }\n      setActionType(\"export\");\n      setConfirmOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 11\n    }\n  }, i18n.t(\"contacts.buttons.export\")), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    onClick: handleDownloadTemplate,\n    title: i18n.t(\"contacts.buttons.downloadTemplate\"),\n    style: {\n      marginLeft: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GetAppIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.mainPaper,\n    variant: \"outlined\",\n    onScroll: handleScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    id: \"upload\",\n    name: \"file\",\n    type: \"file\",\n    accept: \".xls,.xlsx\",\n    onChange: () => {\n      setConfirmOpen(true);\n    },\n    ref: fileUploadRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectAll,\n    onChange: handleSelectAll,\n    indeterminate: selectedContacts.length > 0 && selectedContacts.length < contacts.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 15\n    }\n  }, \"PERFIL\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 15\n    }\n  }, i18n.t(\"contacts.table.name\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 15\n    }\n  }, i18n.t(\"contacts.table.whatsapp\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 15\n    }\n  }, i18n.t(\"contacts.table.email\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 15\n    }\n  }, i18n.t(\"contacts.table.lastInteraction\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 6\n    }\n  }, i18n.t(\"contacts.table.status\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 15\n    }\n  }, i18n.t(\"contacts.table.actions\")))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, contacts.map(contact => /*#__PURE__*/React.createElement(TableRow, {\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      paddingRight: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedContacts.includes(contact.id),\n    onChange: () => handleSelectContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      paddingRight: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    style: {\n      backgroundColor: generateColor(contact === null || contact === void 0 ? void 0 : contact.number),\n      fontWeight: \"bold\",\n      color: \"white\"\n    },\n    src: contact.profilePicUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 23\n    }\n  }, getInitials(contact === null || contact === void 0 ? void 0 : contact.name))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 19\n    }\n  }, contact.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 19\n    }\n  }, contact.number), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 19\n    }\n  }, contact.email), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 37\n    }\n  }, getDateLastMessage(contact)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 37\n    }\n  }, contact.active ? /*#__PURE__*/React.createElement(CheckCircleIcon, {\n    style: {\n      color: \"green\"\n    },\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(CancelIcon, {\n    style: {\n      color: \"red\"\n    },\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: () => {\n      setContactTicket(contact);\n      setNewTicketModalOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(WhatsAppIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: () => hadleEditContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Can, {\n    role: user.profile,\n    perform: \"contacts-page:deleteContact\",\n    yes: () => /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      onClick: e => {\n        setConfirmOpen(true);\n        setDeletingContact(contact);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 27\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 21\n    }\n  })))), loading && /*#__PURE__*/React.createElement(TableRowSkeleton, {\n    avatar: true,\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 27\n    }\n  }))))));\n};\nexport default Contacts;","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","toast","useHistory","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","Avatar","WhatsAppIcon","SearchIcon","TextField","InputAdornment","CheckCircleIcon","IconButton","DeleteOutlineIcon","EditIcon","Checkbox","GetAppIcon","api","TableRowSkeleton","ContactModal","ConfirmationModal","CancelIcon","i18n","MainHeader","Title","MainHeaderButtonsWrapper","MainContainer","toastError","AuthContext","Can","NewTicketModal","SocketContext","generateColor","getInitials","reducer","state","action","type","contacts","payload","newContacts","forEach","contact","contactIndex","findIndex","c","id","push","contactId","splice","useStyles","theme","mainPaper","flex","padding","spacing","overflowY","scrollbarStyles","Contacts","classes","history","user","loading","setLoading","pageNumber","setPageNumber","searchParam","setSearchParam","dispatch","selectedContactId","setSelectedContactId","contactModalOpen","setContactModalOpen","newTicketModalOpen","setNewTicketModalOpen","contactTicket","setContactTicket","deletingContact","setDeletingContact","confirmOpen","setConfirmOpen","hasMore","setHasMore","fileUploadRef","selectedContacts","setSelectedContacts","selectAll","setSelectAll","actionType","setActionType","contactCount","setContactCount","socketManager","delayDebounceFn","setTimeout","fetchContacts","data","get","params","err","clearTimeout","companyId","localStorage","getItem","socket","getSocket","on","disconnect","handleSearch","event","target","value","toLowerCase","handleOpenContactModal","handleCloseContactModal","handleCloseOrOpenTicket","ticket","undefined","uuid","hadleEditContact","handleDeleteContact","delete","success","t","handleSelectContact","prev","includes","filter","handleSelectAll","map","handleDeleteSelectedContacts","length","contactIds","handleExportSelectedContacts","contactsToExport","info","replace","csvData","name","number","email","csvHeader","csvContent","row","join","csvString","blob","Blob","link","document","createElement","url","URL","createObjectURL","setAttribute","Date","toISOString","split","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","error","console","handleCheckAgenda","countData","count","warning","handleimportContact","current","files","formData","FormData","append","request","method","post","go","handleDownloadTemplate","href","download","getDateLastMessage","tickets","date","updatedAt","day","getDate","month","getMonth","year","getFullYear","toString","slice","hours","getHours","minutes","getMinutes","loadMore","prevState","handleScroll","e","scrollTop","scrollHeight","clientHeight","currentTarget","className","mainContainer","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","modalOpen","initialContact","onClose","open","title","onConfirm","placeholder","onChange","InputProps","startAdornment","position","color","variant","disabled","onClick","marginLeft","onScroll","Fragment","display","accept","ref","size","checked","indeterminate","align","key","paddingRight","backgroundColor","fontWeight","src","profilePicUrl","active","fontSize","role","profile","perform","yes","avatar","columns"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/pages/Contacts/index.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\n\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactModal from \"../../components/ContactModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal/\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { i18n } from \"../../translate/i18n\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../../components/Can\";\nimport NewTicketModal from \"../../components/NewTicketModal\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { generateColor } from \"../../helpers/colorGenerator\";\nimport { getInitials } from \"../../helpers/getInitials\";\n\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CONTACTS\") {\n    const contacts = action.payload;\n    const newContacts = [];\n\n    contacts.forEach((contact) => {\n      const contactIndex = state.findIndex((c) => c.id === contact.id);\n      if (contactIndex !== -1) {\n        state[contactIndex] = contact;\n      } else {\n        newContacts.push(contact);\n      }\n    });\n\n    return [...state, ...newContacts];\n  }\n\n  if (action.type === \"UPDATE_CONTACTS\") {\n    const contact = action.payload;\n    const contactIndex = state.findIndex((c) => c.id === contact.id);\n\n    if (contactIndex !== -1) {\n      state[contactIndex] = contact;\n      return [...state];\n    } else {\n      return [contact, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CONTACT\") {\n    const contactId = action.payload;\n\n    const contactIndex = state.findIndex((c) => c.id === contactId);\n    if (contactIndex !== -1) {\n      state.splice(contactIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Contacts = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [contacts, dispatch] = useReducer(reducer, []);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n  const [newTicketModalOpen, setNewTicketModalOpen] = useState(false);\n  const [contactTicket, setContactTicket] = useState({});\n  const [deletingContact, setDeletingContact] = useState(null);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const fileUploadRef = useRef(null);\n\n  // Estados para selección múltiple\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [actionType, setActionType] = useState(\"\"); // \"delete\", \"export\" o \"import\"\n  const [contactCount, setContactCount] = useState(0);\n\n  const socketManager = useContext(SocketContext);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const { data } = await api.get(\"/contacts/\", {\n            params: { searchParam, pageNumber },\n          });\n          dispatch({ type: \"LOAD_CONTACTS\", payload: data.contacts });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketManager.getSocket(companyId);\n\n    socket.on(`company-${companyId}-contact`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_CONTACTS\", payload: data.contact });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_CONTACT\", payload: +data.contactId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [ socketManager]);\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleOpenContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(true);\n  };\n\n  const handleCloseContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(false);\n  };\n\n  // const handleSaveTicket = async contactId => {\n  // \tif (!contactId) return;\n  // \tsetLoading(true);\n  // \ttry {\n  // \t\tconst { data: ticket } = await api.post(\"/tickets\", {\n  // \t\t\tcontactId: contactId,\n  // \t\t\tuserId: user?.id,\n  // \t\t\tstatus: \"open\",\n  // \t\t});\n  // \t\thistory.push(`/tickets/${ticket.id}`);\n  // \t} catch (err) {\n  // \t\ttoastError(err);\n  // \t}\n  // \tsetLoading(false);\n  // };\n\n  const handleCloseOrOpenTicket = (ticket) => {\n    setNewTicketModalOpen(false);\n    if (ticket !== undefined && ticket.uuid !== undefined) {\n      history.push(`/tickets/${ticket.uuid}`);\n    }\n  };\n\n  const hadleEditContact = (contactId) => {\n    setSelectedContactId(contactId);\n    setContactModalOpen(true);\n  };\n\n  const handleDeleteContact = async (contactId) => {\n    setLoading(true);\n    try {\n      await api.delete(`/contacts/${contactId}`);\n      toast.success(i18n.t(\"contacts.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setLoading(false);\n    setConfirmOpen(false);\n    setDeletingContact(null);\n  };\n\n  // Funciones para selección múltiple\n  const handleSelectContact = (contactId) => {\n    setSelectedContacts(prev => {\n      if (prev.includes(contactId)) {\n        return prev.filter(id => id !== contactId);\n      } else {\n        return [...prev, contactId];\n      }\n    });\n  };\n\n  const handleSelectAll = () => {\n    if (selectAll) {\n      setSelectedContacts([]);\n      setSelectAll(false);\n    } else {\n      setSelectedContacts(contacts.map(contact => contact.id));\n      setSelectAll(true);\n    }\n  };\n\n  const handleDeleteSelectedContacts = async () => {\n    if (selectedContacts.length === 0) return;\n    \n    setLoading(true);\n    try {\n      await api.delete(\"/contacts/\", {\n        data: { contactIds: selectedContacts }\n      });\n      toast.success(i18n.t(\"contacts.toasts.deletedAll\"));\n      setSelectedContacts([]);\n      setSelectAll(false);\n    } catch (err) {\n      toastError(err);\n    }\n    setLoading(false);\n    setConfirmOpen(false);\n  };\n\n  const handleExportSelectedContacts = () => {\n    if (selectedContacts.length === 0) return;\n    \n    // Filtrar solo los contactos seleccionados\n    const contactsToExport = contacts.filter(contact => \n      selectedContacts.includes(contact.id)\n    );\n    \n    // Mostrar mensaje de procesamiento para grandes cantidades\n    if (selectedContacts.length > 50) {\n      toast.info(i18n.t(\"contacts.messages.processingExport\").replace('{count}', selectedContacts.length));\n    }\n    \n    // Usar setTimeout para no bloquear la UI\n    setTimeout(() => {\n      try {\n        // Crear el CSV con los datos filtrados\n        const csvData = contactsToExport.map((contact) => ({ \n          name: contact.name || '', \n          number: contact.number || '', \n          email: contact.email || '' \n        }));\n        \n        // Crear el contenido CSV con encoding UTF-8 BOM para Excel\n        const csvHeader = 'name;number;email\\n';\n        const csvContent = csvData.map(row => \n          `\"${row.name.replace(/\"/g, '\"\"')}\";\"${row.number}\";\"${row.email}\"`\n        ).join('\\n');\n        \n        const csvString = '\\ufeff' + csvHeader + csvContent; // BOM para UTF-8\n        \n        // Crear y descargar el archivo\n        const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' });\n        const link = document.createElement('a');\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', `whaticket_${selectedContacts.length}_contacts_${new Date().toISOString().split('T')[0]}.csv`);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        \n        // Limpiar la URL del blob\n        URL.revokeObjectURL(url);\n        \n        toast.success(i18n.t(\"contacts.messages.exportSuccess\"));\n      } catch (error) {\n        console.error('Error al exportar:', error);\n        toast.error(i18n.t(\"contacts.messages.exportError\"));\n      }\n      \n      setConfirmOpen(false);\n    }, 100);\n  };\n  \n  const handleCheckAgenda = async () => {\n    try {\n      toast.info(i18n.t(\"contacts.messages.checkingAgenda\"));\n      \n      const { data: countData } = await api.get(\"/contacts/count\");\n      const count = countData.count;\n      \n      if (count === 0) {\n        toast.warning(i18n.t(\"contacts.messages.agendaEmpty\"));\n        return;\n      }\n      \n      setContactCount(count);\n      setActionType(\"import\");\n      setConfirmOpen(true);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleimportContact = async () => {\n    try {\n      if (!!fileUploadRef.current.files[0]) {\n        const formData = new FormData();\n        formData.append(\"file\", fileUploadRef.current.files[0]);\n        await api.request({\n          url: `/contacts/upload`,\n          method: \"POST\",\n          data: formData,\n        });\n      } else {\n        // Mostrar mensaje de progreso para grandes cantidades\n        if (contactCount > 50) {\n          toast.info(i18n.t(\"contacts.messages.importingContacts\").replace('{count}', contactCount));\n        }\n        \n        // Importar los contactos\n        await api.post(\"/contacts/import\");\n        \n        toast.success(i18n.t(\"contacts.messages.importSuccess\"));\n      }\n      history.go(0);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleDownloadTemplate = () => {\n    try {\n      // Crear un enlace temporal para descargar el archivo\n      const link = document.createElement('a');\n      link.href = '/files/plantilla-watoolx-contact.xlsx';\n      link.download = 'plantilla-watoolx-contact.xlsx';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      toast.success(\"Plantilla descargada correctamente\");\n    } catch (error) {\n      console.error('Error al descargar plantilla:', error);\n      toast.error(\"Error al descargar la plantilla\");\n    }\n  };\n  \nfunction getDateLastMessage(contact) {\n    if (!contact) return null;\n    if (!contact.tickets) return null;\n\n    if (contact.tickets.length > 0) {\n        const date = new Date(contact.tickets[contact.tickets.length - 1].updatedAt);\n\n        const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n        const month = (date.getMonth() + 1) > 9 ? (date.getMonth() + 1) : `0${date.getMonth() + 1}`;\n        const year = date.getFullYear().toString().slice(-2);\n\n        const hours = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\n        const minutes = date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`;\n\n        return `${day}/${month}/${year} ${hours}:${minutes}`;\n    }\n\n    return null;\n}\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <MainContainer className={classes.mainContainer}>\n      <NewTicketModal\n        modalOpen={newTicketModalOpen}\n        initialContact={contactTicket}\n        onClose={(ticket) => {\n          handleCloseOrOpenTicket(ticket);\n        }}\n      />\n      <ContactModal\n        open={contactModalOpen}\n        onClose={handleCloseContactModal}\n        aria-labelledby=\"form-dialog-title\"\n        contactId={selectedContactId}\n      ></ContactModal>\n      <ConfirmationModal\n        title={\n          deletingContact\n            ? `${i18n.t(\"contacts.confirmationModal.deleteTitle\")} ${\n                deletingContact.name\n              }?`\n            : actionType === \"export\" && selectedContacts.length > 0\n            ? selectedContacts.length === contacts.length\n              ? \"Exportar todos los contactos\"\n              : `Exportar ${selectedContacts.length} contacto${selectedContacts.length > 1 ? 's' : ''}`\n            : actionType === \"import\" && contactCount > 0\n            ? `${i18n.t(\"contacts.confirmationModal.importTitle\")}`\n            : selectedContacts.length > 0\n            ? selectedContacts.length === contacts.length\n              ? `${i18n.t(\"contacts.confirmationModal.deleteAllTitle\")}`\n              : `Eliminar ${selectedContacts.length} contacto${selectedContacts.length > 1 ? 's' : ''}`\n            : `${i18n.t(\"contacts.confirmationModal.importTitle\")}`\n        }\n        open={confirmOpen}\n        onClose={() => {\n          setConfirmOpen(false);\n          setActionType(\"\");\n          setContactCount(0);\n        }}\n        onConfirm={(e) => {\n          if (deletingContact) {\n            handleDeleteContact(deletingContact.id);\n          } else if (actionType === \"export\" && selectedContacts.length > 0) {\n            handleExportSelectedContacts();\n          } else if (actionType === \"import\" && contactCount > 0) {\n            handleimportContact();\n          } else if (selectedContacts.length > 0) {\n            handleDeleteSelectedContacts();\n          } else {\n            handleimportContact();\n          }\n        }}\n      >\n        {deletingContact\n          ? `${i18n.t(\"contacts.confirmationModal.deleteMessage\")}`\n          : actionType === \"export\" && selectedContacts.length > 0\n          ? selectedContacts.length === contacts.length\n            ? \"¿Está seguro que desea exportar todos los contactos?\"\n            : `¿Está seguro que desea exportar ${selectedContacts.length} contacto${selectedContacts.length > 1 ? 's' : ''}?`\n          : actionType === \"import\" && contactCount > 0\n          ? i18n.t(\"contacts.confirmationModal.importAgendaMessage\").replace('{count}', contactCount)\n          : selectedContacts.length > 0\n          ? selectedContacts.length === contacts.length\n            ? `${i18n.t(\"contacts.confirmationModal.deleteAllMessage\")}`\n            : `¿Seguro que desea eliminar ${selectedContacts.length} contacto${selectedContacts.length > 1 ? 's' : ''}? Se perderán todos los tickets relacionados.`\n          : `${i18n.t(\"contacts.confirmationModal.importMessage\")}`}\n      </ConfirmationModal>\n      <MainHeader>\n        <Title>{i18n.t(\"contacts.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <TextField\n            placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n            type=\"search\"\n            value={searchParam}\n            onChange={handleSearch}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon style={{ color: \"gray\" }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={true}\n            onClick={handleCheckAgenda}\n            title=\"Función temporalmente deshabilitada - En desarrollo\"\n          >\n            {i18n.t(\"contacts.buttons.import\")}\n          </Button>\n                    <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              fileUploadRef.current.value = null;\n              fileUploadRef.current.click();\n            }}\n      >\n        {i18n.t(\"contacts.buttons.importSheet\")}\n      </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenContactModal}\n          >\n            {i18n.t(\"contacts.buttons.add\")}\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={selectedContacts.length === 0}\n            onClick={() => {\n              setActionType(\"delete\");\n              setConfirmOpen(true);\n            }}\n          >\n            {i18n.t(\"contacts.buttons.delete\")}\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              if (selectedContacts.length === 0) {\n                toast.error(i18n.t(\"contacts.messages.selectToExport\"));\n                return;\n              }\n              setActionType(\"export\");\n              setConfirmOpen(true);\n            }}\n          >\n            {i18n.t(\"contacts.buttons.export\")}\n          </Button>\n          <IconButton\n            color=\"primary\"\n            onClick={handleDownloadTemplate}\n            title={i18n.t(\"contacts.buttons.downloadTemplate\")}\n            style={{ marginLeft: '8px' }}\n          >\n            <GetAppIcon />\n          </IconButton>\n\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <>\n          <input\n              style={{ display: \"none\" }}\n              id=\"upload\"\n              name=\"file\"\n              type=\"file\"\n              accept=\".xls,.xlsx\"\n              onChange={() => {\n                setConfirmOpen(true);\n              }}\n              ref={fileUploadRef}\n          />\n        </>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={selectAll}\n                  onChange={handleSelectAll}\n                  indeterminate={selectedContacts.length > 0 && selectedContacts.length < contacts.length}\n                />\n              </TableCell>\n              <TableCell>PERFIL</TableCell>\n              <TableCell>{i18n.t(\"contacts.table.name\")}</TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contacts.table.whatsapp\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contacts.table.email\")}\n              </TableCell>\n              <TableCell align=\"center\">\n              {i18n.t(\"contacts.table.lastInteraction\")}\n              </TableCell>\n\t\t\t  <TableCell align=\"center\">{i18n.t(\"contacts.table.status\")}</TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contacts.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {contacts.map((contact) => (\n                <TableRow key={contact.id}>\n                  <TableCell style={{ paddingRight: 0 }}>\n                    <Checkbox\n                      checked={selectedContacts.includes(contact.id)}\n                      onChange={() => handleSelectContact(contact.id)}\n                    />\n                  </TableCell>\n                  <TableCell style={{ paddingRight: 0 }}>\n                    { <Avatar\n                      style={{ backgroundColor: generateColor(contact?.number), fontWeight: \"bold\", color: \"white\" }}\n                      src={contact.profilePicUrl}>\n                      {getInitials(contact?.name)}\n                    </Avatar>}\n                  </TableCell>\n                  <TableCell>{contact.name}</TableCell>\n                  <TableCell align=\"center\">{contact.number}</TableCell>\n                  <TableCell align=\"center\">{contact.email}</TableCell>\n                                    <TableCell align=\"center\">\n                                        {getDateLastMessage(contact)}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.active ? (\n                                            <CheckCircleIcon\n                                                style={{ color: \"green\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        ) : (\n                                            <CancelIcon\n                                                style={{ color: \"red\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        )}\n                                    </TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => {\n                        setContactTicket(contact);\n                        setNewTicketModalOpen(true);\n                      }}\n                    >\n                      <WhatsAppIcon />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => hadleEditContact(contact.id)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <Can\n                      role={user.profile}\n                      perform=\"contacts-page:deleteContact\"\n                      yes={() => (\n                        <IconButton\n                          size=\"small\"\n                          onClick={(e) => {\n                            setConfirmOpen(true);\n                            setDeletingContact(contact);\n                          }}\n                        >\n                          <DeleteOutlineIcon />\n                        </IconButton>\n                      )}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton avatar columns={3} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Contacts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}