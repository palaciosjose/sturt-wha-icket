{"ast":null,"code":"// Sistema de logging configurable\n// Permite activar/desactivar logs según el entorno\nconst LOG_LEVELS={ERROR:0,WARN:1,INFO:2,DEBUG:3};// Configuración por defecto\nconst DEFAULT_CONFIG={level:LOG_LEVELS.DEBUG,// Siempre debug para desarrollo\nenableConsole:true,// Siempre habilitado en desarrollo\nenableServiceWorker:false,enableSocket:false,enableWhatsApp:false,enableTransferModal:false,enableDashboard:false};// Configuración desde localStorage (permite cambiar en tiempo real)\nconst getConfig=()=>{try{const savedConfig=localStorage.getItem('loggerConfig');if(savedConfig){const parsedConfig=JSON.parse(savedConfig);return{...DEFAULT_CONFIG,...parsedConfig};}return DEFAULT_CONFIG;}catch(error){return DEFAULT_CONFIG;}};// Función principal de logging\nconst log=function(level,category,message){const config=getConfig();// Verificar si el nivel está habilitado\nif(level>config.level)return;// Verificar si la categoría está habilitada\nconst categoryEnabled=config[`enable${category}`]!==undefined?config[`enable${category}`]:true;if(!categoryEnabled)return;// Verificar si console está habilitado\nif(!config.enableConsole)return;// Generar el mensaje con timestamp\nconst timestamp=new Date().toISOString().split('T')[1].split('.')[0];const prefix=`[${timestamp}] [${category}]`;// Usar el método de console apropiado\nfor(var _len=arguments.length,args=new Array(_len>3?_len-3:0),_key=3;_key<_len;_key++){args[_key-3]=arguments[_key];}switch(level){case LOG_LEVELS.ERROR:console.error(prefix,message,...args);break;case LOG_LEVELS.WARN:console.warn(prefix,message,...args);break;case LOG_LEVELS.INFO:console.info(prefix,message,...args);break;case LOG_LEVELS.DEBUG:console.log(prefix,message,...args);break;default:console.log(prefix,message,...args);}};// Funciones específicas por categoría\nexport const logger={// Logs generales\nerror:function(message){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}return log(LOG_LEVELS.ERROR,'General',message,...args);},warn:function(message){for(var _len3=arguments.length,args=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++){args[_key3-1]=arguments[_key3];}return log(LOG_LEVELS.WARN,'General',message,...args);},info:function(message){for(var _len4=arguments.length,args=new Array(_len4>1?_len4-1:0),_key4=1;_key4<_len4;_key4++){args[_key4-1]=arguments[_key4];}return log(LOG_LEVELS.INFO,'General',message,...args);},debug:function(message){for(var _len5=arguments.length,args=new Array(_len5>1?_len5-1:0),_key5=1;_key5<_len5;_key5++){args[_key5-1]=arguments[_key5];}return log(LOG_LEVELS.DEBUG,'General',message,...args);},// Logs de Service Worker\nsw:{error:function(message){for(var _len6=arguments.length,args=new Array(_len6>1?_len6-1:0),_key6=1;_key6<_len6;_key6++){args[_key6-1]=arguments[_key6];}return log(LOG_LEVELS.ERROR,'ServiceWorker',message,...args);},warn:function(message){for(var _len7=arguments.length,args=new Array(_len7>1?_len7-1:0),_key7=1;_key7<_len7;_key7++){args[_key7-1]=arguments[_key7];}return log(LOG_LEVELS.WARN,'ServiceWorker',message,...args);},info:function(message){for(var _len8=arguments.length,args=new Array(_len8>1?_len8-1:0),_key8=1;_key8<_len8;_key8++){args[_key8-1]=arguments[_key8];}return log(LOG_LEVELS.INFO,'ServiceWorker',message,...args);},debug:function(message){for(var _len9=arguments.length,args=new Array(_len9>1?_len9-1:0),_key9=1;_key9<_len9;_key9++){args[_key9-1]=arguments[_key9];}return log(LOG_LEVELS.DEBUG,'ServiceWorker',message,...args);}},// Logs de Socket\nsocket:{error:function(message){for(var _len0=arguments.length,args=new Array(_len0>1?_len0-1:0),_key0=1;_key0<_len0;_key0++){args[_key0-1]=arguments[_key0];}return log(LOG_LEVELS.ERROR,'Socket',message,...args);},warn:function(message){for(var _len1=arguments.length,args=new Array(_len1>1?_len1-1:0),_key1=1;_key1<_len1;_key1++){args[_key1-1]=arguments[_key1];}return log(LOG_LEVELS.WARN,'Socket',message,...args);},info:function(message){for(var _len10=arguments.length,args=new Array(_len10>1?_len10-1:0),_key10=1;_key10<_len10;_key10++){args[_key10-1]=arguments[_key10];}return log(LOG_LEVELS.INFO,'Socket',message,...args);},debug:function(message){for(var _len11=arguments.length,args=new Array(_len11>1?_len11-1:0),_key11=1;_key11<_len11;_key11++){args[_key11-1]=arguments[_key11];}return log(LOG_LEVELS.DEBUG,'Socket',message,...args);}},// Logs de WhatsApp\nwhatsapp:{error:function(message){for(var _len12=arguments.length,args=new Array(_len12>1?_len12-1:0),_key12=1;_key12<_len12;_key12++){args[_key12-1]=arguments[_key12];}return log(LOG_LEVELS.ERROR,'WhatsApp',message,...args);},warn:function(message){for(var _len13=arguments.length,args=new Array(_len13>1?_len13-1:0),_key13=1;_key13<_len13;_key13++){args[_key13-1]=arguments[_key13];}return log(LOG_LEVELS.WARN,'WhatsApp',message,...args);},info:function(message){for(var _len14=arguments.length,args=new Array(_len14>1?_len14-1:0),_key14=1;_key14<_len14;_key14++){args[_key14-1]=arguments[_key14];}return log(LOG_LEVELS.INFO,'WhatsApp',message,...args);},debug:function(message){for(var _len15=arguments.length,args=new Array(_len15>1?_len15-1:0),_key15=1;_key15<_len15;_key15++){args[_key15-1]=arguments[_key15];}return log(LOG_LEVELS.DEBUG,'WhatsApp',message,...args);}},// Logs de TransferModal\ntransferModal:{error:function(message){for(var _len16=arguments.length,args=new Array(_len16>1?_len16-1:0),_key16=1;_key16<_len16;_key16++){args[_key16-1]=arguments[_key16];}return log(LOG_LEVELS.ERROR,'TransferModal',message,...args);},warn:function(message){for(var _len17=arguments.length,args=new Array(_len17>1?_len17-1:0),_key17=1;_key17<_len17;_key17++){args[_key17-1]=arguments[_key17];}return log(LOG_LEVELS.WARN,'TransferModal',message,...args);},info:function(message){for(var _len18=arguments.length,args=new Array(_len18>1?_len18-1:0),_key18=1;_key18<_len18;_key18++){args[_key18-1]=arguments[_key18];}return log(LOG_LEVELS.INFO,'TransferModal',message,...args);},debug:function(message){for(var _len19=arguments.length,args=new Array(_len19>1?_len19-1:0),_key19=1;_key19<_len19;_key19++){args[_key19-1]=arguments[_key19];}return log(LOG_LEVELS.DEBUG,'TransferModal',message,...args);}},// Logs de Dashboard\ndashboard:{error:function(message){for(var _len20=arguments.length,args=new Array(_len20>1?_len20-1:0),_key20=1;_key20<_len20;_key20++){args[_key20-1]=arguments[_key20];}return log(LOG_LEVELS.ERROR,'Dashboard',message,...args);},warn:function(message){for(var _len21=arguments.length,args=new Array(_len21>1?_len21-1:0),_key21=1;_key21<_len21;_key21++){args[_key21-1]=arguments[_key21];}return log(LOG_LEVELS.WARN,'Dashboard',message,...args);},info:function(message){for(var _len22=arguments.length,args=new Array(_len22>1?_len22-1:0),_key22=1;_key22<_len22;_key22++){args[_key22-1]=arguments[_key22];}return log(LOG_LEVELS.INFO,'Dashboard',message,...args);},debug:function(message){for(var _len23=arguments.length,args=new Array(_len23>1?_len23-1:0),_key23=1;_key23<_len23;_key23++){args[_key23-1]=arguments[_key23];}return log(LOG_LEVELS.DEBUG,'Dashboard',message,...args);}},// Configuración\nconfig:{get:getConfig,set:newConfig=>{try{const currentConfig=getConfig();const updatedConfig={...currentConfig,...newConfig};localStorage.setItem('loggerConfig',JSON.stringify(updatedConfig));// Actualizar control de logs nativos\nif(!updatedConfig.enableConsole){setupNativeLogControl();}return true;}catch(error){console.error('Error saving logger config:',error);return false;}},reset:()=>{try{localStorage.removeItem('loggerConfig');return true;}catch(error){console.error('Error resetting logger config:',error);return false;}}}};// Sistema de control de logs nativos\nconst setupNativeLogControl=()=>{const config=getConfig();if(!config.enableConsole){// Deshabilitar logs nativos cuando el sistema está deshabilitado\nconst originalConsoleLog=console.log;const originalConsoleWarn=console.warn;const originalConsoleError=console.error;const originalConsoleInfo=console.info;console.log=()=>{};console.warn=()=>{};console.error=()=>{};console.info=()=>{};// Restaurar después de un tiempo para no romper el sistema\nsetTimeout(()=>{console.log=originalConsoleLog;console.warn=originalConsoleWarn;console.error=originalConsoleError;console.info=originalConsoleInfo;},100);}};// Log de prueba al cargar el logger\nconst currentConfig=getConfig();console.log(\"🔧 DEBUG: Configuración del logger cargada:\",currentConfig);console.log(\"🔧 DEBUG: enableConsole =\",currentConfig.enableConsole);console.log(\"🔧 DEBUG: level =\",currentConfig.level);// Logs de prueba directos para verificar funcionamiento\nif(currentConfig.enableConsole){console.log(\"✅ LOGS HABILITADOS - Sistema funcionando\");logger.debug(\"🚀 Sistema de logging inicializado\");logger.debug(\"📋 Configuración actual:\",currentConfig);logger.sw.debug(\"🧪 LOG DE PRUEBA - Service Worker inicializado\");logger.socket.debug(\"🧪 LOG DE PRUEBA - Socket inicializado\");logger.whatsapp.debug(\"🧪 LOG DE PRUEBA - WhatsApp inicializado\");logger.transferModal.debug(\"🧪 LOG DE PRUEBA - Transfer Modal inicializado\");logger.dashboard.debug(\"🧪 LOG DE PRUEBA - Dashboard inicializado\");}else{console.log(\"❌ LOGS DESHABILITADOS - Revisar configuración\");setupNativeLogControl();}export default logger;","map":null,"metadata":{},"sourceType":"module"}