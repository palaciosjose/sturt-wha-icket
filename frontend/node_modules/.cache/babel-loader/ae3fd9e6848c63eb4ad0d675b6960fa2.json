{"ast":null,"code":"import { createContext } from \"react\";\nimport openSocket from \"socket.io-client\";\nimport { isExpired } from \"react-jwt\";\nclass ManagedSocket {\n  constructor(socketManager) {\n    this.socketManager = socketManager;\n    this.rawSocket = socketManager.currentSocket;\n    this.callbacks = [];\n    this.joins = [];\n    this.rawSocket.on(\"connect\", () => {\n      var _this$rawSocket$io$op;\n      if (((_this$rawSocket$io$op = this.rawSocket.io.opts.query) === null || _this$rawSocket$io$op === void 0 ? void 0 : _this$rawSocket$io$op.r) && !this.rawSocket.recovered) {\n        const refreshJoinsOnReady = () => {\n          for (const j of this.joins) {\n            console.debug(\"refreshing join\", j);\n            this.rawSocket.emit(`join${j.event}`, ...j.params);\n          }\n          this.rawSocket.off(\"ready\", refreshJoinsOnReady);\n        };\n        for (const j of this.callbacks) {\n          this.rawSocket.off(j.event, j.callback);\n          this.rawSocket.on(j.event, j.callback);\n        }\n        this.rawSocket.on(\"ready\", refreshJoinsOnReady);\n      }\n    });\n  }\n  on(event, callback) {\n    if (event === \"ready\" || event === \"connect\") {\n      return this.socketManager.onReady(callback);\n    }\n    this.callbacks.push({\n      event,\n      callback\n    });\n    return this.rawSocket.on(event, callback);\n  }\n  off(event, callback) {\n    const i = this.callbacks.findIndex(c => c.event === event && c.callback === callback);\n    this.callbacks.splice(i, 1);\n    return this.rawSocket.off(event, callback);\n  }\n  emit(event, ...params) {\n    if (event.startsWith(\"join\")) {\n      this.joins.push({\n        event: event.substring(4),\n        params\n      });\n      // Log solo en desarrollo y con logger controlado\n      if (process.env.NODE_ENV === 'development') {\n        const logger = require('../../utils/logger').default;\n        logger.socket.debug(\"Joining\", {\n          event: event.substring(4),\n          params\n        });\n      }\n    }\n    return this.rawSocket.emit(event, ...params);\n  }\n  disconnect() {\n    for (const j of this.joins) {\n      this.rawSocket.emit(`leave${j.event}`, ...j.params);\n    }\n    this.joins = [];\n    for (const c of this.callbacks) {\n      this.rawSocket.off(c.event, c.callback);\n    }\n    this.callbacks = [];\n  }\n}\nclass DummySocket {\n  on(..._) {}\n  off(..._) {}\n  emit(..._) {}\n  disconnect() {}\n}\nconst SocketManager = {\n  currentCompanyId: -1,\n  currentUserId: -1,\n  currentSocket: null,\n  socketReady: false,\n  getSocket: function (companyId) {\n    let userId = null;\n    if (localStorage.getItem(\"userId\")) {\n      userId = localStorage.getItem(\"userId\");\n    }\n    if (!companyId && !this.currentSocket) {\n      return new DummySocket();\n    }\n    if (companyId && typeof companyId !== \"string\") {\n      companyId = `${companyId}`;\n    }\n    if (companyId !== this.currentCompanyId || userId !== this.currentUserId) {\n      if (this.currentSocket) {\n        console.warn(\"closing old socket - company or user changed\");\n        this.currentSocket.removeAllListeners();\n        this.currentSocket.disconnect();\n        this.currentSocket = null;\n        this.currentCompanyId = null;\n        this.currentUserId = null;\n      }\n      let token = localStorage.getItem(\"token\");\n      if (!token) {\n        console.warn(\"No token found, returning dummy socket\");\n        return new DummySocket();\n      }\n      if (isExpired(token)) {\n        console.warn(\"Expired token, reload after refresh\");\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n        return new DummySocket();\n      }\n      this.currentCompanyId = companyId;\n      this.currentUserId = userId;\n      this.currentSocket = openSocket(process.env.REACT_APP_BACKEND_URL, {\n        transports: [\"websocket\"],\n        pingTimeout: 18000,\n        pingInterval: 18000,\n        query: {\n          token\n        }\n      });\n      this.currentSocket.io.on(\"reconnect_attempt\", () => {\n        this.currentSocket.io.opts.query.r = 1;\n        token = localStorage.getItem(\"token\");\n        if (isExpired(token)) {\n          console.warn(\"Token expirado - redirigiendo al login\");\n          localStorage.removeItem(\"token\");\n          window.location.href = \"/login\";\n        } else {\n          console.warn(\"Reconectando socket...\");\n        }\n      });\n      this.currentSocket.on(\"disconnect\", reason => {\n        console.warn(`socket disconnected because: ${reason}`);\n        if (reason.startsWith(\"io server disconnect\")) {\n          console.warn(\"Socket desconectado por el servidor\");\n          token = localStorage.getItem(\"token\");\n          if (isExpired(token)) {\n            console.warn(\"Token expirado - redirigiendo al login\");\n            localStorage.removeItem(\"token\");\n            window.location.href = \"/login\";\n            return;\n          }\n          console.warn(\"Intentando reconectar socket...\");\n          return;\n        }\n      });\n      this.currentSocket.on(\"connect\", (...params) => {\n        console.debug(\"socket connected\", params);\n      });\n      this.currentSocket.onAny((event, ...args) => {\n        console.debug(\"Event: \", {\n          socket: this.currentSocket,\n          event,\n          args\n        });\n      });\n      this.onReady(() => {\n        this.socketReady = true;\n      });\n    }\n    return new ManagedSocket(this);\n  },\n  onReady: function (callbackReady) {\n    if (this.socketReady) {\n      callbackReady();\n      return;\n    }\n    this.currentSocket.once(\"ready\", () => {\n      callbackReady();\n    });\n  },\n  onConnect: function (callbackReady) {\n    this.onReady(callbackReady);\n  }\n};\nconst SocketContext = createContext();\nexport { SocketContext, SocketManager };","map":{"version":3,"names":["createContext","openSocket","isExpired","ManagedSocket","constructor","socketManager","rawSocket","currentSocket","callbacks","joins","on","_this$rawSocket$io$op","io","opts","query","r","recovered","refreshJoinsOnReady","j","console","debug","emit","event","params","off","callback","onReady","push","i","findIndex","c","splice","startsWith","substring","process","env","NODE_ENV","logger","require","default","socket","disconnect","DummySocket","_","SocketManager","currentCompanyId","currentUserId","socketReady","getSocket","companyId","userId","localStorage","getItem","warn","removeAllListeners","token","setTimeout","window","location","reload","REACT_APP_BACKEND_URL","transports","pingTimeout","pingInterval","removeItem","href","reason","onAny","args","callbackReady","once","onConnect","SocketContext"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/context/Socket/SocketContext.js"],"sourcesContent":["import { createContext } from \"react\";\nimport openSocket from \"socket.io-client\";\nimport { isExpired } from \"react-jwt\";\n\nclass ManagedSocket {\n  constructor(socketManager) {\n    this.socketManager = socketManager;\n    this.rawSocket = socketManager.currentSocket;\n    this.callbacks = [];\n    this.joins = [];\n\n    this.rawSocket.on(\"connect\", () => {\n      if (this.rawSocket.io.opts.query?.r && !this.rawSocket.recovered) {\n        const refreshJoinsOnReady = () => {\n          for (const j of this.joins) {\n            console.debug(\"refreshing join\", j);\n            this.rawSocket.emit(`join${j.event}`, ...j.params);\n          }\n          this.rawSocket.off(\"ready\", refreshJoinsOnReady);\n        };\n        for (const j of this.callbacks) {\n          this.rawSocket.off(j.event, j.callback);\n          this.rawSocket.on(j.event, j.callback);\n        }\n        \n        this.rawSocket.on(\"ready\", refreshJoinsOnReady);\n      }\n    });\n  }\n  \n  on(event, callback) {\n    if (event === \"ready\" || event === \"connect\") {\n      return this.socketManager.onReady(callback);\n    }\n    this.callbacks.push({event, callback});\n    return this.rawSocket.on(event, callback);\n  }\n  \n  off(event, callback) {\n    const i = this.callbacks.findIndex((c) => c.event === event && c.callback === callback);\n    this.callbacks.splice(i, 1);\n    return this.rawSocket.off(event, callback);\n  }\n  \n  emit(event, ...params) {\n    if (event.startsWith(\"join\")) {\n      this.joins.push({ event: event.substring(4), params });\n      // Log solo en desarrollo y con logger controlado\n      if (process.env.NODE_ENV === 'development') {\n        const logger = require('../../utils/logger').default;\n        logger.socket.debug(\"Joining\", { event: event.substring(4), params });\n      }\n    }\n    return this.rawSocket.emit(event, ...params);\n  }\n  \n  disconnect() {\n    for (const j of this.joins) {\n      this.rawSocket.emit(`leave${j.event}`, ...j.params);\n    }\n    this.joins = [];\n    for (const c of this.callbacks) {\n      this.rawSocket.off(c.event, c.callback);\n    }\n    this.callbacks = [];\n  }\n}\n\nclass DummySocket {\n  on(..._) {}\n  off(..._) {}\n  emit(..._) {}\n  disconnect() {}\n}\n\nconst SocketManager = {\n  currentCompanyId: -1,\n  currentUserId: -1,\n  currentSocket: null,\n  socketReady: false,\n\n  getSocket: function(companyId) {\n    let userId = null;\n    if (localStorage.getItem(\"userId\")) {\n      userId = localStorage.getItem(\"userId\");\n    }\n\n    if (!companyId && !this.currentSocket) {\n      return new DummySocket();\n    }\n\n    if (companyId && typeof companyId !== \"string\") {\n      companyId = `${companyId}`;\n    }\n\n    if (companyId !== this.currentCompanyId || userId !== this.currentUserId) {\n      if (this.currentSocket) {\n        console.warn(\"closing old socket - company or user changed\");\n        this.currentSocket.removeAllListeners();\n        this.currentSocket.disconnect();\n        this.currentSocket = null;\n        this.currentCompanyId = null;\n\t\t    this.currentUserId = null;\n      }\n\n      let token = localStorage.getItem(\"token\");\n      if (!token) {\n        console.warn(\"No token found, returning dummy socket\");\n        return new DummySocket();\n      }\n      \n      if ( isExpired(token) ) {\n        console.warn(\"Expired token, reload after refresh\");\n        setTimeout(() => {\n          window.location.reload();\n        },1000);\n        return new DummySocket();\n      }\n\n      this.currentCompanyId = companyId;\n      this.currentUserId = userId;\n      \n      this.currentSocket = openSocket(process.env.REACT_APP_BACKEND_URL, {\n        transports: [\"websocket\"],\n        pingTimeout: 18000,\n        pingInterval: 18000,\n        query: { token },\n      });\n\n      this.currentSocket.io.on(\"reconnect_attempt\", () => {\n        this.currentSocket.io.opts.query.r = 1;\n        token = localStorage.getItem(\"token\");\n        if ( isExpired(token) ) {\n          console.warn(\"Token expirado - redirigiendo al login\");\n          localStorage.removeItem(\"token\");\n          window.location.href = \"/login\";\n        } else {\n          console.warn(\"Reconectando socket...\");\n        }\n      });\n      \n      this.currentSocket.on(\"disconnect\", (reason) => {\n        console.warn(`socket disconnected because: ${reason}`);\n        if (reason.startsWith(\"io server disconnect\")) {\n          console.warn(\"Socket desconectado por el servidor\");\n          token = localStorage.getItem(\"token\");\n          \n          if ( isExpired(token) ) {\n            console.warn(\"Token expirado - redirigiendo al login\");\n            localStorage.removeItem(\"token\");\n            window.location.href = \"/login\";\n            return;\n          }\n          console.warn(\"Intentando reconectar socket...\");\n          return;\n        }        \n      });\n      \n      this.currentSocket.on(\"connect\", (...params) => {\n        console.debug(\"socket connected\", params);\n      })\n      \n      this.currentSocket.onAny((event, ...args) => {\n        console.debug(\"Event: \", { socket: this.currentSocket, event, args });\n      });\n      \n      this.onReady(() => {\n        this.socketReady = true;\n      });\n\n    }\n    \n    return new ManagedSocket(this);\n  },\n  \n  onReady: function( callbackReady ) {\n    if (this.socketReady) {\n      callbackReady();\n      return\n    }\n    \n    this.currentSocket.once(\"ready\", () => {\n      callbackReady();\n    });\n  },\n  \n  onConnect: function( callbackReady ) { this.onReady( callbackReady ) },\n\n};\n\nconst SocketContext = createContext()\n\nexport { SocketContext, SocketManager };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}