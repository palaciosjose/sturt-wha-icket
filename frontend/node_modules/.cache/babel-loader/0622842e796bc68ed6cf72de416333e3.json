{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\whaticket03\\\\waticketsaas\\\\frontend\\\\src\\\\components\\\\QueueOptions\\\\index.js\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, Grid, IconButton, StepContent, TextField, Dialog, DialogTitle, DialogContent, DialogActions, Select, MenuItem, FormControl, InputLabel } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { AttachFile, DeleteOutline } from \"@material-ui/icons\";\nimport { head } from \"lodash\";\nimport { i18n } from \"../../translate/i18n\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    //height: 400,\n    [theme.breakpoints.down(\"sm\")]: {\n      maxHeight: \"20vh\"\n    }\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  input: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  addButton: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport function QueueOptionStepper({\n  queueId,\n  options,\n  updateOptions\n}) {\n  const classes = useStyles();\n  const [activeOption, setActiveOption] = useState(-1);\n  const [attachment, setAttachment] = useState(null);\n  const attachmentFile = useRef(null);\n  const [transferModalOpen, setTransferModalOpen] = useState(false);\n  const [selectedOptionForTransfer, setSelectedOptionForTransfer] = useState(null);\n  const [queues, setQueues] = useState([]);\n\n  // ✅ CARGAR DEPARTAMENTOS PARA TRANSFERENCIA\n  const loadQueues = async () => {\n    try {\n      const {\n        data\n      } = await api.get(\"/queue\");\n      setQueues(data);\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  // ✅ ABRIR MODAL DE TRANSFERENCIA\n  const openTransferModal = option => {\n    setSelectedOptionForTransfer(option);\n    setTransferModalOpen(true);\n    loadQueues();\n  };\n\n  // ✅ ELIMINAR TRANSFERENCIA\n  const handleRemoveTransfer = async option => {\n    try {\n      const optionToUpdate = {\n        ...option,\n        transferQueueId: null\n      };\n      await api.request({\n        url: `/queue-options/${optionToUpdate.id}`,\n        method: \"PUT\",\n        data: optionToUpdate\n      });\n\n      // ✅ ACTUALIZAR LA OPCIÓN EN EL ARRAY LOCAL\n      const optionIndex = options.findIndex(opt => opt.id === optionToUpdate.id);\n      if (optionIndex !== -1) {\n        options[optionIndex] = optionToUpdate;\n      }\n      updateOptions();\n      toastError(\"Transferencia eliminada correctamente\");\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  // ✅ GUARDAR TRANSFERENCIA EN ESTADO TEMPORAL\n  const handleSaveTransfer = async transferQueueId => {\n    try {\n      let optionToUpdate = {\n        ...selectedOptionForTransfer,\n        transferQueueId\n      };\n\n      // ✅ NO GUARDAR EN DB, SOLO MANTENER EN MEMORIA\n      const optionIndex = options.findIndex(opt => opt === selectedOptionForTransfer);\n      if (optionIndex !== -1) {\n        options[optionIndex] = optionToUpdate;\n      }\n      setTransferModalOpen(false);\n      setSelectedOptionForTransfer(null);\n      updateOptions();\n\n      // ✅ MOSTRAR MENSAJE TEMPORAL\n      toastError(\"Transferencia configurada temporalmente. Presiona 'AGREGAR' para guardar el departamento completo.\");\n    } catch (e) {\n      toastError(e);\n    }\n  };\n  const handleOption = index => async () => {\n    setActiveOption(index);\n    const option = options[index];\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        const {\n          data\n        } = await api.request({\n          url: \"/queue-options\",\n          method: \"GET\",\n          params: {\n            queueId,\n            parentId: option.id\n          }\n        });\n        const optionList = data.map(option => {\n          return {\n            ...option,\n            children: [],\n            edition: false\n          };\n        });\n        option.children = optionList;\n        updateOptions();\n      } catch (e) {\n        toastError(e);\n      }\n    }\n  };\n\n  // ✅ GUARDAR OPCIÓN EN ESTADO TEMPORAL (NO EN DB)\n  const handleSave = async option => {\n    try {\n      console.log(\"💾 Guardando opción temporalmente:\", option);\n\n      // ✅ VERIFICAR QUE TENGA DATOS\n      if (!option.title || option.title.trim() === \"\") {\n        toastError(\"Debes ingresar un título para la opción\");\n        return;\n      }\n\n      // ✅ NO GUARDAR EN DB, SOLO MANTENER EN MEMORIA\n      option.edition = false;\n\n      // ✅ ASEGURAR QUE LOS DATOS SE MANTENGAN\n      const optionIndex = options.findIndex(opt => opt === option);\n      if (optionIndex !== -1) {\n        options[optionIndex] = {\n          ...option\n        };\n        console.log(\"✅ Opción guardada en memoria:\", options[optionIndex]);\n      }\n      updateOptions();\n\n      // ✅ MOSTRAR MENSAJE TEMPORAL\n      toastError(\"Opción guardada temporalmente. Presiona 'AGREGAR' para guardar el departamento completo.\");\n    } catch (e) {\n      console.error(\"❌ Error al guardar opción:\", e);\n      toastError(e);\n    }\n  };\n  const handleEdition = index => {\n    options[index].edition = !options[index].edition;\n    updateOptions();\n  };\n  const handleDeleteOption = async index => {\n    const option = options[index];\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"DELETE\"\n        });\n      } catch (e) {\n        toastError(e);\n      }\n    }\n    options.splice(index, 1);\n    options.forEach(async (option, order) => {\n      option.option = order + 1;\n      await handleSave(option);\n    });\n    updateOptions();\n  };\n  const handleAttachmentFile = e => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n  const handleOptionChangeTitle = (event, index) => {\n    options[index].title = event.target.value;\n    updateOptions();\n  };\n  const handleOptionChangeMessage = (event, index) => {\n    options[index].message = event.target.value;\n    updateOptions();\n  };\n  const renderTitle = index => {\n    const option = options[index];\n    if (option.edition) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n        value: option.title,\n        onChange: event => handleOptionChangeTitle(event, index),\n        size: \"small\",\n        className: classes.input,\n        placeholder: i18n.t(\"queueOptions.placeholder.title\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        ref: attachmentFile,\n        onChange: e => handleAttachmentFile(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      })), option.edition && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        variant: \"outlined\",\n        size: \"small\",\n        className: classes.button,\n        onClick: () => handleSave(option),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(SaveIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        size: \"small\",\n        className: classes.button,\n        onClick: () => handleDeleteOption(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }\n      })), !attachment && !option.mediaPath && /*#__PURE__*/React.createElement(IconButton, {\n        variant: \"outlined\",\n        color: \"primary\",\n        size: \"small\",\n        className: classes.button,\n        onClick: () => attachmentFile.current.click(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AttachFile, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }\n      })), (option.mediaPath || attachment) && /*#__PURE__*/React.createElement(Grid, {\n        xs: 12,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(AttachFile, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 42\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 23\n        }\n      }, attachment != null ? attachment.name : option.mediaName), /*#__PURE__*/React.createElement(IconButton, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 27\n        }\n      }))), option.transferQueueId && /*#__PURE__*/React.createElement(React.Fragment, null, (() => {\n        const transferQueue = queues.find(q => q.id === option.transferQueueId);\n        return transferQueue ? /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body2\",\n          style: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            marginLeft: '8px',\n            color: 'green',\n            cursor: 'pointer',\n            fontSize: '0.875rem'\n          },\n          onClick: () => openTransferModal(option),\n          title: \"Click para editar transferencia\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 23\n          }\n        }, \"\\u2192 \", transferQueue.name) : null;\n      })(), /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        className: classes.button,\n        onClick: () => openTransferModal(option),\n        style: {\n          color: 'blue',\n          marginLeft: '4px'\n        },\n        title: \"Editar transferencia\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(EditIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        className: classes.button,\n        onClick: () => handleRemoveTransfer(option),\n        style: {\n          color: 'red',\n          marginLeft: '2px'\n        },\n        title: \"Eliminar transferencia\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      })))));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }\n    }, option.title !== \"\" ? option.title : i18n.t(\"queueOptions.undefinedTitle\"), /*#__PURE__*/React.createElement(IconButton, {\n      variant: \"outlined\",\n      size: \"small\",\n      className: classes.button,\n      onClick: () => handleEdition(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }))));\n  };\n  const renderMessage = index => {\n    const option = options[index];\n    if (option.edition) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n        style: {\n          width: \"100%\"\n        },\n        multiline: true,\n        value: option.message,\n        onChange: event => handleOptionChangeMessage(event, index),\n        size: \"small\",\n        className: classes.input,\n        placeholder: i18n.t(\"queueOptions.placeholder.message\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }\n      }));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      onClick: () => handleEdition(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }\n    }, option.message));\n  };\n  const handleAddOption = index => {\n    const optionNumber = options[index].children.length + 1;\n    options[index].children.push({\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: optionNumber,\n      queueId,\n      parentId: options[index].id,\n      children: []\n    });\n    updateOptions();\n  };\n  const renderStep = (option, index) => {\n    return /*#__PURE__*/React.createElement(Step, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: handleOption(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }\n    }, renderTitle(index)), /*#__PURE__*/React.createElement(StepContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }\n    }, renderMessage(index), option.id !== undefined && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      size: \"small\",\n      onClick: () => handleAddOption(index),\n      startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 28\n        }\n      }),\n      variant: \"outlined\",\n      className: classes.addButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 15\n      }\n    }, i18n.t(\"queueOptions.add\"))), /*#__PURE__*/React.createElement(QueueOptionStepper, {\n      queueId: queueId,\n      options: option.children,\n      updateOptions: updateOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }\n    })));\n  };\n  const renderStepper = () => {\n    return /*#__PURE__*/React.createElement(Stepper, {\n      style: {\n        marginBottom: 0,\n        paddingBottom: 0\n      },\n      nonLinear: true,\n      activeStep: activeOption,\n      orientation: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 7\n      }\n    }, options.map((option, index) => renderStep(option, index)));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderStepper(), /*#__PURE__*/React.createElement(Dialog, {\n    open: transferModalOpen,\n    onClose: () => setTransferModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDD17 Configurar Transferencia - \", selectedOptionForTransfer === null || selectedOptionForTransfer === void 0 ? void 0 : selectedOptionForTransfer.title), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      marginBottom: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }, \"Selecciona el departamento destino para esta opci\\xF3n:\"), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }\n  }, \"Departamento Destino\"), /*#__PURE__*/React.createElement(Select, {\n    value: (selectedOptionForTransfer === null || selectedOptionForTransfer === void 0 ? void 0 : selectedOptionForTransfer.transferQueueId) || \"\",\n    onChange: e => {\n      const updatedOption = {\n        ...selectedOptionForTransfer,\n        transferQueueId: e.target.value\n      };\n      setSelectedOptionForTransfer(updatedOption);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  }, \"-- Sin transferencia --\")), queues.map(queue => /*#__PURE__*/React.createElement(MenuItem, {\n    key: queue.id,\n    value: queue.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 17\n    }\n  }, queue.name))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTransferModalOpen(false),\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 11\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleSaveTransfer(selectedOptionForTransfer === null || selectedOptionForTransfer === void 0 ? void 0 : selectedOptionForTransfer.transferQueueId),\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 11\n    }\n  }, \"Guardar Transferencia\"))));\n}\nexport function QueueOptions({\n  queueId,\n  onSaveOptionsRef\n}) {\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (queueId) {\n      const fetchOptions = async () => {\n        try {\n          const {\n            data\n          } = await api.request({\n            url: \"/queue-options\",\n            method: \"GET\",\n            params: {\n              queueId,\n              parentId: -1\n            }\n          });\n          const optionList = data.map(option => {\n            return {\n              ...option,\n              children: [],\n              edition: false\n            };\n          });\n          setOptions(optionList);\n        } catch (e) {\n          toastError(e);\n        }\n      };\n      fetchOptions();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const renderStepper = () => {\n    if (options.length > 0) {\n      return /*#__PURE__*/React.createElement(QueueOptionStepper, {\n        queueId: queueId,\n        updateOptions: updateOptions,\n        options: options,\n        saveAllOptions: saveAllOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  // ✅ GUARDAR TODAS LAS OPCIONES EN DB\n  const saveAllOptions = useCallback(async () => {\n    try {\n      console.log(\"🔄 saveAllOptions iniciado con opciones:\", options);\n      console.log(\"🔍 Detalles de opciones:\", JSON.stringify(options, null, 2));\n      console.log(\"🔍 Número de opciones:\", options.length);\n      console.log(\"🔍 Opciones con título:\", options.filter(opt => opt.title && opt.title.trim() !== \"\").length);\n\n      // ✅ VERIFICAR SI HAY OPCIONES PARA GUARDAR\n      if (!options || options.length === 0) {\n        console.log(\"⚠️ No hay opciones para guardar\");\n        return;\n      }\n      let savedCount = 0;\n\n      // ✅ GUARDAR CADA OPCIÓN EN DB\n      for (const option of options) {\n        console.log(`📝 Procesando opción:`, option);\n        console.log(`🔍 Título: \"${option.title}\", ID: ${option.id}, QueueId: ${option.queueId}`);\n        if (option.title && option.title.trim() !== \"\") {\n          if (option.id) {\n            // ✅ UPDATE OPCIÓN EXISTENTE\n            console.log(`🔄 UPDATE opción existente ID: ${option.id}`);\n            const updateResponse = await api.request({\n              url: `/queue-options/${option.id}`,\n              method: \"PUT\",\n              data: option\n            });\n            console.log(`✅ UPDATE respuesta:`, updateResponse);\n            savedCount++;\n          } else {\n            // ✅ INSERT NUEVA OPCIÓN\n            console.log(`➕ INSERT nueva opción: ${option.title}`);\n            console.log(`📤 Datos a enviar:`, option);\n            const {\n              data\n            } = await api.request({\n              url: `/queue-options`,\n              method: \"POST\",\n              data: option\n            });\n            console.log(`✅ INSERT respuesta:`, data);\n            option.id = data.id;\n            console.log(`✅ Nueva opción creada con ID: ${data.id}`);\n            savedCount++;\n          }\n\n          // ✅ GUARDAR ARCHIVOS ADJUNTOS\n          if (option.mediaPath) {\n            console.log(`📎 Guardando archivo adjunto para opción ${option.id}`);\n            const formData = new FormData();\n            formData.append(\"file\", option.mediaPath);\n            await api.post(`/queue-options/${option.id}/media-upload`, formData);\n          }\n        } else {\n          console.log(`⚠️ Opción sin título, saltando:`, option);\n        }\n      }\n      if (savedCount > 0) {\n        console.log(`✅ saveAllOptions completado exitosamente. ${savedCount} opciones guardadas.`);\n        toastError(`Todas las opciones guardadas correctamente.`);\n      } else {\n        console.log(\"⚠️ No se guardó ninguna opción\");\n      }\n    } catch (e) {\n      console.error(\"❌ Error en saveAllOptions:\", e);\n      console.error(\"❌ Stack trace:\", e.stack);\n      toastError(e);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateOptions = () => {\n    setOptions([...options]);\n  };\n\n  // ✅ EXPONER FUNCIÓN A TRAVÉS DE REFERENCIA\n  useEffect(() => {\n    if (onSaveOptionsRef) {\n      console.log(\"🔗 Pasando saveAllOptions al padre\");\n      console.log(\"🔍 Tipo de saveAllOptions:\", typeof saveAllOptions);\n      console.log(\"🔍 Opciones actuales:\", options.length);\n      onSaveOptionsRef(saveAllOptions);\n    }\n  }, [onSaveOptionsRef]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const addOption = () => {\n    const newOption = {\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: options.length + 1,\n      queueId,\n      parentId: null,\n      children: []\n    };\n    setOptions([...options, newOption]);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 7\n    }\n  }, i18n.t(\"queueOptions.title\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    onClick: addOption,\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 22\n      }\n    }),\n    style: {\n      marginLeft: 10\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 9\n    }\n  }, i18n.t(\"queueOptions.add\"))), renderStepper());\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","makeStyles","Stepper","Step","StepLabel","Typography","Button","Grid","IconButton","StepContent","TextField","Dialog","DialogTitle","DialogContent","DialogActions","Select","MenuItem","FormControl","InputLabel","AddIcon","DeleteOutlineIcon","SaveIcon","EditIcon","LinkIcon","api","toastError","AttachFile","DeleteOutline","head","i18n","useStyles","theme","root","width","breakpoints","down","maxHeight","button","marginRight","spacing","input","marginTop","marginBottom","addButton","QueueOptionStepper","queueId","options","updateOptions","classes","activeOption","setActiveOption","attachment","setAttachment","attachmentFile","transferModalOpen","setTransferModalOpen","selectedOptionForTransfer","setSelectedOptionForTransfer","queues","setQueues","loadQueues","data","get","e","openTransferModal","option","handleRemoveTransfer","optionToUpdate","transferQueueId","request","url","id","method","optionIndex","findIndex","opt","handleSaveTransfer","handleOption","index","undefined","params","parentId","optionList","map","children","edition","handleSave","console","log","title","trim","error","handleEdition","handleDeleteOption","splice","forEach","order","handleAttachmentFile","file","target","files","handleOptionChangeTitle","event","value","handleOptionChangeMessage","message","renderTitle","createElement","Fragment","onChange","size","className","placeholder","t","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","display","type","ref","color","variant","onClick","mediaPath","current","click","xs","item","startIcon","name","mediaName","transferQueue","find","q","alignItems","marginLeft","cursor","fontSize","renderMessage","multiline","handleAddOption","optionNumber","length","push","renderStep","key","renderStepper","paddingBottom","nonLinear","activeStep","orientation","open","onClose","fullWidth","updatedOption","queue","QueueOptions","onSaveOptionsRef","setOptions","fetchOptions","saveAllOptions","JSON","stringify","filter","savedCount","updateResponse","formData","FormData","append","post","stack","addOption","newOption"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/components/QueueOptions/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, Grid, IconButton, StepContent, TextField, Dialog, DialogTitle, DialogContent, DialogActions, Select, MenuItem, FormControl, InputLabel } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { AttachFile, DeleteOutline } from \"@material-ui/icons\";\nimport { head } from \"lodash\";\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    //height: 400,\n    [theme.breakpoints.down(\"sm\")]: {\n      maxHeight: \"20vh\",\n    },\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  addButton: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport function QueueOptionStepper({ queueId, options, updateOptions }) {\n  const classes = useStyles();\n  const [activeOption, setActiveOption] = useState(-1);\n  const [attachment, setAttachment] = useState(null);\n  const attachmentFile = useRef(null);\n  const [transferModalOpen, setTransferModalOpen] = useState(false);\n  const [selectedOptionForTransfer, setSelectedOptionForTransfer] = useState(null);\n  const [queues, setQueues] = useState([]);\n\n\n  // ✅ CARGAR DEPARTAMENTOS PARA TRANSFERENCIA\n  const loadQueues = async () => {\n    try {\n      const { data } = await api.get(\"/queue\");\n      setQueues(data);\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  // ✅ ABRIR MODAL DE TRANSFERENCIA\n  const openTransferModal = (option) => {\n    setSelectedOptionForTransfer(option);\n    setTransferModalOpen(true);\n    loadQueues();\n  };\n\n  // ✅ ELIMINAR TRANSFERENCIA\n  const handleRemoveTransfer = async (option) => {\n    try {\n      const optionToUpdate = { ...option, transferQueueId: null };\n      \n      await api.request({\n        url: `/queue-options/${optionToUpdate.id}`,\n        method: \"PUT\",\n        data: optionToUpdate,\n      });\n      \n      // ✅ ACTUALIZAR LA OPCIÓN EN EL ARRAY LOCAL\n      const optionIndex = options.findIndex(opt => opt.id === optionToUpdate.id);\n      if (optionIndex !== -1) {\n        options[optionIndex] = optionToUpdate;\n      }\n      \n      updateOptions();\n      toastError(\"Transferencia eliminada correctamente\");\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  // ✅ GUARDAR TRANSFERENCIA EN ESTADO TEMPORAL\n  const handleSaveTransfer = async (transferQueueId) => {\n    try {\n      let optionToUpdate = { ...selectedOptionForTransfer, transferQueueId };\n      \n      // ✅ NO GUARDAR EN DB, SOLO MANTENER EN MEMORIA\n      const optionIndex = options.findIndex(opt => opt === selectedOptionForTransfer);\n      if (optionIndex !== -1) {\n        options[optionIndex] = optionToUpdate;\n      }\n      \n      setTransferModalOpen(false);\n      setSelectedOptionForTransfer(null);\n      updateOptions();\n      \n      // ✅ MOSTRAR MENSAJE TEMPORAL\n      toastError(\"Transferencia configurada temporalmente. Presiona 'AGREGAR' para guardar el departamento completo.\");\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  const handleOption = (index) => async () => {\n    setActiveOption(index);\n    const option = options[index];\n\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        const { data } = await api.request({\n          url: \"/queue-options\",\n          method: \"GET\",\n          params: { queueId, parentId: option.id },\n        });\n        const optionList = data.map((option) => {\n          return {\n            ...option,\n            children: [],\n            edition: false,\n          };\n        });\n        option.children = optionList;\n        updateOptions();\n      } catch (e) {\n        toastError(e);\n      }\n    }\n  };\n\n  // ✅ GUARDAR OPCIÓN EN ESTADO TEMPORAL (NO EN DB)\n  const handleSave = async (option) => {\n    try {\n      console.log(\"💾 Guardando opción temporalmente:\", option);\n      \n      // ✅ VERIFICAR QUE TENGA DATOS\n      if (!option.title || option.title.trim() === \"\") {\n        toastError(\"Debes ingresar un título para la opción\");\n        return;\n      }\n      \n      // ✅ NO GUARDAR EN DB, SOLO MANTENER EN MEMORIA\n      option.edition = false;\n      \n      // ✅ ASEGURAR QUE LOS DATOS SE MANTENGAN\n      const optionIndex = options.findIndex(opt => opt === option);\n      if (optionIndex !== -1) {\n        options[optionIndex] = { ...option };\n        console.log(\"✅ Opción guardada en memoria:\", options[optionIndex]);\n      }\n      \n      updateOptions();\n      \n      // ✅ MOSTRAR MENSAJE TEMPORAL\n      toastError(\"Opción guardada temporalmente. Presiona 'AGREGAR' para guardar el departamento completo.\");\n    } catch (e) {\n      console.error(\"❌ Error al guardar opción:\", e);\n      toastError(e);\n    }\n  };\n\n\n\n  const handleEdition = (index) => {\n    options[index].edition = !options[index].edition;\n    updateOptions();\n  };\n\n  const handleDeleteOption = async (index) => {\n    const option = options[index];\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"DELETE\",\n        });\n      } catch (e) {\n        toastError(e);\n      }\n    }\n    options.splice(index, 1);\n    options.forEach(async (option, order) => {\n      option.option = order + 1;\n      await handleSave(option);\n    });\n    updateOptions();\n  };\n\n  const handleAttachmentFile = (e) => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n\n  const handleOptionChangeTitle = (event, index) => {\n    options[index].title = event.target.value;\n    updateOptions();\n  };\n\n  const handleOptionChangeMessage = (event, index) => {\n    options[index].message = event.target.value;\n    updateOptions();\n  };\n\n  const renderTitle = (index) => {\n    const option = options[index];\n    if (option.edition) {\n      return (\n        <>\n          <TextField\n            value={option.title}\n            onChange={(event) => handleOptionChangeTitle(event, index)}\n            size=\"small\"\n            className={classes.input}\n            placeholder={i18n.t(\"queueOptions.placeholder.title\")}\n          />\n                    <div style={{ display: \"none\" }}>\n            <input\n              type=\"file\"\n              ref={attachmentFile}\n              onChange={(e) => handleAttachmentFile(e)}\n            />\n          </div>\n          {option.edition && (\n            <>\n              <IconButton\n                color=\"primary\"\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => handleSave(option)}\n              >\n                <SaveIcon />\n              </IconButton>\n              <IconButton\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => handleDeleteOption(index)}\n              >\n                <DeleteOutlineIcon />\n              </IconButton>\n              {!attachment && !option.mediaPath && (\n                <IconButton\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                  className={classes.button}\n                    onClick={() => attachmentFile.current.click()}\n                  >\n                  <AttachFile/>\n                </IconButton>\n              )}\n                             {(option.mediaPath || attachment) && (\n                    <Grid xs={12} item>\n                      <Button startIcon={<AttachFile />}>\n                        {attachment != null\n                          ? attachment.name\n                          : option.mediaName}\n                      </Button>\n                      \n                        <IconButton\n                          color=\"secondary\"\n                        >\n                          <DeleteOutline />\n                        </IconButton>\n                    </Grid>\n                  )}\n              \n              {/* ✅ ICONO DE TRANSFERENCIA DENTRO DEL MODO EDICIÓN - TEMPORALMENTE COMENTADO\n              <IconButton\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => openTransferModal(option)}\n                style={{ \n                  color: option.transferQueueId ? 'green' : 'gray',\n                  marginLeft: '5px'\n                }}\n                title=\"Configurar transferencia de departamento\"\n              >\n                <LinkIcon />\n              </IconButton>\n              */}\n              \n              {/* ✅ INDICADOR DE TRANSFERENCIA CONFIGURADA */}\n              {option.transferQueueId && (\n                <>\n                  {/* Buscar el nombre del departamento destino */}\n                  {(() => {\n                    const transferQueue = queues.find(q => q.id === option.transferQueueId);\n                    return transferQueue ? (\n                      <Typography\n                        variant=\"body2\"\n                        style={{\n                          display: 'inline-flex',\n                          alignItems: 'center',\n                          marginLeft: '8px',\n                          color: 'green',\n                          cursor: 'pointer',\n                          fontSize: '0.875rem'\n                        }}\n                        onClick={() => openTransferModal(option)}\n                        title=\"Click para editar transferencia\"\n                      >\n                        → {transferQueue.name}\n                      </Typography>\n                    ) : null;\n                  })()}\n                  \n                  {/* ✅ BOTÓN EDITAR TRANSFERENCIA */}\n                  <IconButton\n                    size=\"small\"\n                    className={classes.button}\n                    onClick={() => openTransferModal(option)}\n                    style={{ \n                      color: 'blue',\n                      marginLeft: '4px'\n                    }}\n                    title=\"Editar transferencia\"\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  \n                  {/* ✅ BOTÓN ELIMINAR TRANSFERENCIA */}\n                  <IconButton\n                    size=\"small\"\n                    className={classes.button}\n                    onClick={() => handleRemoveTransfer(option)}\n                    style={{ \n                      color: 'red',\n                      marginLeft: '2px'\n                    }}\n                    title=\"Eliminar transferencia\"\n                  >\n                    <DeleteOutlineIcon />\n                  </IconButton>\n                </>\n              )}\n            </>\n          )}\n        </>\n      );\n    }\n    return (\n      <>\n        <Typography>\n          {option.title !== \"\" ? option.title : i18n.t(\"queueOptions.undefinedTitle\")}\n          <IconButton\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => handleEdition(index)}\n          >\n            <EditIcon />\n          </IconButton>\n        </Typography>\n      </>\n    );\n  };\n\n  const renderMessage = (index) => {\n    const option = options[index];\n    if (option.edition) {\n      return (\n        <>\n          <TextField\n            style={{ width: \"100%\" }}\n            multiline\n            value={option.message}\n            onChange={(event) => handleOptionChangeMessage(event, index)}\n            size=\"small\"\n            className={classes.input}\n            placeholder={i18n.t(\"queueOptions.placeholder.message\")}\n          />\n        </>\n      );\n    }\n    return (\n      <>\n        <Typography onClick={() => handleEdition(index)}>\n          {option.message}\n        </Typography>\n      </>\n    );\n  };\n\n  const handleAddOption = (index) => {\n    const optionNumber = options[index].children.length + 1;\n    options[index].children.push({\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: optionNumber,\n      queueId,\n      parentId: options[index].id,\n      children: [],\n    });\n    updateOptions();\n  };\n\n  const renderStep = (option, index) => {\n    return (\n      <Step key={index}>\n        <StepLabel style={{ cursor: \"pointer\" }} onClick={handleOption(index)}>\n          {renderTitle(index)}\n        </StepLabel>\n        <StepContent>\n          {renderMessage(index)}\n\n          {option.id !== undefined && (\n            <>\n              <Button\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => handleAddOption(index)}\n                startIcon={<AddIcon />}\n                variant=\"outlined\"\n                className={classes.addButton}\n              >\n                {i18n.t(\"queueOptions.add\")}\n              </Button>\n            </>\n          )}\n          <QueueOptionStepper\n            queueId={queueId}\n            options={option.children}\n            updateOptions={updateOptions}\n          />\n        </StepContent>\n      </Step>\n    );\n  };\n\n  const renderStepper = () => {\n    return (\n      <Stepper\n        style={{ marginBottom: 0, paddingBottom: 0 }}\n        nonLinear\n        activeStep={activeOption}\n        orientation=\"vertical\"\n      >\n        {options.map((option, index) => renderStep(option, index))}\n      </Stepper>\n    );\n  };\n\n  return (\n    <>\n      {renderStepper()}\n      \n      {/* ✅ MODAL DE TRANSFERENCIA */}\n      <Dialog open={transferModalOpen} onClose={() => setTransferModalOpen(false)}>\n        <DialogTitle>\n          🔗 Configurar Transferencia - {selectedOptionForTransfer?.title}\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" style={{ marginBottom: '16px' }}>\n            Selecciona el departamento destino para esta opción:\n          </Typography>\n          \n          <FormControl fullWidth>\n            <InputLabel>Departamento Destino</InputLabel>\n            <Select\n              value={selectedOptionForTransfer?.transferQueueId || \"\"}\n              onChange={(e) => {\n                const updatedOption = { ...selectedOptionForTransfer, transferQueueId: e.target.value };\n                setSelectedOptionForTransfer(updatedOption);\n              }}\n            >\n              <MenuItem value=\"\">\n                <em>-- Sin transferencia --</em>\n              </MenuItem>\n              {queues.map((queue) => (\n                <MenuItem key={queue.id} value={queue.id}>\n                  {queue.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setTransferModalOpen(false)} color=\"secondary\">\n            Cancelar\n          </Button>\n          <Button \n            onClick={() => handleSaveTransfer(selectedOptionForTransfer?.transferQueueId)}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Guardar Transferencia\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport function QueueOptions({ queueId, onSaveOptionsRef }) {\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (queueId) {\n      const fetchOptions = async () => {\n        try {\n          const { data } = await api.request({\n            url: \"/queue-options\",\n            method: \"GET\",\n            params: { queueId, parentId: -1 },\n          });\n          const optionList = data.map((option) => {\n            return {\n              ...option,\n              children: [],\n              edition: false,\n            };\n          });\n          setOptions(optionList);\n        } catch (e) {\n          toastError(e);\n        }\n      };\n      fetchOptions();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderStepper = () => {\n    if (options.length > 0) {\n      return (\n        <QueueOptionStepper\n          queueId={queueId}\n          updateOptions={updateOptions}\n          options={options}\n          saveAllOptions={saveAllOptions}\n        />\n      );\n    }\n  };\n\n  // ✅ GUARDAR TODAS LAS OPCIONES EN DB\n  const saveAllOptions = useCallback(async () => {\n    try {\n      console.log(\"🔄 saveAllOptions iniciado con opciones:\", options);\n      console.log(\"🔍 Detalles de opciones:\", JSON.stringify(options, null, 2));\n      console.log(\"🔍 Número de opciones:\", options.length);\n      console.log(\"🔍 Opciones con título:\", options.filter(opt => opt.title && opt.title.trim() !== \"\").length);\n      \n      // ✅ VERIFICAR SI HAY OPCIONES PARA GUARDAR\n      if (!options || options.length === 0) {\n        console.log(\"⚠️ No hay opciones para guardar\");\n        return;\n      }\n      \n      let savedCount = 0;\n      \n      // ✅ GUARDAR CADA OPCIÓN EN DB\n      for (const option of options) {\n        console.log(`📝 Procesando opción:`, option);\n        console.log(`🔍 Título: \"${option.title}\", ID: ${option.id}, QueueId: ${option.queueId}`);\n        \n        if (option.title && option.title.trim() !== \"\") {\n          if (option.id) {\n            // ✅ UPDATE OPCIÓN EXISTENTE\n            console.log(`🔄 UPDATE opción existente ID: ${option.id}`);\n            const updateResponse = await api.request({\n              url: `/queue-options/${option.id}`,\n              method: \"PUT\",\n              data: option,\n            });\n            console.log(`✅ UPDATE respuesta:`, updateResponse);\n            savedCount++;\n          } else {\n            // ✅ INSERT NUEVA OPCIÓN\n            console.log(`➕ INSERT nueva opción: ${option.title}`);\n            console.log(`📤 Datos a enviar:`, option);\n            const { data } = await api.request({\n              url: `/queue-options`,\n              method: \"POST\",\n              data: option,\n            });\n            console.log(`✅ INSERT respuesta:`, data);\n            option.id = data.id;\n            console.log(`✅ Nueva opción creada con ID: ${data.id}`);\n            savedCount++;\n          }\n          \n          // ✅ GUARDAR ARCHIVOS ADJUNTOS\n          if (option.mediaPath) {\n            console.log(`📎 Guardando archivo adjunto para opción ${option.id}`);\n            const formData = new FormData();\n            formData.append(\"file\", option.mediaPath);\n            await api.post(`/queue-options/${option.id}/media-upload`, formData);\n          }\n        } else {\n          console.log(`⚠️ Opción sin título, saltando:`, option);\n        }\n      }\n      \n      if (savedCount > 0) {\n        console.log(`✅ saveAllOptions completado exitosamente. ${savedCount} opciones guardadas.`);\n        toastError(`Todas las opciones guardadas correctamente.`);\n      } else {\n        console.log(\"⚠️ No se guardó ninguna opción\");\n      }\n    } catch (e) {\n      console.error(\"❌ Error en saveAllOptions:\", e);\n      console.error(\"❌ Stack trace:\", e.stack);\n      toastError(e);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateOptions = () => {\n    setOptions([...options]);\n  };\n\n  // ✅ EXPONER FUNCIÓN A TRAVÉS DE REFERENCIA\n  useEffect(() => {\n    if (onSaveOptionsRef) {\n      console.log(\"🔗 Pasando saveAllOptions al padre\");\n      console.log(\"🔍 Tipo de saveAllOptions:\", typeof saveAllOptions);\n      console.log(\"🔍 Opciones actuales:\", options.length);\n      onSaveOptionsRef(saveAllOptions);\n    }\n  }, [onSaveOptionsRef]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const addOption = () => {\n    const newOption = {\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: options.length + 1,\n      queueId,\n      parentId: null,\n      children: [],\n    };\n    setOptions([...options, newOption]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <br />\n      <Typography>\n        {i18n.t(\"queueOptions.title\")}\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          onClick={addOption}\n          startIcon={<AddIcon />}\n          style={{ marginLeft: 10 }}\n          variant=\"outlined\"\n        >\n          {i18n.t(\"queueOptions.add\")}\n        </Button>\n      </Typography>\n      {renderStepper()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}