{"ast":null,"code":"// Sistema de logging configurable\n// Permite activar/desactivar logs seg√∫n el entorno\n\nconst LOG_LEVELS = {\n  ERROR: 0,\n  WARN: 1,\n  INFO: 2,\n  DEBUG: 3\n};\n\n// Configuraci√≥n por defecto\nconst DEFAULT_CONFIG = {\n  level: LOG_LEVELS.DEBUG,\n  // Siempre debug para desarrollo\n  enableConsole: true,\n  // Siempre habilitado en desarrollo\n  enableServiceWorker: false,\n  enableSocket: false,\n  enableWhatsApp: false,\n  enableTransferModal: false,\n  enableDashboard: false\n};\n\n// Configuraci√≥n desde localStorage (permite cambiar en tiempo real)\nconst getConfig = () => {\n  try {\n    const savedConfig = localStorage.getItem('loggerConfig');\n    if (savedConfig) {\n      const parsedConfig = JSON.parse(savedConfig);\n      return {\n        ...DEFAULT_CONFIG,\n        ...parsedConfig\n      };\n    }\n    return DEFAULT_CONFIG;\n  } catch (error) {\n    return DEFAULT_CONFIG;\n  }\n};\n\n// Funci√≥n principal de logging\nconst log = (level, category, message, ...args) => {\n  const config = getConfig();\n\n  // Verificar si el nivel est√° habilitado\n  if (level > config.level) return;\n\n  // Verificar si la categor√≠a est√° habilitada\n  const categoryEnabled = config[`enable${category}`] !== undefined ? config[`enable${category}`] : true;\n  if (!categoryEnabled) return;\n\n  // Verificar si console est√° habilitado\n  if (!config.enableConsole) return;\n\n  // Generar el mensaje con timestamp\n  const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\n  const prefix = `[${timestamp}] [${category}]`;\n\n  // Usar el m√©todo de console apropiado\n  switch (level) {\n    case LOG_LEVELS.ERROR:\n      console.error(prefix, message, ...args);\n      break;\n    case LOG_LEVELS.WARN:\n      console.warn(prefix, message, ...args);\n      break;\n    case LOG_LEVELS.INFO:\n      console.info(prefix, message, ...args);\n      break;\n    case LOG_LEVELS.DEBUG:\n      console.log(prefix, message, ...args);\n      break;\n    default:\n      console.log(prefix, message, ...args);\n  }\n};\n\n// Funciones espec√≠ficas por categor√≠a\nexport const logger = {\n  // Logs generales\n  error: (message, ...args) => log(LOG_LEVELS.ERROR, 'General', message, ...args),\n  warn: (message, ...args) => log(LOG_LEVELS.WARN, 'General', message, ...args),\n  info: (message, ...args) => log(LOG_LEVELS.INFO, 'General', message, ...args),\n  debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'General', message, ...args),\n  // Logs de Service Worker\n  sw: {\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'ServiceWorker', message, ...args),\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'ServiceWorker', message, ...args),\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'ServiceWorker', message, ...args),\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'ServiceWorker', message, ...args)\n  },\n  // Logs de Socket\n  socket: {\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'Socket', message, ...args),\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'Socket', message, ...args),\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'Socket', message, ...args),\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'Socket', message, ...args)\n  },\n  // Logs de WhatsApp\n  whatsapp: {\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'WhatsApp', message, ...args),\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'WhatsApp', message, ...args),\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'WhatsApp', message, ...args),\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'WhatsApp', message, ...args)\n  },\n  // Logs de TransferModal\n  transferModal: {\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'TransferModal', message, ...args),\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'TransferModal', message, ...args),\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'TransferModal', message, ...args),\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'TransferModal', message, ...args)\n  },\n  // Logs de Dashboard\n  dashboard: {\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'Dashboard', message, ...args),\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'Dashboard', message, ...args),\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'Dashboard', message, ...args),\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'Dashboard', message, ...args)\n  },\n  // Configuraci√≥n\n  config: {\n    get: getConfig,\n    set: newConfig => {\n      try {\n        const currentConfig = getConfig();\n        const updatedConfig = {\n          ...currentConfig,\n          ...newConfig\n        };\n        localStorage.setItem('loggerConfig', JSON.stringify(updatedConfig));\n\n        // Actualizar control de logs nativos\n        if (!updatedConfig.enableConsole) {\n          setupNativeLogControl();\n        }\n        return true;\n      } catch (error) {\n        console.error('Error saving logger config:', error);\n        return false;\n      }\n    },\n    reset: () => {\n      try {\n        localStorage.removeItem('loggerConfig');\n        return true;\n      } catch (error) {\n        console.error('Error resetting logger config:', error);\n        return false;\n      }\n    }\n  }\n};\n\n// Sistema de control de logs nativos\nconst setupNativeLogControl = () => {\n  const config = getConfig();\n  if (!config.enableConsole) {\n    // Deshabilitar logs nativos cuando el sistema est√° deshabilitado\n    const originalConsoleLog = console.log;\n    const originalConsoleWarn = console.warn;\n    const originalConsoleError = console.error;\n    const originalConsoleInfo = console.info;\n    console.log = () => {};\n    console.warn = () => {};\n    console.error = () => {};\n    console.info = () => {};\n\n    // Restaurar despu√©s de un tiempo para no romper el sistema\n    setTimeout(() => {\n      console.log = originalConsoleLog;\n      console.warn = originalConsoleWarn;\n      console.error = originalConsoleError;\n      console.info = originalConsoleInfo;\n    }, 100);\n  }\n};\n\n// Log de prueba al cargar el logger\nconst currentConfig = getConfig();\nconsole.log(\"üîß DEBUG: Configuraci√≥n del logger cargada:\", currentConfig);\nconsole.log(\"üîß DEBUG: enableConsole =\", currentConfig.enableConsole);\nconsole.log(\"üîß DEBUG: level =\", currentConfig.level);\n\n// Logs de prueba directos para verificar funcionamiento\nif (currentConfig.enableConsole) {\n  console.log(\"‚úÖ LOGS HABILITADOS - Sistema funcionando\");\n  logger.debug(\"üöÄ Sistema de logging inicializado\");\n  logger.debug(\"üìã Configuraci√≥n actual:\", currentConfig);\n  logger.sw.debug(\"üß™ LOG DE PRUEBA - Service Worker inicializado\");\n  logger.socket.debug(\"üß™ LOG DE PRUEBA - Socket inicializado\");\n  logger.whatsapp.debug(\"üß™ LOG DE PRUEBA - WhatsApp inicializado\");\n  logger.transferModal.debug(\"üß™ LOG DE PRUEBA - Transfer Modal inicializado\");\n  logger.dashboard.debug(\"üß™ LOG DE PRUEBA - Dashboard inicializado\");\n} else {\n  console.log(\"‚ùå LOGS DESHABILITADOS - Revisar configuraci√≥n\");\n  setupNativeLogControl();\n}\nexport default logger;","map":{"version":3,"names":["LOG_LEVELS","ERROR","WARN","INFO","DEBUG","DEFAULT_CONFIG","level","enableConsole","enableServiceWorker","enableSocket","enableWhatsApp","enableTransferModal","enableDashboard","getConfig","savedConfig","localStorage","getItem","parsedConfig","JSON","parse","error","log","category","message","args","config","categoryEnabled","undefined","timestamp","Date","toISOString","split","prefix","console","warn","info","logger","debug","sw","socket","whatsapp","transferModal","dashboard","get","set","newConfig","currentConfig","updatedConfig","setItem","stringify","setupNativeLogControl","reset","removeItem","originalConsoleLog","originalConsoleWarn","originalConsoleError","originalConsoleInfo","setTimeout"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/utils/logger.js"],"sourcesContent":["// Sistema de logging configurable\r\n// Permite activar/desactivar logs seg√∫n el entorno\r\n\r\nconst LOG_LEVELS = {\r\n  ERROR: 0,\r\n  WARN: 1,\r\n  INFO: 2,\r\n  DEBUG: 3\r\n};\r\n\r\n// Configuraci√≥n por defecto\r\nconst DEFAULT_CONFIG = {\r\n  level: LOG_LEVELS.DEBUG, // Siempre debug para desarrollo\r\n  enableConsole: true, // Siempre habilitado en desarrollo\r\n  enableServiceWorker: false,\r\n  enableSocket: false,\r\n  enableWhatsApp: false,\r\n  enableTransferModal: false,\r\n  enableDashboard: false\r\n};\r\n\r\n// Configuraci√≥n desde localStorage (permite cambiar en tiempo real)\r\nconst getConfig = () => {\r\n  try {\r\n    const savedConfig = localStorage.getItem('loggerConfig');\r\n    if (savedConfig) {\r\n      const parsedConfig = JSON.parse(savedConfig);\r\n      return { ...DEFAULT_CONFIG, ...parsedConfig };\r\n    }\r\n    return DEFAULT_CONFIG;\r\n  } catch (error) {\r\n    return DEFAULT_CONFIG;\r\n  }\r\n};\r\n\r\n// Funci√≥n principal de logging\r\nconst log = (level, category, message, ...args) => {\r\n  const config = getConfig();\r\n  \r\n  // Verificar si el nivel est√° habilitado\r\n  if (level > config.level) return;\r\n  \r\n  // Verificar si la categor√≠a est√° habilitada\r\n  const categoryEnabled = config[`enable${category}`] !== undefined ? config[`enable${category}`] : true;\r\n  if (!categoryEnabled) return;\r\n  \r\n  // Verificar si console est√° habilitado\r\n  if (!config.enableConsole) return;\r\n  \r\n  // Generar el mensaje con timestamp\r\n  const timestamp = new Date().toISOString().split('T')[1].split('.')[0];\r\n  const prefix = `[${timestamp}] [${category}]`;\r\n  \r\n  // Usar el m√©todo de console apropiado\r\n  switch (level) {\r\n    case LOG_LEVELS.ERROR:\r\n      console.error(prefix, message, ...args);\r\n      break;\r\n    case LOG_LEVELS.WARN:\r\n      console.warn(prefix, message, ...args);\r\n      break;\r\n    case LOG_LEVELS.INFO:\r\n      console.info(prefix, message, ...args);\r\n      break;\r\n    case LOG_LEVELS.DEBUG:\r\n      console.log(prefix, message, ...args);\r\n      break;\r\n    default:\r\n      console.log(prefix, message, ...args);\r\n  }\r\n};\r\n\r\n// Funciones espec√≠ficas por categor√≠a\r\nexport const logger = {\r\n  // Logs generales\r\n  error: (message, ...args) => log(LOG_LEVELS.ERROR, 'General', message, ...args),\r\n  warn: (message, ...args) => log(LOG_LEVELS.WARN, 'General', message, ...args),\r\n  info: (message, ...args) => log(LOG_LEVELS.INFO, 'General', message, ...args),\r\n  debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'General', message, ...args),\r\n  \r\n  // Logs de Service Worker\r\n  sw: {\r\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'ServiceWorker', message, ...args),\r\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'ServiceWorker', message, ...args),\r\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'ServiceWorker', message, ...args),\r\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'ServiceWorker', message, ...args),\r\n  },\r\n  \r\n  // Logs de Socket\r\n  socket: {\r\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'Socket', message, ...args),\r\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'Socket', message, ...args),\r\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'Socket', message, ...args),\r\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'Socket', message, ...args),\r\n  },\r\n  \r\n  // Logs de WhatsApp\r\n  whatsapp: {\r\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'WhatsApp', message, ...args),\r\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'WhatsApp', message, ...args),\r\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'WhatsApp', message, ...args),\r\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'WhatsApp', message, ...args),\r\n  },\r\n  \r\n  // Logs de TransferModal\r\n  transferModal: {\r\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'TransferModal', message, ...args),\r\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'TransferModal', message, ...args),\r\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'TransferModal', message, ...args),\r\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'TransferModal', message, ...args),\r\n  },\r\n  \r\n  // Logs de Dashboard\r\n  dashboard: {\r\n    error: (message, ...args) => log(LOG_LEVELS.ERROR, 'Dashboard', message, ...args),\r\n    warn: (message, ...args) => log(LOG_LEVELS.WARN, 'Dashboard', message, ...args),\r\n    info: (message, ...args) => log(LOG_LEVELS.INFO, 'Dashboard', message, ...args),\r\n    debug: (message, ...args) => log(LOG_LEVELS.DEBUG, 'Dashboard', message, ...args),\r\n  },\r\n  \r\n  // Configuraci√≥n\r\n  config: {\r\n    get: getConfig,\r\n    set: (newConfig) => {\r\n      try {\r\n        const currentConfig = getConfig();\r\n        const updatedConfig = { ...currentConfig, ...newConfig };\r\n        localStorage.setItem('loggerConfig', JSON.stringify(updatedConfig));\r\n        \r\n        // Actualizar control de logs nativos\r\n        if (!updatedConfig.enableConsole) {\r\n          setupNativeLogControl();\r\n        }\r\n        \r\n        return true;\r\n      } catch (error) {\r\n        console.error('Error saving logger config:', error);\r\n        return false;\r\n      }\r\n    },\r\n    reset: () => {\r\n      try {\r\n        localStorage.removeItem('loggerConfig');\r\n        return true;\r\n      } catch (error) {\r\n        console.error('Error resetting logger config:', error);\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Sistema de control de logs nativos\r\nconst setupNativeLogControl = () => {\r\n  const config = getConfig();\r\n  \r\n  if (!config.enableConsole) {\r\n    // Deshabilitar logs nativos cuando el sistema est√° deshabilitado\r\n    const originalConsoleLog = console.log;\r\n    const originalConsoleWarn = console.warn;\r\n    const originalConsoleError = console.error;\r\n    const originalConsoleInfo = console.info;\r\n    \r\n    console.log = () => {};\r\n    console.warn = () => {};\r\n    console.error = () => {};\r\n    console.info = () => {};\r\n    \r\n    // Restaurar despu√©s de un tiempo para no romper el sistema\r\n    setTimeout(() => {\r\n      console.log = originalConsoleLog;\r\n      console.warn = originalConsoleWarn;\r\n      console.error = originalConsoleError;\r\n      console.info = originalConsoleInfo;\r\n    }, 100);\r\n  }\r\n};\r\n\r\n// Log de prueba al cargar el logger\r\nconst currentConfig = getConfig();\r\nconsole.log(\"üîß DEBUG: Configuraci√≥n del logger cargada:\", currentConfig);\r\nconsole.log(\"üîß DEBUG: enableConsole =\", currentConfig.enableConsole);\r\nconsole.log(\"üîß DEBUG: level =\", currentConfig.level);\r\n\r\n// Logs de prueba directos para verificar funcionamiento\r\nif (currentConfig.enableConsole) {\r\n  console.log(\"‚úÖ LOGS HABILITADOS - Sistema funcionando\");\r\n  logger.debug(\"üöÄ Sistema de logging inicializado\");\r\n  logger.debug(\"üìã Configuraci√≥n actual:\", currentConfig);\r\n  logger.sw.debug(\"üß™ LOG DE PRUEBA - Service Worker inicializado\");\r\n  logger.socket.debug(\"üß™ LOG DE PRUEBA - Socket inicializado\");\r\n  logger.whatsapp.debug(\"üß™ LOG DE PRUEBA - WhatsApp inicializado\");\r\n  logger.transferModal.debug(\"üß™ LOG DE PRUEBA - Transfer Modal inicializado\");\r\n  logger.dashboard.debug(\"üß™ LOG DE PRUEBA - Dashboard inicializado\");\r\n} else {\r\n  console.log(\"‚ùå LOGS DESHABILITADOS - Revisar configuraci√≥n\");\r\n  setupNativeLogControl();\r\n}\r\n\r\nexport default logger; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}