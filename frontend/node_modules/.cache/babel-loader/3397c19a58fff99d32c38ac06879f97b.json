{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\whaticket03\\\\waticketsaas\\\\frontend\\\\src\\\\pages\\\\Prompts\\\\index.js\";\nimport React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport { Button, IconButton, Paper, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport Title from \"../../components/Title\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport { DeleteOutline, Edit } from \"@material-ui/icons\";\nimport PromptModal from \"../../components/PromptModal\";\nimport { toast } from \"react-toastify\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport usePlans from \"../../hooks/usePlans\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nconst useStyles = makeStyles(theme => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles\n  },\n  customTableCell: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  // Adicione um estilo para a box vermelha\n  redBox: {\n    backgroundColor: \"#ffcccc\",\n    // Definindo a cor de fundo vermelha\n    padding: theme.spacing(2),\n    // Adicionando um espaçamento interno\n    marginBottom: theme.spacing(2) // Adicionando margem inferior para separar do conteúdo abaixo\n  }\n}));\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_PROMPTS\") {\n    const prompts = action.payload;\n    const newPrompts = [];\n    prompts.forEach(prompt => {\n      const promptIndex = state.findIndex(p => p.id === prompt.id);\n      if (promptIndex !== -1) {\n        state[promptIndex] = prompt;\n      } else {\n        newPrompts.push(prompt);\n      }\n    });\n    return [...state, ...newPrompts];\n  }\n  if (action.type === \"UPDATE_PROMPTS\") {\n    const prompt = action.payload;\n    const promptIndex = state.findIndex(p => p.id === prompt.id);\n    if (promptIndex !== -1) {\n      state[promptIndex] = prompt;\n      return [...state];\n    } else {\n      return [prompt, ...state];\n    }\n  }\n  if (action.type === \"DELETE_PROMPT\") {\n    const promptId = action.payload;\n    const promptIndex = state.findIndex(p => p.id === promptId);\n    if (promptIndex !== -1) {\n      state.splice(promptIndex, 1);\n    }\n    return [...state];\n  }\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\nconst Prompts = () => {\n  const classes = useStyles();\n  const [prompts, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(false);\n  const [promptModalOpen, setPromptModalOpen] = useState(false);\n  const [selectedPrompt, setSelectedPrompt] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    getPlanCompany\n  } = usePlans();\n  const history = useHistory();\n  const companyId = user.companyId;\n  const socketManager = useContext(SocketContext);\n\n  // ✅ AGREGAR FUNCIÓN PARA REFRESCAR PROMPTS\n  const refreshPrompts = async () => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await api.get(\"/prompt\");\n      dispatch({\n        type: \"LOAD_PROMPTS\",\n        payload: data.prompts\n      });\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      if (companyId) {\n        const planConfigs = await getPlanCompany(undefined, companyId);\n        if (!planConfigs.plan.useOpenAi) {\n          toast.error(i18n.t(\"prompts.errors.noPermission\"));\n          setTimeout(() => {\n            history.push(`/`);\n          }, 1000);\n        }\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const {\n          data\n        } = await api.get(\"/prompt\");\n        dispatch({\n          type: \"LOAD_PROMPTS\",\n          payload: data.prompts\n        });\n        setLoading(false);\n      } catch (err) {\n        toastError(err);\n        setLoading(false);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    const socket = socketManager.getSocket(companyId);\n    socket.on(`company-${companyId}-prompt`, data => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({\n          type: \"UPDATE_PROMPTS\",\n          payload: data.prompt\n        });\n      }\n      if (data.action === \"delete\") {\n        dispatch({\n          type: \"DELETE_PROMPT\",\n          payload: data.promptId\n        });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [companyId, socketManager]);\n  const handleOpenPromptModal = () => {\n    setPromptModalOpen(true);\n    setSelectedPrompt(null);\n  };\n  const handleClosePromptModal = () => {\n    setPromptModalOpen(false);\n    setSelectedPrompt(null);\n  };\n  const handleEditPrompt = prompt => {\n    setSelectedPrompt(prompt);\n    setPromptModalOpen(true);\n  };\n  const handleCloseConfirmationModal = () => {\n    setConfirmModalOpen(false);\n    setSelectedPrompt(null);\n  };\n  const handleDeletePrompt = async promptId => {\n    try {\n      const {\n        data\n      } = await api.delete(`/prompt/${promptId}`);\n      toast.info(i18n.t(data.message));\n\n      // ✅ ACTUALIZAR LA LISTA INMEDIATAMENTE DESPUÉS DE ELIMINAR\n      dispatch({\n        type: \"DELETE_PROMPT\",\n        payload: promptId\n      });\n    } catch (err) {\n      toastError(err);\n    }\n    setSelectedPrompt(null);\n    setConfirmModalOpen(false);\n  };\n  return /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmationModal, {\n    title: selectedPrompt && `${i18n.t(\"prompts.confirmationModal.deleteTitle\")} ${selectedPrompt.name}?`,\n    open: confirmModalOpen,\n    onClose: handleCloseConfirmationModal,\n    onConfirm: () => handleDeletePrompt(selectedPrompt.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, i18n.t(\"prompts.confirmationModal.deleteMessage\")), /*#__PURE__*/React.createElement(PromptModal, {\n    open: promptModalOpen,\n    onClose: handleClosePromptModal,\n    promptId: selectedPrompt === null || selectedPrompt === void 0 ? void 0 : selectedPrompt.id,\n    onSave: refreshPrompts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MainHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, i18n.t(\"prompts.title\")), /*#__PURE__*/React.createElement(MainHeaderButtonsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpenPromptModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, i18n.t(\"prompts.buttons.add\")))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.mainPaper,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, i18n.t(\"prompts.table.name\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, i18n.t(\"prompts.table.queue\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, i18n.t(\"prompts.table.max_tokens\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, i18n.t(\"prompts.table.actions\")))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, prompts.map(prompt => /*#__PURE__*/React.createElement(TableRow, {\n    key: prompt.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, prompt.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, prompt.queue.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, prompt.maxTokens), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: () => handleEditPrompt(prompt),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: () => {\n      setSelectedPrompt(prompt);\n      setConfirmModalOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 23\n    }\n  }))))), loading && /*#__PURE__*/React.createElement(TableRowSkeleton, {\n    columns: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 27\n    }\n  }))))));\n};\nexport default Prompts;","map":{"version":3,"names":["React","useContext","useEffect","useReducer","useState","Button","IconButton","Paper","Table","TableBody","TableCell","TableHead","TableRow","makeStyles","MainContainer","MainHeader","MainHeaderButtonsWrapper","TableRowSkeleton","Title","i18n","toastError","api","DeleteOutline","Edit","PromptModal","toast","ConfirmationModal","AuthContext","usePlans","useHistory","SocketContext","useStyles","theme","mainPaper","flex","padding","spacing","overflowY","scrollbarStyles","customTableCell","display","alignItems","justifyContent","redBox","backgroundColor","marginBottom","reducer","state","action","type","prompts","payload","newPrompts","forEach","prompt","promptIndex","findIndex","p","id","push","promptId","splice","Prompts","classes","dispatch","loading","setLoading","promptModalOpen","setPromptModalOpen","selectedPrompt","setSelectedPrompt","confirmModalOpen","setConfirmModalOpen","user","getPlanCompany","history","companyId","socketManager","refreshPrompts","data","get","err","fetchData","planConfigs","undefined","plan","useOpenAi","error","t","setTimeout","socket","getSocket","on","disconnect","handleOpenPromptModal","handleClosePromptModal","handleEditPrompt","handleCloseConfirmationModal","handleDeletePrompt","delete","info","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","name","open","onClose","onConfirm","onSave","variant","color","onClick","className","size","align","Fragment","map","key","queue","maxTokens","columns"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/pages/Prompts/index.js"],"sourcesContent":["import React, { useContext, useEffect, useReducer, useState } from \"react\";\n\nimport {\n  Button,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport Title from \"../../components/Title\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport { DeleteOutline, Edit } from \"@material-ui/icons\";\nimport PromptModal from \"../../components/PromptModal\";\nimport { toast } from \"react-toastify\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport usePlans from \"../../hooks/usePlans\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  customTableCell: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  // Adicione um estilo para a box vermelha\n  redBox: {\n    backgroundColor: \"#ffcccc\", // Definindo a cor de fundo vermelha\n    padding: theme.spacing(2), // Adicionando um espaçamento interno\n    marginBottom: theme.spacing(2), // Adicionando margem inferior para separar do conteúdo abaixo\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_PROMPTS\") {\n    const prompts = action.payload;\n    const newPrompts = [];\n\n    prompts.forEach((prompt) => {\n      const promptIndex = state.findIndex((p) => p.id === prompt.id);\n      if (promptIndex !== -1) {\n        state[promptIndex] = prompt;\n      } else {\n        newPrompts.push(prompt);\n      }\n    });\n\n    return [...state, ...newPrompts];\n  }\n\n  if (action.type === \"UPDATE_PROMPTS\") {\n    const prompt = action.payload;\n    const promptIndex = state.findIndex((p) => p.id === prompt.id);\n\n    if (promptIndex !== -1) {\n      state[promptIndex] = prompt;\n      return [...state];\n    } else {\n      return [prompt, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_PROMPT\") {\n    const promptId = action.payload;\n    const promptIndex = state.findIndex((p) => p.id === promptId);\n    if (promptIndex !== -1) {\n      state.splice(promptIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst Prompts = () => {\n  const classes = useStyles();\n\n  const [prompts, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(false);\n\n  const [promptModalOpen, setPromptModalOpen] = useState(false);\n  const [selectedPrompt, setSelectedPrompt] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const { user } = useContext(AuthContext);\n  const { getPlanCompany } = usePlans();\n  const history = useHistory();\n  const companyId = user.companyId;\n\n  const socketManager = useContext(SocketContext);\n\n  // ✅ AGREGAR FUNCIÓN PARA REFRESCAR PROMPTS\n  const refreshPrompts = async () => {\n    setLoading(true);\n    try {\n      const { data } = await api.get(\"/prompt\");\n      dispatch({ type: \"LOAD_PROMPTS\", payload: data.prompts });\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      if (companyId) {\n        const planConfigs = await getPlanCompany(undefined, companyId);\n        if (!planConfigs.plan.useOpenAi) {\n          toast.error(i18n.t(\"prompts.errors.noPermission\"));\n          setTimeout(() => {\n            history.push(`/`)\n          }, 1000);\n        }\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const { data } = await api.get(\"/prompt\");\n        dispatch({ type: \"LOAD_PROMPTS\", payload: data.prompts });\n\n        setLoading(false);\n      } catch (err) {\n        toastError(err);\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    const socket = socketManager.getSocket(companyId);\n\n    socket.on(`company-${companyId}-prompt`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_PROMPTS\", payload: data.prompt });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_PROMPT\", payload: data.promptId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [companyId, socketManager]);\n\n  const handleOpenPromptModal = () => {\n    setPromptModalOpen(true);\n    setSelectedPrompt(null);\n  };\n\n  const handleClosePromptModal = () => {\n    setPromptModalOpen(false);\n    setSelectedPrompt(null);\n  };\n\n  const handleEditPrompt = (prompt) => {\n    setSelectedPrompt(prompt);\n    setPromptModalOpen(true);\n  };\n\n  const handleCloseConfirmationModal = () => {\n    setConfirmModalOpen(false);\n    setSelectedPrompt(null);\n  };\n\n  const handleDeletePrompt = async (promptId) => {\n    try {\n      const { data } = await api.delete(`/prompt/${promptId}`);\n      toast.info(i18n.t(data.message));\n      \n      // ✅ ACTUALIZAR LA LISTA INMEDIATAMENTE DESPUÉS DE ELIMINAR\n      dispatch({ type: \"DELETE_PROMPT\", payload: promptId });\n      \n    } catch (err) {\n      toastError(err);\n    }\n    setSelectedPrompt(null);\n    setConfirmModalOpen(false);\n  };\n\n  return (\n    <MainContainer>\n\n\n      <ConfirmationModal\n        title={\n          selectedPrompt &&\n          `${i18n.t(\"prompts.confirmationModal.deleteTitle\")} ${selectedPrompt.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={handleCloseConfirmationModal}\n        onConfirm={() => handleDeletePrompt(selectedPrompt.id)}\n      >\n        {i18n.t(\"prompts.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <PromptModal\n        open={promptModalOpen}\n        onClose={handleClosePromptModal}\n        promptId={selectedPrompt?.id}\n        onSave={refreshPrompts}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"prompts.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenPromptModal}\n          >\n            {i18n.t(\"prompts.buttons.add\")}\n          </Button>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper className={classes.mainPaper} variant=\"outlined\">\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">\n                {i18n.t(\"prompts.table.name\")}\n              </TableCell>\n              <TableCell align=\"left\">\n                {i18n.t(\"prompts.table.queue\")}\n              </TableCell>\n              <TableCell align=\"left\">\n                {i18n.t(\"prompts.table.max_tokens\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"prompts.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {prompts.map((prompt) => (\n                <TableRow key={prompt.id}>\n                  <TableCell align=\"left\">{prompt.name}</TableCell>\n                  <TableCell align=\"left\">{prompt.queue.name}</TableCell>\n                  <TableCell align=\"left\">{prompt.maxTokens}</TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditPrompt(prompt)}\n                    >\n                      <Edit />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => {\n                        setSelectedPrompt(prompt);\n                        setConfirmModalOpen(true);\n                      }}\n                    >\n                      <DeleteOutline />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Prompts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}