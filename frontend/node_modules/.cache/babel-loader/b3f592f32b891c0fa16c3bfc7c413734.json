{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\whaticket03\\\\waticketsaas\\\\frontend\\\\src\\\\components\\\\TransferTicketModalCustom\\\\index.js\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport logger from \"../../utils/logger\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Grid, ListItemText, Typography, makeStyles } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport toastError from \"../../errors/toastError\";\nimport useQueues from \"../../hooks/useQueues\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nconst useStyles = makeStyles(theme => ({\n  maxWidth: {\n    width: \"100%\"\n  }\n}));\nconst TransferTicketModalCustom = ({\n  modalOpen,\n  onClose,\n  ticketid\n}) => {\n  logger.transferModal.debug(\"🎯 TransferTicketModalCustom renderizado - modalOpen:\", modalOpen);\n  const history = useHistory();\n  const [options, setOptions] = useState([]);\n  const [queues, setQueues] = useState([]);\n  const [allQueues, setAllQueues] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedQueue, setSelectedQueue] = useState(\"\");\n  const [autocompleteOpen, setAutocompleteOpen] = useState(false);\n  const classes = useStyles();\n  const {\n    findAll: findAllQueues\n  } = useQueues();\n  const isMounted = useRef(true);\n  const [whatsapps, setWhatsapps] = useState([]);\n  const [selectedWhatsapp, setSelectedWhatsapp] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    companyId,\n    whatsappId\n  } = user;\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        api.get(`/whatsapp`, {\n          params: {\n            companyId,\n            session: 0\n          }\n        }).then(({\n          data\n        }) => setWhatsapps(data));\n      };\n      if (whatsappId !== null && whatsappId !== undefined) {\n        setSelectedWhatsapp(whatsappId);\n      }\n      if (user.queues.length === 1) {\n        setSelectedQueue(user.queues[0].id);\n      }\n      fetchContacts();\n      setLoading(false);\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [companyId, user.queues, whatsappId]);\n  useEffect(() => {\n    if (isMounted.current) {\n      const loadQueues = async () => {\n        const list = await findAllQueues();\n        setAllQueues(list);\n        setQueues(list);\n      };\n      loadQueues();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // ✅ CARGAR USUARIOS AUTOMÁTICAMENTE AL ABRIR EL MODAL\n  useEffect(() => {\n    if (!modalOpen) {\n      setLoading(false);\n      return;\n    }\n    const fetchUsers = async () => {\n      setLoading(true);\n      try {\n        logger.transferModal.debug(\"🔍 Buscando usuarios...\");\n        const {\n          data\n        } = await api.get(\"/users/\", {\n          params: {\n            searchParam: searchParam || \"\",\n            // Si no hay búsqueda, traer todos\n            limit: 10 // Limitar a 10 usuarios inicialmente\n          }\n        });\n        logger.transferModal.debug(\"✅ Usuarios encontrados:\", data.users);\n        setOptions(data.users);\n        setLoading(false);\n      } catch (err) {\n        logger.transferModal.error(\"❌ Error al buscar usuarios:\", err);\n        setLoading(false);\n        toastError(err);\n      }\n    };\n\n    // ✅ CARGAR INMEDIATAMENTE AL ABRIR EL MODAL\n    logger.transferModal.debug(\"🚀 Modal abierto, cargando usuarios...\");\n    fetchUsers();\n  }, [modalOpen, searchParam]);\n\n  // ✅ BÚSQUEDA CON DEBOUNCE\n  useEffect(() => {\n    if (!modalOpen) {\n      return;\n    }\n    const delayDebounceFn = setTimeout(() => {\n      const fetchUsers = async () => {\n        setLoading(true);\n        try {\n          logger.transferModal.debug(\"🔍 Buscando usuarios con parámetro:\", searchParam);\n          const {\n            data\n          } = await api.get(\"/users/\", {\n            params: {\n              searchParam: searchParam || \"\",\n              // Si está vacío, traer todos\n              limit: 10\n            }\n          });\n          logger.transferModal.debug(\"✅ Usuarios encontrados en búsqueda:\", data.users);\n          setOptions(data.users);\n          setLoading(false);\n        } catch (err) {\n          logger.transferModal.error(\"❌ Error en búsqueda:\", err);\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchUsers();\n    }, 300);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, modalOpen]);\n  const handleClose = () => {\n    onClose();\n    setSearchParam(\"\");\n    setSelectedUser(null);\n    setAutocompleteOpen(false);\n    setOptions([]);\n  };\n  const handleSaveTicket = async e => {\n    e.preventDefault();\n    if (!ticketid) return;\n    if (!selectedQueue || selectedQueue === \"\") return;\n    setLoading(true);\n    try {\n      let data = {};\n      if (selectedUser) {\n        data.userId = selectedUser.id;\n      }\n      if (selectedQueue && selectedQueue !== null) {\n        data.queueId = selectedQueue;\n        if (!selectedUser) {\n          data.status = \"pending\";\n          data.userId = null;\n        }\n      }\n      if (selectedWhatsapp) {\n        data.whatsappId = selectedWhatsapp;\n      }\n      await api.put(`/tickets/${ticketid}`, data);\n      history.push(`/tickets`);\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: modalOpen,\n    onClose: handleClose,\n    maxWidth: \"lg\",\n    scroll: \"paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSaveTicket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, i18n.t(\"transferTicketModal.title\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    style: {\n      width: 400,\n      marginBottom: 20\n    },\n    getOptionLabel: option => (option === null || option === void 0 ? void 0 : option.name) || \"\",\n    value: selectedUser || null,\n    onChange: (e, newValue) => {\n      logger.transferModal.debug(\"👤 Usuario seleccionado:\", newValue);\n      setSelectedUser(newValue);\n      if (newValue != null && Array.isArray(newValue.queues)) {\n        setQueues(newValue.queues);\n      } else {\n        setQueues(allQueues);\n        setSelectedQueue(\"\");\n      }\n    },\n    options: options,\n    filterOptions: (options, {\n      inputValue\n    }) => {\n      logger.transferModal.debug(\"🔍 Filtrando opciones, inputValue:\", inputValue);\n      // ✅ FILTRO MEJORADO: Buscar por nombre y email\n      // Si el input está vacío, mostrar todas las opciones\n      if (!inputValue || inputValue.trim() === \"\") {\n        return options;\n      }\n      return options.filter(option => {\n        var _option$name, _option$email;\n        const searchTerm = inputValue.toLowerCase();\n        return ((_option$name = option.name) === null || _option$name === void 0 ? void 0 : _option$name.toLowerCase().includes(searchTerm)) || ((_option$email = option.email) === null || _option$email === void 0 ? void 0 : _option$email.toLowerCase().includes(searchTerm));\n      });\n    },\n    freeSolo: false,\n    autoHighlight: true,\n    noOptionsText: i18n.t(\"transferTicketModal.noOptions\"),\n    loading: loading,\n    open: autocompleteOpen,\n    onOpen: () => {\n      // ✅ ABRIR AUTCOMPLETE Y CARGAR USUARIOS\n      logger.transferModal.debug(\"📱 Autocomplete abierto, options.length:\", options.length);\n      setAutocompleteOpen(true);\n      if (options.length === 0) {\n        logger.transferModal.debug(\"🔄 Cargando usuarios desde onOpen...\");\n        setSearchParam(\"\");\n      }\n    },\n    onClose: () => {\n      logger.transferModal.debug(\"📱 Autocomplete cerrado\");\n      setAutocompleteOpen(false);\n    },\n    ListboxProps: {\n      style: {\n        maxHeight: 200\n      } // ✅ SCROLL CON ALTURA MÁXIMA\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: i18n.t(\"transferTicketModal.fieldLabel\"),\n      variant: \"outlined\",\n      autoFocus: true,\n      onChange: e => {\n        const value = e.target.value;\n        logger.transferModal.debug(\"✏️ Input cambiado:\", value);\n        setSearchParam(value);\n        // ✅ Si se borra todo el texto, forzar actualización\n        if (!value || value.trim() === \"\") {\n          logger.transferModal.debug(\"🔄 Campo vacío, actualizando lista...\");\n        }\n      },\n      placeholder: \"Click aqu\\xED para ver usuarios disponibles\",\n      InputProps: {\n        ...params.InputProps,\n        endAdornment: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 21\n          }\n        }, loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n          color: \"inherit\",\n          size: 20,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }\n        }) : null, params.InputProps.endAdornment)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    })),\n    renderOption: option => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '8px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, option.name), option.email && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: '12px',\n        color: '#666',\n        marginTop: '2px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }, option.email)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.maxWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, i18n.t(\"transferTicketModal.fieldQueueLabel\")), /*#__PURE__*/React.createElement(Select, {\n    value: selectedQueue,\n    onChange: e => setSelectedQueue(e.target.value),\n    label: i18n.t(\"transferTicketModal.fieldQueuePlaceholder\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, queues.map(queue => /*#__PURE__*/React.createElement(MenuItem, {\n    key: queue.id,\n    value: queue.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, queue.name)))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      marginTop: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    required: true,\n    fullWidth: true,\n    displayEmpty: true,\n    variant: \"outlined\",\n    value: selectedWhatsapp,\n    onChange: e => {\n      setSelectedWhatsapp(e.target.value);\n    },\n    MenuProps: {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    },\n    renderValue: () => {\n      if (selectedWhatsapp === \"\") {\n        return \"Selecione uma Conexão\";\n      }\n      const whatsapp = whatsapps.find(w => w.id === selectedWhatsapp);\n      return whatsapp.name;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, (whatsapps === null || whatsapps === void 0 ? void 0 : whatsapps.length) > 0 && whatsapps.map((whatsapp, key) => /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: key,\n    value: whatsapp.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      style: {\n        fontSize: 14,\n        marginLeft: \"10px\",\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        lineHeight: \"2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 29\n      }\n    }, whatsapp.name, \" \\xA0 \", /*#__PURE__*/React.createElement(\"p\", {\n      className: whatsapp.status === 'CONNECTED' ? classes.online : classes.offline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 54\n      }\n    }, \"(\", whatsapp.status, \")\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 23\n    }\n  }))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    disabled: loading,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }, i18n.t(\"transferTicketModal.buttons.cancel\")), /*#__PURE__*/React.createElement(ButtonWithSpinner, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, i18n.t(\"transferTicketModal.buttons.ok\")))));\n};\nexport default TransferTicketModalCustom;","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","useHistory","logger","Button","TextField","Dialog","Select","FormControl","InputLabel","MenuItem","Grid","ListItemText","Typography","makeStyles","DialogActions","DialogContent","DialogTitle","Autocomplete","CircularProgress","i18n","api","ButtonWithSpinner","toastError","useQueues","AuthContext","useStyles","theme","maxWidth","width","TransferTicketModalCustom","modalOpen","onClose","ticketid","transferModal","debug","history","options","setOptions","queues","setQueues","allQueues","setAllQueues","loading","setLoading","searchParam","setSearchParam","selectedUser","setSelectedUser","selectedQueue","setSelectedQueue","autocompleteOpen","setAutocompleteOpen","classes","findAll","findAllQueues","isMounted","whatsapps","setWhatsapps","selectedWhatsapp","setSelectedWhatsapp","user","companyId","whatsappId","current","delayDebounceFn","setTimeout","fetchContacts","get","params","session","then","data","undefined","length","id","clearTimeout","loadQueues","list","fetchUsers","limit","users","err","error","handleClose","handleSaveTicket","e","preventDefault","userId","queueId","status","put","push","createElement","open","scroll","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","t","dividers","style","marginBottom","getOptionLabel","option","name","value","onChange","newValue","Array","isArray","filterOptions","inputValue","trim","filter","_option$name","_option$email","searchTerm","toLowerCase","includes","email","freeSolo","autoHighlight","noOptionsText","onOpen","ListboxProps","maxHeight","renderInput","Object","assign","label","variant","autoFocus","target","placeholder","InputProps","endAdornment","Fragment","color","size","renderOption","display","flexDirection","padding","fontWeight","fontSize","marginTop","className","map","queue","key","container","spacing","xs","item","required","fullWidth","displayEmpty","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","renderValue","whatsapp","find","w","dense","primary","component","marginLeft","alignItems","lineHeight","online","offline","onClick","disabled","type"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/components/TransferTicketModalCustom/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport logger from \"../../utils/logger\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Grid, ListItemText, Typography, makeStyles } from \"@material-ui/core\";\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport toastError from \"../../errors/toastError\";\nimport useQueues from \"../../hooks/useQueues\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  maxWidth: {\n    width: \"100%\",\n  },\n}));\n\n\n\nconst TransferTicketModalCustom = ({ modalOpen, onClose, ticketid }) => {\n  logger.transferModal.debug(\"🎯 TransferTicketModalCustom renderizado - modalOpen:\", modalOpen);\n  const history = useHistory();\n  const [options, setOptions] = useState([]);\n  const [queues, setQueues] = useState([]);\n  const [allQueues, setAllQueues] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedQueue, setSelectedQueue] = useState(\"\");\n  const [autocompleteOpen, setAutocompleteOpen] = useState(false);\n  const classes = useStyles();\n  const { findAll: findAllQueues } = useQueues();\n  const isMounted = useRef(true);\n  const [whatsapps, setWhatsapps] = useState([]);\n  const [selectedWhatsapp, setSelectedWhatsapp] = useState(\"\");\n  const { user } = useContext(AuthContext);\n  const { companyId, whatsappId } = user;\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        api\n          .get(`/whatsapp`, { params: { companyId, session: 0 } })\n          .then(({ data }) => setWhatsapps(data));\n      };\n\n      if (whatsappId !== null && whatsappId !== undefined) {\n        setSelectedWhatsapp(whatsappId)\n      }\n\n      if (user.queues.length === 1) {\n        setSelectedQueue(user.queues[0].id)\n      }\n      fetchContacts();\n      setLoading(false);\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [companyId, user.queues, whatsappId])\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const loadQueues = async () => {\n        const list = await findAllQueues();\n        setAllQueues(list);\n        setQueues(list);\n      };\n      loadQueues();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // ✅ CARGAR USUARIOS AUTOMÁTICAMENTE AL ABRIR EL MODAL\n  useEffect(() => {\n    if (!modalOpen) {\n      setLoading(false);\n      return;\n    }\n\n    const fetchUsers = async () => {\n      setLoading(true);\n      try {\n        logger.transferModal.debug(\"🔍 Buscando usuarios...\");\n        const { data } = await api.get(\"/users/\", {\n          params: { \n            searchParam: searchParam || \"\", // Si no hay búsqueda, traer todos\n            limit: 10 // Limitar a 10 usuarios inicialmente\n          },\n        });\n        logger.transferModal.debug(\"✅ Usuarios encontrados:\", data.users);\n        setOptions(data.users);\n        setLoading(false);\n      } catch (err) {\n        logger.transferModal.error(\"❌ Error al buscar usuarios:\", err);\n        setLoading(false);\n        toastError(err);\n      }\n    };\n\n    // ✅ CARGAR INMEDIATAMENTE AL ABRIR EL MODAL\n    logger.transferModal.debug(\"🚀 Modal abierto, cargando usuarios...\");\n    fetchUsers();\n  }, [modalOpen, searchParam]);\n\n  // ✅ BÚSQUEDA CON DEBOUNCE\n  useEffect(() => {\n    if (!modalOpen) {\n      return;\n    }\n\n    const delayDebounceFn = setTimeout(() => {\n      const fetchUsers = async () => {\n        setLoading(true);\n        try {\n          logger.transferModal.debug(\"🔍 Buscando usuarios con parámetro:\", searchParam);\n          const { data } = await api.get(\"/users/\", {\n            params: { \n              searchParam: searchParam || \"\", // Si está vacío, traer todos\n              limit: 10\n            },\n          });\n          logger.transferModal.debug(\"✅ Usuarios encontrados en búsqueda:\", data.users);\n          setOptions(data.users);\n          setLoading(false);\n        } catch (err) {\n          logger.transferModal.error(\"❌ Error en búsqueda:\", err);\n          setLoading(false);\n          toastError(err);\n        }\n      };\n\n      fetchUsers();\n    }, 300);\n\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, modalOpen]);\n\n  const handleClose = () => {\n    onClose();\n    setSearchParam(\"\");\n    setSelectedUser(null);\n    setAutocompleteOpen(false);\n    setOptions([]);\n  };\n\n  const handleSaveTicket = async (e) => {\n    e.preventDefault();\n    if (!ticketid) return;\n    if (!selectedQueue || selectedQueue === \"\") return;\n    setLoading(true);\n    try {\n      let data = {};\n\n      if (selectedUser) {\n        data.userId = selectedUser.id;\n      }\n\n      if (selectedQueue && selectedQueue !== null) {\n        data.queueId = selectedQueue;\n\n        if (!selectedUser) {\n          data.status = \"pending\";\n          data.userId = null;\n        }\n      }\n\n      if (selectedWhatsapp) {\n        data.whatsappId = selectedWhatsapp\n      }\n      await api.put(`/tickets/${ticketid}`, data);\n\n      history.push(`/tickets`);\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n  };\n\n  return (\n    <Dialog open={modalOpen} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n      <form onSubmit={handleSaveTicket}>\n        <DialogTitle id=\"form-dialog-title\">\n          {i18n.t(\"transferTicketModal.title\")}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Autocomplete\n            style={{ width: 400, marginBottom: 20 }}\n            getOptionLabel={(option) => option?.name || \"\"}\n            value={selectedUser || null}\n            onChange={(e, newValue) => {\n              logger.transferModal.debug(\"👤 Usuario seleccionado:\", newValue);\n              setSelectedUser(newValue);\n              if (newValue != null && Array.isArray(newValue.queues)) {\n                setQueues(newValue.queues);\n              } else {\n                setQueues(allQueues);\n                setSelectedQueue(\"\");\n              }\n            }}\n            options={options}\n            filterOptions={(options, { inputValue }) => {\n              logger.transferModal.debug(\"🔍 Filtrando opciones, inputValue:\", inputValue);\n              // ✅ FILTRO MEJORADO: Buscar por nombre y email\n              // Si el input está vacío, mostrar todas las opciones\n              if (!inputValue || inputValue.trim() === \"\") {\n                return options;\n              }\n              return options.filter(option => {\n                const searchTerm = inputValue.toLowerCase();\n                return (\n                  option.name?.toLowerCase().includes(searchTerm) ||\n                  option.email?.toLowerCase().includes(searchTerm)\n                );\n              });\n            }}\n            freeSolo={false}\n            autoHighlight\n            noOptionsText={i18n.t(\"transferTicketModal.noOptions\")}\n            loading={loading}\n            open={autocompleteOpen}\n            onOpen={() => {\n              // ✅ ABRIR AUTCOMPLETE Y CARGAR USUARIOS\n              logger.transferModal.debug(\"📱 Autocomplete abierto, options.length:\", options.length);\n              setAutocompleteOpen(true);\n              if (options.length === 0) {\n                logger.transferModal.debug(\"🔄 Cargando usuarios desde onOpen...\");\n                setSearchParam(\"\");\n              }\n            }}\n            onClose={() => {\n              logger.transferModal.debug(\"📱 Autocomplete cerrado\");\n              setAutocompleteOpen(false);\n            }}\n            ListboxProps={{\n              style: { maxHeight: 200 }, // ✅ SCROLL CON ALTURA MÁXIMA\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label={i18n.t(\"transferTicketModal.fieldLabel\")}\n                variant=\"outlined\"\n                autoFocus\n                onChange={(e) => {\n                  const value = e.target.value;\n                  logger.transferModal.debug(\"✏️ Input cambiado:\", value);\n                  setSearchParam(value);\n                  // ✅ Si se borra todo el texto, forzar actualización\n                  if (!value || value.trim() === \"\") {\n                    logger.transferModal.debug(\"🔄 Campo vacío, actualizando lista...\");\n                  }\n                }}\n                placeholder=\"Click aquí para ver usuarios disponibles\"\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n            renderOption={(option) => (\n              <div style={{ \n                display: 'flex', \n                flexDirection: 'column',\n                padding: '8px 0'\n              }}>\n                <div style={{ fontWeight: 'bold' }}>\n                  {option.name}\n                </div>\n                {option.email && (\n                  <div style={{ \n                    fontSize: '12px', \n                    color: '#666',\n                    marginTop: '2px'\n                  }}>\n                    {option.email}\n                  </div>\n                )}\n              </div>\n            )}\n          />\n          <FormControl variant=\"outlined\" className={classes.maxWidth}>\n            <InputLabel>\n              {i18n.t(\"transferTicketModal.fieldQueueLabel\")}\n            </InputLabel>\n            <Select\n              value={selectedQueue}\n              onChange={(e) => setSelectedQueue(e.target.value)}\n              label={i18n.t(\"transferTicketModal.fieldQueuePlaceholder\")}\n            >\n              {queues.map((queue) => (\n                <MenuItem key={queue.id} value={queue.id}>\n                  {queue.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          {/* CONEXAO */}\n          <Grid container spacing={2} style={{marginTop: '15px'}}>\n            <Grid xs={12} item>\n              <Select\n                required\n                fullWidth\n                displayEmpty\n                variant=\"outlined\"\n                value={selectedWhatsapp}\n                onChange={(e) => {\n                  setSelectedWhatsapp(e.target.value)\n                }}\n                MenuProps={{\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"left\",\n                  },\n                  transformOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  },\n                  getContentAnchorEl: null,\n                }}\n                renderValue={() => {\n                  if (selectedWhatsapp === \"\") {\n                    return \"Selecione uma Conexão\"\n                  }\n                  const whatsapp = whatsapps.find(w => w.id === selectedWhatsapp)\n                  return whatsapp.name\n                }}\n              >\n                {whatsapps?.length > 0 &&\n                  whatsapps.map((whatsapp, key) => (\n                    <MenuItem dense key={key} value={whatsapp.id}>\n                      <ListItemText\n                        primary={\n                          <>\n                            {/* {IconChannel(whatsapp.channel)} */}\n                            <Typography component=\"span\" style={{ fontSize: 14, marginLeft: \"10px\", display: \"inline-flex\", alignItems: \"center\", lineHeight: \"2\" }}>\n                              {whatsapp.name} &nbsp; <p className={(whatsapp.status) === 'CONNECTED' ? classes.online : classes.offline} >({whatsapp.status})</p>\n                            </Typography>\n                          </>\n                        }\n                      />\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            color=\"secondary\"\n            disabled={loading}\n            variant=\"outlined\"\n          >\n            {i18n.t(\"transferTicketModal.buttons.cancel\")}\n          </Button>\n          <ButtonWithSpinner\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            loading={loading}\n          >\n            {i18n.t(\"transferTicketModal.buttons.ok\")}\n          </ButtonWithSpinner>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default TransferTicketModalCustom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}