{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\whaticket03\\\\waticketsaas\\\\frontend\\\\src\\\\pages\\\\Kanban\\\\index.js\";\nimport React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport api from \"../../services/api\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from 'react-router-dom';\nimport KanbanBoard from \"../../components/KanbanBoard\";\nimport logger from \"../../utils/logger\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(1),\n    height: \"100%\"\n  },\n  button: {\n    background: \"#10a110\",\n    border: \"none\",\n    padding: \"10px\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    borderRadius: \"5px\"\n  }\n}));\nconst Kanban = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [tags, setTags] = useState([]);\n  const [tickets, setTickets] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  const jsonString = user.queues.map(queue => queue.UserQueue.queueId);\n  const fetchTags = useCallback(async (retryCount = 0) => {\n    if (isLoading) return; // Evitar requests m√∫ltiples\n\n    try {\n      setIsLoading(true);\n      logger.dashboard.debug(\"üîÑ Cargando tags de Kanban...\");\n      const response = await api.get(\"/tags/kanban\");\n      const fetchedTags = response.data.lista || [];\n      setTags(fetchedTags);\n      logger.dashboard.debug(\"‚úÖ Tags cargados:\", fetchedTags.length);\n      // Fetch tickets after fetching tags\n      await fetchTickets(jsonString);\n    } catch (error) {\n      var _error$message;\n      // ‚úÖ MANEJO SILENCIOSO DE ERRORES DE AUTENTICACI√ìN\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n        logger.dashboard.debug(\"üîÑ Error de autenticaci√≥n silenciado:\", error.response.status);\n        // No mostrar error en consola para evitar spam\n        return;\n      }\n\n      // Solo mostrar errores que no sean de autenticaci√≥n\n      logger.dashboard.error(\"‚ùå Error cargando tags:\", error);\n\n      // Retry con backoff exponencial para errores de red\n      if (retryCount < 3 && (error.code === 'ERR_INSUFFICIENT_RESOURCES' || ((_error$message = error.message) === null || _error$message === void 0 ? void 0 : _error$message.includes('ERR_INSUFFICIENT_RESOURCES')))) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        logger.dashboard.warn(`üîÑ Reintentando en ${delay}ms (intento ${retryCount + 1}/3)`);\n        setTimeout(() => {\n          fetchTags(retryCount + 1);\n        }, delay);\n        return;\n      }\n\n      // Continuar sin tags si hay error despu√©s de retries\n      logger.dashboard.warn(\"‚ö†Ô∏è Continuando sin tags despu√©s de errores\");\n      await fetchTickets(jsonString);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [jsonString, isLoading]);\n  useEffect(() => {\n    // Agregar delay para evitar requests simult√°neos\n    const timer = setTimeout(() => {\n      fetchTags();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [fetchTags]);\n  const fetchTickets = async jsonString => {\n    try {\n      var _data$tickets;\n      logger.dashboard.debug(\"üîÑ Cargando tickets de Kanban...\");\n      const {\n        data\n      } = await api.get(\"/ticket/kanban\", {\n        params: {\n          queueIds: JSON.stringify(jsonString),\n          teste: true\n        }\n      });\n      setTickets(data.tickets);\n      logger.dashboard.debug(\"‚úÖ Tickets cargados:\", ((_data$tickets = data.tickets) === null || _data$tickets === void 0 ? void 0 : _data$tickets.length) || 0);\n    } catch (err) {\n      logger.dashboard.error(\"‚ùå Error cargando tickets:\", err);\n      // Si es error de autenticaci√≥n, no hacer nada (ya manejado por interceptor)\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n        logger.dashboard.warn(\"üîÑ Error de autenticaci√≥n, manejado por interceptor\");\n        return;\n      }\n      setTickets([]);\n    }\n  };\n  const handleCardMove = async (cardId, sourceLaneId, targetLaneId) => {\n    try {\n      logger.dashboard.debug(\"üîÑ Moviendo ticket:\", {\n        cardId,\n        sourceLaneId,\n        targetLaneId\n      });\n\n      // ‚úÖ MANEJAR CASO ESPECIAL: ABIERTOS (sin etiquetas)\n      if (targetLaneId === 'abiertos') {\n        // Solo eliminar etiquetas existentes para mover a ABIERTOS\n        if (sourceLaneId && sourceLaneId !== targetLaneId) {\n          try {\n            const sourceTag = tags.find(tag => {\n              if (sourceLaneId === 'atencion') return tag.name === 'Atenci√≥n';\n              if (sourceLaneId === 'cerrado') return tag.name === 'Cerrado';\n              return false;\n            });\n            if (sourceTag) {\n              await api.delete(`/ticket-tags/${cardId}`);\n              logger.dashboard.debug(\"‚úÖ Etiqueta eliminada para mover a ABIERTOS\");\n            }\n          } catch (deleteErr) {\n            var _deleteErr$response;\n            logger.dashboard.debug(\"‚ÑπÔ∏è Etiqueta no exist√≠a en origen:\", (_deleteErr$response = deleteErr.response) === null || _deleteErr$response === void 0 ? void 0 : _deleteErr$response.status);\n          }\n        }\n        toast.success('Ticket movido a ABIERTOS exitosamente!');\n        logger.dashboard.debug(\"‚úÖ Ticket movido a ABIERTOS\");\n\n        // Recargar datos despu√©s del movimiento\n        setTimeout(() => {\n          fetchTags();\n        }, 500);\n        return;\n      }\n\n      // ‚úÖ MANEJAR ETIQUETAS NORMALES (ATENCI√ìN, CERRADO)\n      const targetTag = tags.find(tag => {\n        if (targetLaneId === 'atencion') return tag.name === 'Atenci√≥n';\n        if (targetLaneId === 'cerrado') return tag.name === 'Cerrado';\n        return false;\n      });\n      if (!targetTag) {\n        logger.dashboard.error(\"‚ùå Tag no encontrado para:\", targetLaneId);\n        toast.error('Error: Tag no encontrado');\n        return;\n      }\n\n      // Solo eliminar el tag si existe en el origen\n      if (sourceLaneId && sourceLaneId !== targetLaneId) {\n        try {\n          // Encontrar el tag del origen\n          const sourceTag = tags.find(tag => {\n            if (sourceLaneId === 'atencion') return tag.name === 'Atenci√≥n';\n            if (sourceLaneId === 'cerrado') return tag.name === 'Cerrado';\n            return false;\n          });\n          if (sourceTag) {\n            await api.delete(`/ticket-tags/${cardId}`);\n            logger.dashboard.debug(\"‚úÖ Tag eliminado del origen\");\n          }\n        } catch (deleteErr) {\n          var _deleteErr$response2;\n          // Si el tag no existe, no es un error\n          logger.dashboard.debug(\"‚ÑπÔ∏è Tag no exist√≠a en origen:\", (_deleteErr$response2 = deleteErr.response) === null || _deleteErr$response2 === void 0 ? void 0 : _deleteErr$response2.status);\n        }\n      }\n\n      // Agregar el tag al destino\n      if (targetTag) {\n        await api.put(`/ticket-tags/${cardId}/${targetTag.id}`);\n        logger.dashboard.debug(\"‚úÖ Tag agregado al destino\");\n        toast.success('Ticket movido exitosamente!');\n      }\n      logger.dashboard.debug(\"‚úÖ Ticket movido exitosamente\");\n\n      // Recargar datos despu√©s del movimiento\n      setTimeout(() => {\n        fetchTags();\n      }, 500);\n    } catch (err) {\n      logger.dashboard.error(\"‚ùå Error moviendo ticket:\", err);\n      toast.error('Error al mover el ticket');\n    }\n  };\n  const handleCardClick = ticket => {\n    history.push('/tickets/' + ticket.uuid);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(KanbanBoard, {\n    tickets: tickets,\n    tags: tags,\n    onCardMove: handleCardMove,\n    onCardClick: handleCardClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Kanban;","map":{"version":3,"names":["React","useState","useEffect","useContext","useCallback","makeStyles","api","AuthContext","toast","useHistory","KanbanBoard","logger","useStyles","theme","root","display","alignItems","padding","spacing","height","button","background","border","color","fontWeight","borderRadius","Kanban","classes","history","tags","setTags","tickets","setTickets","isLoading","setIsLoading","user","jsonString","queues","map","queue","UserQueue","queueId","fetchTags","retryCount","dashboard","debug","response","get","fetchedTags","data","lista","length","fetchTickets","error","_error$message","status","code","message","includes","delay","Math","pow","warn","setTimeout","timer","clearTimeout","_data$tickets","params","queueIds","JSON","stringify","teste","err","handleCardMove","cardId","sourceLaneId","targetLaneId","sourceTag","find","tag","name","delete","deleteErr","_deleteErr$response","success","targetTag","_deleteErr$response2","put","id","handleCardClick","ticket","push","uuid","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onCardMove","onCardClick"],"sources":["C:/laragon/www/whaticket03/waticketsaas/frontend/src/pages/Kanban/index.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport api from \"../../services/api\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from 'react-router-dom';\nimport KanbanBoard from \"../../components/KanbanBoard\";\nimport logger from \"../../utils/logger\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(1),\n    height: \"100%\",\n  },\n  button: {\n    background: \"#10a110\",\n    border: \"none\",\n    padding: \"10px\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    borderRadius: \"5px\",\n  },\n}));\n\nconst Kanban = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [tags, setTags] = useState([]);\n  const [tickets, setTickets] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { user } = useContext(AuthContext);\n  const jsonString = user.queues.map(queue => queue.UserQueue.queueId);\n\n  const fetchTags = useCallback(async (retryCount = 0) => {\n    if (isLoading) return; // Evitar requests m√∫ltiples\n    \n    try {\n      setIsLoading(true);\n      logger.dashboard.debug(\"üîÑ Cargando tags de Kanban...\");\n      const response = await api.get(\"/tags/kanban\");\n      const fetchedTags = response.data.lista || []; \n      setTags(fetchedTags);\n      logger.dashboard.debug(\"‚úÖ Tags cargados:\", fetchedTags.length);\n      // Fetch tickets after fetching tags\n      await fetchTickets(jsonString);\n    } catch (error) {\n      // ‚úÖ MANEJO SILENCIOSO DE ERRORES DE AUTENTICACI√ìN\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n        logger.dashboard.debug(\"üîÑ Error de autenticaci√≥n silenciado:\", error.response.status);\n        // No mostrar error en consola para evitar spam\n        return;\n      }\n      \n      // Solo mostrar errores que no sean de autenticaci√≥n\n      logger.dashboard.error(\"‚ùå Error cargando tags:\", error);\n      \n      // Retry con backoff exponencial para errores de red\n      if (retryCount < 3 && (error.code === 'ERR_INSUFFICIENT_RESOURCES' || error.message?.includes('ERR_INSUFFICIENT_RESOURCES'))) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        logger.dashboard.warn(`üîÑ Reintentando en ${delay}ms (intento ${retryCount + 1}/3)`);\n        setTimeout(() => {\n          fetchTags(retryCount + 1);\n        }, delay);\n        return;\n      }\n      \n      // Continuar sin tags si hay error despu√©s de retries\n      logger.dashboard.warn(\"‚ö†Ô∏è Continuando sin tags despu√©s de errores\");\n      await fetchTickets(jsonString);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [jsonString, isLoading]);\n\n  useEffect(() => {\n    // Agregar delay para evitar requests simult√°neos\n    const timer = setTimeout(() => {\n      fetchTags();\n    }, 1000);\n    \n    return () => clearTimeout(timer);\n  }, [fetchTags]);\n\n  const fetchTickets = async (jsonString) => {\n    try {\n      logger.dashboard.debug(\"üîÑ Cargando tickets de Kanban...\");\n      const { data } = await api.get(\"/ticket/kanban\", {\n        params: {\n          queueIds: JSON.stringify(jsonString),\n          teste: true\n        }\n      });\n      setTickets(data.tickets);\n      logger.dashboard.debug(\"‚úÖ Tickets cargados:\", data.tickets?.length || 0);\n    } catch (err) {\n      logger.dashboard.error(\"‚ùå Error cargando tickets:\", err);\n      // Si es error de autenticaci√≥n, no hacer nada (ya manejado por interceptor)\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n        logger.dashboard.warn(\"üîÑ Error de autenticaci√≥n, manejado por interceptor\");\n        return;\n      }\n      setTickets([]);\n    }\n  };\n\n  const handleCardMove = async (cardId, sourceLaneId, targetLaneId) => {\n    try {\n      logger.dashboard.debug(\"üîÑ Moviendo ticket:\", { cardId, sourceLaneId, targetLaneId });\n      \n      // ‚úÖ MANEJAR CASO ESPECIAL: ABIERTOS (sin etiquetas)\n      if (targetLaneId === 'abiertos') {\n        // Solo eliminar etiquetas existentes para mover a ABIERTOS\n        if (sourceLaneId && sourceLaneId !== targetLaneId) {\n          try {\n            const sourceTag = tags.find(tag => {\n              if (sourceLaneId === 'atencion') return tag.name === 'Atenci√≥n';\n              if (sourceLaneId === 'cerrado') return tag.name === 'Cerrado';\n              return false;\n            });\n            \n            if (sourceTag) {\n              await api.delete(`/ticket-tags/${cardId}`);\n              logger.dashboard.debug(\"‚úÖ Etiqueta eliminada para mover a ABIERTOS\");\n            }\n          } catch (deleteErr) {\n            logger.dashboard.debug(\"‚ÑπÔ∏è Etiqueta no exist√≠a en origen:\", deleteErr.response?.status);\n          }\n        }\n        \n        toast.success('Ticket movido a ABIERTOS exitosamente!');\n        logger.dashboard.debug(\"‚úÖ Ticket movido a ABIERTOS\");\n        \n        // Recargar datos despu√©s del movimiento\n        setTimeout(() => {\n          fetchTags();\n        }, 500);\n        return;\n      }\n      \n      // ‚úÖ MANEJAR ETIQUETAS NORMALES (ATENCI√ìN, CERRADO)\n      const targetTag = tags.find(tag => {\n        if (targetLaneId === 'atencion') return tag.name === 'Atenci√≥n';\n        if (targetLaneId === 'cerrado') return tag.name === 'Cerrado';\n        return false;\n      });\n      \n      if (!targetTag) {\n        logger.dashboard.error(\"‚ùå Tag no encontrado para:\", targetLaneId);\n        toast.error('Error: Tag no encontrado');\n        return;\n      }\n      \n      // Solo eliminar el tag si existe en el origen\n      if (sourceLaneId && sourceLaneId !== targetLaneId) {\n        try {\n          // Encontrar el tag del origen\n          const sourceTag = tags.find(tag => {\n            if (sourceLaneId === 'atencion') return tag.name === 'Atenci√≥n';\n            if (sourceLaneId === 'cerrado') return tag.name === 'Cerrado';\n            return false;\n          });\n          \n          if (sourceTag) {\n            await api.delete(`/ticket-tags/${cardId}`);\n            logger.dashboard.debug(\"‚úÖ Tag eliminado del origen\");\n          }\n        } catch (deleteErr) {\n          // Si el tag no existe, no es un error\n          logger.dashboard.debug(\"‚ÑπÔ∏è Tag no exist√≠a en origen:\", deleteErr.response?.status);\n        }\n      }\n      \n      // Agregar el tag al destino\n      if (targetTag) {\n        await api.put(`/ticket-tags/${cardId}/${targetTag.id}`);\n        logger.dashboard.debug(\"‚úÖ Tag agregado al destino\");\n        toast.success('Ticket movido exitosamente!');\n      }\n      \n      logger.dashboard.debug(\"‚úÖ Ticket movido exitosamente\");\n      \n      // Recargar datos despu√©s del movimiento\n      setTimeout(() => {\n        fetchTags();\n      }, 500);\n      \n    } catch (err) {\n      logger.dashboard.error(\"‚ùå Error moviendo ticket:\", err);\n      toast.error('Error al mover el ticket');\n    }\n  };\n\n  const handleCardClick = (ticket) => {\n    history.push('/tickets/' + ticket.uuid);\n  };\n\n  return (\n    <div className={classes.root}>\n      <KanbanBoard \n        tickets={tickets}\n        tags={tags}\n        onCardMove={handleCardMove}\n        onCardClick={handleCardClick}\n      />\n    </div>\n  );\n};\n\nexport default Kanban;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}