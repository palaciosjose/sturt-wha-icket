#!/bin/bash
# /home/watoolxoficial/scripts/send-hybrid-alert.sh
# Script h√≠brido para enviar alertas por WhatsApp Y Email autom√°ticamente
# Autor: Asistente AI + Equipo de Desarrollo
# Fecha: 16 de Agosto 2025
# Versi√≥n: 1.0 (H√≠brida)

# Configuraci√≥n
ALERT_FILE="/tmp/watoolx-alerts.log"
LOG_FILE="/var/log/watoolx-hybrid-alerts.log"
WHATSAPP_TOKEN_FILE="/home/watoolxoficial/.whatsapp-token"
EMAIL_CONFIG_FILE="/home/watoolxoficial/.email-config"
ADMIN_NUMBER="51959858768"  # WhatsApp del admin

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# Funci√≥n de logging
log_message() {
    local level=$1
    local message=$2
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    case $level in
        "INFO") echo -e "${GREEN}[INFO]${NC} $timestamp - $message" | tee -a $LOG_FILE ;;
        "WARN") echo -e "${YELLOW}[WARN]${NC} $timestamp - $message" ;;
        "ERROR") echo -e "${RED}[ERROR]${NC} $timestamp - $message" | tee -a $LOG_FILE ;;
        "DEBUG") echo -e "${BLUE}[DEBUG]${NC} $timestamp - $message" | tee -a $LOG_FILE ;;
        "HYBRID") echo -e "${PURPLE}[HYBRID]${NC} $timestamp - $message" | tee -a $LOG_FILE ;;
    esac
}

# Funci√≥n para obtener token de WhatsApp
get_whatsapp_token() {
    if [ -f "$WHATSAPP_TOKEN_FILE" ]; then
        cat "$WHATSAPP_TOKEN_FILE"
    else
        log_message "ERROR" "‚ùå Archivo de token WhatsApp no encontrado: $WHATSAPP_TOKEN_FILE"
        return 1
    fi
}

# Funci√≥n para cargar configuraci√≥n de email
load_email_config() {
    if [ ! -f "$EMAIL_CONFIG_FILE" ]; then
        log_message "ERROR" "‚ùå Archivo de configuraci√≥n email no encontrado: $EMAIL_CONFIG_FILE"
        return 1
    fi
    
    source "$EMAIL_CONFIG_FILE"
    
    if [ -z "$GMAIL_USER" ] || [ -z "$GMAIL_PASS" ] || [ -z "$ADMIN_EMAIL" ]; then
        log_message "ERROR" "‚ùå Configuraci√≥n email incompleta"
        return 1
    fi
    
    return 0
}

# Funci√≥n para enviar alerta por WhatsApp
send_whatsapp_alert() {
    local subject="$1"
    local message="$2"
    
    local token=$(get_whatsapp_token)
    if [ $? -ne 0 ]; then
        return 1
    fi
    
    local full_message="üö® ALERTA WATOOLX üö®\n\n$subject\n\n$message\n\n‚è∞ Fecha: $(date '+%Y-%m-%d %H:%M:%S')\nüñ•Ô∏è Servidor: $(hostname)\nüåê IP: $(curl -s ifconfig.me 2>/dev/null || echo 'N/A')\n\nüîß Sistema de Monitoreo Autom√°tico\nWATOOLX v2.0"
    
    local response=$(curl -s -X POST "https://waapi.powerwapp.net/api/messages/send" \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" \
        -d "{
            \"number\": \"$ADMIN_NUMBER\",
            \"body\": \"$full_message\"
        }" 2>/dev/null)
    
    if [[ "$response" == *"error"* ]]; then
        log_message "ERROR" "‚ùå Error WhatsApp: $response"
        return 1
    else
        log_message "INFO" "‚úÖ Alerta WhatsApp enviada exitosamente"
        return 0
    fi
}

# Funci√≥n para enviar alerta por email
send_email_alert() {
    local subject="$1"
    local message="$2"
    
    if ! load_email_config; then
        return 1
    fi
    
    # Crear archivo temporal para el email
    local temp_email="/tmp/watoolx-alert-$(date +%s).eml"
    
    # Crear contenido del email
    cat > "$temp_email" << EOF
From: WATOOLX Monitor <$GMAIL_USER@gmail.com>
To: $ADMIN_EMAIL
Subject: $subject
Content-Type: text/html; charset=UTF-8
MIME-Version: 1.0

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }
        .container { max-width: 600px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .alert { background: linear-gradient(135deg, #ff4444, #cc0000); color: white; padding: 20px; border-radius: 8px; text-align: center; margin-bottom: 20px; }
        .info { background: #f8f9fa; padding: 15px; border-radius: 5px; margin: 15px 0; border-left: 4px solid #007bff; }
        .success { background: linear-gradient(135deg, #44ff44, #00cc00); color: black; padding: 15px; border-radius: 5px; text-align: center; margin: 15px 0; }
        .timestamp { color: #666; font-size: 12px; text-align: center; margin-top: 20px; }
        .hybrid-badge { background: #6f42c1; color: white; padding: 5px 10px; border-radius: 15px; font-size: 12px; display: inline-block; margin-bottom: 10px; }
        pre { white-space: pre-wrap; font-family: 'Courier New', monospace; background: #f8f9fa; padding: 10px; border-radius: 3px; border: 1px solid #e9ecef; }
    </style>
</head>
<body>
    <div class="container">
        <div class="hybrid-badge">üîÄ SISTEMA H√çBRIDO WATOOLX</div>
        
        <div class="alert">
            <h1>üö® ALERTA WATOOLX üö®</h1>
            <h2>$subject</h2>
        </div>
        
        <div class="info">
            <h3>üìã Detalles del Incidente:</h3>
            <pre>$message</pre>
        </div>
        
        <div class="info">
            <h3>üñ•Ô∏è Informaci√≥n del Sistema:</h3>
            <strong>‚è∞ Fecha:</strong> $(date '+%Y-%m-%d %H:%M:%S')<br>
            <strong>üñ•Ô∏è Servidor:</strong> $(hostname)<br>
            <strong>üåê IP:</strong> $(curl -s ifconfig.me 2>/dev/null || echo 'N/A')<br>
            <strong>üîß Sistema:</strong> WATOOLX v2.0<br>
            <strong>üì± Notificaci√≥n:</strong> WhatsApp + Email
        </div>
        
        <div class="success">
            <strong>‚úÖ Esta alerta fue enviada autom√°ticamente por el sistema h√≠brido de monitoreo WATOOLX</strong><br>
            <small>Recibiste esta alerta por email. Tambi√©n se envi√≥ por WhatsApp para notificaci√≥n inmediata.</small>
        </div>
        
        <div class="timestamp">
            Enviado autom√°ticamente el $(date '+%Y-%m-%d %H:%M:%S UTC')<br>
            Sistema H√≠brido WATOOLX - WhatsApp + Email
        </div>
    </div>
</body>
</html>
EOF

    # Enviar email usando curl con Gmail SMTP
    local response=$(curl -s --mail-from "$GMAIL_USER@gmail.com" \
        --mail-rcpt "$ADMIN_EMAIL" \
        --upload-file "$temp_email" \
        --ssl-reqd \
        --user "$GMAIL_USER@gmail.com:$GMAIL_PASS" \
        smtps://smtp.gmail.com:465 2>&1)
    
    # Limpiar archivo temporal
    rm -f "$temp_email"
    
    if [ $? -eq 0 ]; then
        log_message "INFO" "‚úÖ Alerta email enviada exitosamente a $ADMIN_EMAIL"
        return 0
    else
        log_message "ERROR" "‚ùå Error al enviar email: $response"
        return 1
    fi
}

# Funci√≥n para enviar alerta h√≠brida (WhatsApp + Email)
send_hybrid_alert() {
    local subject="$1"
    local message="$2"
    
    log_message "HYBRID" "üöÄ Enviando alerta h√≠brida (WhatsApp + Email)..."
    
    local whatsapp_success=false
    local email_success=false
    
    # Intentar WhatsApp primero (m√°s r√°pido)
    log_message "DEBUG" "üì± Intentando env√≠o por WhatsApp..."
    if send_whatsapp_alert "$subject" "$message"; then
        whatsapp_success=true
        log_message "INFO" "‚úÖ WhatsApp: Enviado exitosamente"
    else
        log_message "WARN" "‚ö†Ô∏è WhatsApp: Fall√≥, continuando con email"
    fi
    
    # Intentar Email
    log_message "DEBUG" "üìß Intentando env√≠o por email..."
    if send_email_alert "$subject" "$message"; then
        email_success=true
        log_message "INFO" "‚úÖ Email: Enviado exitosamente"
    else
        log_message "WARN" "‚ö†Ô∏è Email: Fall√≥"
    fi
    
    # Resumen del env√≠o h√≠brido
    if [ "$whatsapp_success" = true ] && [ "$email_success" = true ]; then
        log_message "HYBRID" "üéâ ¬°Alerta h√≠brida enviada exitosamente por AMBOS canales!"
        return 0
    elif [ "$whatsapp_success" = true ] || [ "$email_success" = true ]; then
        log_message "HYBRID" "‚ö†Ô∏è Alerta enviada parcialmente (WhatsApp: $whatsapp_success, Email: $email_success)"
        return 0
    else
        log_message "ERROR" "‚ùå Alerta h√≠brida fall√≥ en ambos canales"
        return 1
    fi
}

# Funci√≥n para procesar alertas pendientes
process_pending_alerts() {
    if [ ! -f "$ALERT_FILE" ] || [ ! -s "$ALERT_FILE" ]; then
        log_message "DEBUG" "‚ÑπÔ∏è No hay alertas pendientes"
        return 0
    fi
    
    log_message "HYBRID" "üîÑ Procesando alertas pendientes con sistema h√≠brido..."
    
    # Leer y procesar cada alerta
    while IFS= read -r line; do
        if [ ! -z "$line" ]; then
            # Extraer informaci√≥n de la alerta
            local timestamp=$(echo "$line" | cut -d' ' -f1-3)
            local alert_type=$(echo "$line" | cut -d' ' -f6-)
            
            # Enviar alerta h√≠brida
            send_hybrid_alert "ALERTA DEL SISTEMA WATOOLX" "$alert_type"
            
            if [ $? -eq 0 ]; then
                log_message "HYBRID" "‚úÖ Alerta h√≠brida procesada: $alert_type"
            else
                log_message "ERROR" "‚ùå Error procesando alerta h√≠brida: $alert_type"
            fi
            
            # Peque√±a pausa entre alertas para evitar spam
            sleep 2
        fi
    done < "$ALERT_FILE"
    
    # Limpiar archivo de alertas
    > "$ALERT_FILE"
    log_message "HYBRID" "üßπ Archivo de alertas limpiado"
}

# Funci√≥n para enviar alerta inmediata
send_immediate_hybrid_alert() {
    local subject="$1"
    local message="$2"
    
    log_message "HYBRID" "üö® Enviando alerta h√≠brida inmediata..."
    send_hybrid_alert "$subject" "$message"
}

# Funci√≥n para configurar sistema h√≠brido
setup_hybrid() {
    log_message "HYBRID" "üîß Configurando sistema h√≠brido de alertas..."
    
    echo "=== CONFIGURACI√ìN DEL SISTEMA H√çBRIDO WATOOLX ==="
    echo ""
    echo "üéØ Este sistema enviar√° alertas por WhatsApp Y Email autom√°ticamente"
    echo ""
    
    # Verificar WhatsApp
    echo "üì± CONFIGURACI√ìN WHATSAPP:"
    if [ -f "$WHATSAPP_TOKEN_FILE" ]; then
        echo "‚úÖ Token WhatsApp encontrado"
    else
        echo "‚ùå Token WhatsApp no encontrado"
        echo "üí° Ejecuta: ./send-whatsapp-alert.sh setup"
        echo ""
    fi
    
    # Verificar Email
    echo "üìß CONFIGURACI√ìN EMAIL:"
    if [ -f "$EMAIL_CONFIG_FILE" ]; then
        echo "‚úÖ Configuraci√≥n email encontrada"
    else
        echo "‚ùå Configuraci√≥n email no encontrada"
        echo "üí° Ejecuta: ./send-email-alert.sh setup"
        echo ""
    fi
    
    echo ""
    echo "üîç VERIFICANDO ESTADO COMPLETO..."
    
    local whatsapp_ok=false
    local email_ok=false
    
    # Probar WhatsApp
    if [ -f "$WHATSAPP_TOKEN_FILE" ]; then
        echo "üß™ Probando WhatsApp..."
        if send_whatsapp_alert "PRUEBA H√çBRIDA" "Prueba del sistema h√≠brido WATOOLX"; then
            whatsapp_ok=true
            echo "‚úÖ WhatsApp: Funcionando"
        else
            echo "‚ùå WhatsApp: Fall√≥"
        fi
    fi
    
    # Probar Email
    if [ -f "$EMAIL_CONFIG_FILE" ]; then
        echo "üß™ Probando Email..."
        if send_email_alert "PRUEBA H√çBRIDA" "Prueba del sistema h√≠brido WATOOLX"; then
            email_ok=true
            echo "‚úÖ Email: Funcionando"
        else
            echo "‚ùå Email: Fall√≥"
        fi
    fi
    
    echo ""
    echo "=== RESUMEN DE CONFIGURACI√ìN ==="
    echo "üì± WhatsApp: $(if [ "$whatsapp_ok" = true ]; then echo "‚úÖ FUNCIONANDO"; else echo "‚ùå NO FUNCIONA"; fi)"
    echo "üìß Email: $(if [ "$email_ok" = true ]; then echo "‚úÖ FUNCIONANDO"; else echo "‚ùå NO FUNCIONA"; fi)"
    echo ""
    
    if [ "$whatsapp_ok" = true ] && [ "$email_ok" = true ]; then
        echo "üéâ ¬°SISTEMA H√çBRIDO COMPLETAMENTE FUNCIONAL!"
        echo "‚úÖ Las alertas se enviar√°n por ambos canales autom√°ticamente"
    elif [ "$whatsapp_ok" = true ] || [ "$email_ok" = true ]; then
        echo "‚ö†Ô∏è SISTEMA PARCIALMENTE FUNCIONAL"
        echo "‚úÖ Las alertas se enviar√°n por el canal que funcione"
    else
        echo "‚ùå SISTEMA NO FUNCIONAL"
        echo "üîß Configura al menos un canal antes de continuar"
    fi
}

# Funci√≥n para probar sistema h√≠brido
test_hybrid() {
    log_message "HYBRID" "üß™ Probando sistema h√≠brido completo..."
    
    local test_message="üß™ PRUEBA DEL SISTEMA H√çBRIDO

Este es un mensaje de prueba del sistema h√≠brido WATOOLX.

‚úÖ Si recibes este mensaje por WhatsApp Y Email, el sistema est√° funcionando perfectamente.

üéØ Caracter√≠sticas del sistema h√≠brido:
‚Ä¢ üì± WhatsApp: Notificaci√≥n inmediata
‚Ä¢ üìß Email: Documentaci√≥n completa
‚Ä¢ üîÑ Redundancia: Si falla uno, el otro funciona
‚Ä¢ ‚ö° Autom√°tico: Sin intervenci√≥n manual

‚è∞ Fecha: $(date '+%Y-%m-%d %H:%M:%S')
üñ•Ô∏è Servidor: $(hostname)"

    send_hybrid_alert "PRUEBA DEL SISTEMA H√çBRIDO WATOOLX" "$test_message"
    
    if [ $? -eq 0 ]; then
        log_message "HYBRID" "üéâ ¬°Prueba h√≠brida exitosa! Revisa WhatsApp y Email"
        echo "üéâ ¬°Prueba h√≠brida exitosa! Revisa WhatsApp y Email"
    else
        log_message "ERROR" "‚ùå Prueba h√≠brida fallida. Revisa los logs"
        echo "‚ùå Prueba h√≠brida fallida. Revisa los logs"
    fi
}

# Funci√≥n para mostrar estado
show_status() {
    echo "=== ESTADO DEL SISTEMA H√çBRIDO WATOOLX ==="
    echo ""
    
    # Estado WhatsApp
    echo "üì± WHATSAPP:"
    if [ -f "$WHATSAPP_TOKEN_FILE" ]; then
        echo "  ‚úÖ Token encontrado"
        echo "  üìÅ Archivo: $WHATSAPP_TOKEN_FILE"
    else
        echo "  ‚ùå Token no encontrado"
    fi
    
    # Estado Email
    echo "üìß EMAIL:"
    if [ -f "$EMAIL_CONFIG_FILE" ]; then
        echo "  ‚úÖ Configuraci√≥n encontrada"
        echo "  üìÅ Archivo: $EMAIL_CONFIG_FILE"
    else
        echo "  ‚ùå Configuraci√≥n no encontrada"
    fi
    
    echo ""
    echo "üìù Log del sistema: $LOG_FILE"
    echo "üö® Alertas pendientes: $(if [ -f "$ALERT_FILE" ] && [ -s "$ALERT_FILE" ]; then echo "S√ç"; else echo "NO"; fi)"
    echo ""
    
    # Verificar funcionalidad
    local whatsapp_working=false
    local email_working=false
    
    if [ -f "$WHATSAPP_TOKEN_FILE" ]; then
        whatsapp_working=true
    fi
    
    if [ -f "$EMAIL_CONFIG_FILE" ]; then
        email_working=true
    fi
    
    if [ "$whatsapp_working" = true ] && [ "$email_working" = true ]; then
        echo "üéâ SISTEMA H√çBRIDO COMPLETAMENTE CONFIGURADO"
        echo "‚úÖ Listo para enviar alertas por ambos canales"
    elif [ "$whatsapp_working" = true ] || [ "$email_working" = true ]; then
        echo "‚ö†Ô∏è SISTEMA PARCIALMENTE CONFIGURADO"
        echo "‚úÖ Funcionar√° con el canal disponible"
    else
        echo "‚ùå SISTEMA NO CONFIGURADO"
        echo "üîß Ejecuta: $0 setup"
    fi
}

# Funci√≥n principal
main() {
    local action=$1
    
    case $action in
        "setup")
            setup_hybrid
            ;;
        "test")
            test_hybrid
            ;;
        "status")
            show_status
            ;;
        "send")
            if [ -z "$2" ] || [ -z "$3" ]; then
                echo "Uso: $0 send 'Asunto' 'Mensaje'"
                exit 1
            fi
            send_immediate_hybrid_alert "$2" "$3"
            ;;
        "process")
            process_pending_alerts
            ;;
        "monitor")
            log_message "HYBRID" "üöÄ Iniciando monitoreo h√≠brido de alertas..."
            while true; do
                process_pending_alerts
                sleep 300  # 5 minutos
            done
            ;;
        *)
            echo "Uso: $0 {setup|test|status|send|process|monitor}"
            echo ""
            echo "üéØ SISTEMA H√çBRIDO WATOOLX - WhatsApp + Email"
            echo ""
            echo "Acciones disponibles:"
            echo "  setup     - Configurar sistema h√≠brido completo"
            echo "  test      - Probar env√≠o h√≠brido (WhatsApp + Email)"
            echo "  status    - Mostrar estado del sistema h√≠brido"
            echo "  send      - Enviar alerta h√≠brida inmediata"
            echo "  process   - Procesar alertas pendientes"
            echo "  monitor   - Monitoreo continuo de alertas"
            echo ""
            echo "üîÄ VENTAJAS DEL SISTEMA H√çBRIDO:"
            echo "  ‚Ä¢ üì± WhatsApp: Notificaci√≥n inmediata"
            echo "  ‚Ä¢ üìß Email: Documentaci√≥n completa"
            echo "  ‚Ä¢ üîÑ Redundancia: Si falla uno, el otro funciona"
            echo "  ‚Ä¢ ‚ö° Autom√°tico: Sin intervenci√≥n manual"
            echo ""
            echo "Ejemplos:"
            echo "  $0 setup                    # Configuraci√≥n inicial"
            echo "  $0 test                     # Probar sistema completo"
            echo "  $0 send 'ALERTA' 'Mensaje' # Enviar alerta h√≠brida"
            echo "  $0 monitor                  # Monitoreo autom√°tico"
            exit 1
            ;;
    esac
    
    log_message "HYBRID" "‚úÖ Operaci√≥n '$action' completada exitosamente"
}

# Banner
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë              WATOOLX HYBRID ALERTS                          ‚ïë"
echo "‚ïë                        v1.0 - 2025                          ‚ïë"
echo "‚ïë                WhatsApp + Email                              ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"

# Verificar si se ejecuta como root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå Este script debe ejecutarse como root"
    exit 1
fi

# Crear directorio de logs si no existe
mkdir -p $(dirname $LOG_FILE)

# Ejecutar funci√≥n principal
main "$@"
